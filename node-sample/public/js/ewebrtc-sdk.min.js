/*! ewebrtc-sdk_14-08-2015 */
if(function(){"use strict";var a={"private":{factories:{},config:{}},utils:{},logManager:{},RESTClient:{},rtc:{},browser:{}};window.ATT=a}(),!ATT)var ATT={};if(function(a){"use strict";function b(a){return String(Number(a))===a?Number(a):a}function c(a,c,d,e){var f;if(e&&!d)c[e]=b(a[1]);else for(f=0;f<d.length;f+=1)a[f+1]&&(c[d[f]]=b(a[f+1]))}function d(a,b,d){var e,f=a.name&&a.names;a.push&&!b[a.push]?b[a.push]=[]:f&&!b[a.name]&&(b[a.name]={}),e=a.push?{}:f?b[a.name]:b,c(d.match(a.reg),e,a.names,a.name),a.push&&b[a.push].push(e)}function e(a){var b={},c=[],e=b;return a.split("\r\n").filter(m).forEach(function(a){var b,f,g=a[0],h=a.slice(2);for("m"===g&&(c.push({rtp:[],fmtp:[]}),e=c[c.length-1]),f=0;f<(k[g]||[]).length;f+=1)if(b=k[g][f],b.reg.test(h))return d(b,e,h)}),b.media=c,b}function f(a){var b=1,c=arguments,d=c.length;return a.replace(n,function(a){if(b>=d)return a;var e=c[b];switch(b+=1,a){case"%%":return"%";case"%s":return String(e);case"%d":return Number(e);case"%v":return""}})}function g(a,b,c){var d,e,g,h=b.format instanceof Function?b.format(b.push?c:c[b.name]):b.format;if(g=[a+"="+h],b.names)for(d=0;d<b.names.length;d+=1)e=b.names[d],b.name?g.push(c[b.name][e]):g.push(c[b.names[d]]);else g.push(c[b.name]);return f.apply(null,g)}function h(a,b){b=b||{},a.version||(a.version=0),a.name||(a.name=" "),a.media.forEach(function(a){null==a.payloads&&(a.payloads="")});var c=b.outerOrder||q,d=b.innerOrder||p,e=[];return c.forEach(function(b){k[b].forEach(function(c){a.hasOwnProperty(c.name)?e.push(g(b,c,a)):a.hasOwnProperty(c.push)&&a[c.push].forEach(function(a){e.push(g(b,c,a))})})}),a.media.forEach(function(a){e.push(g("m",k.m[0],a)),d.forEach(function(b){k[b].forEach(function(c){a.hasOwnProperty(c.name)?e.push(g(b,c,a)):a.hasOwnProperty(c.push)&&a[c.push].forEach(function(a){e.push(g(b,c,a))})})})}),e.join("\r\n")+"\r\n"}function i(){return{parse:function(a){return e(a)},write:function(a){return h(a)}}}var j,k,l,m,n,o={},p=["i","c","b","a"],q=["v","o","s","i","u","e","p","c","b","t","r","z","a"];k={v:[{name:"version",reg:/^(\d*)$/}],o:[{name:"origin",reg:/^(\S*) (\d*) (\d*) (\S*) IP(\d) (\S*)/,names:["username","sessionId","sessionVersion","netType","ipVer","address"],format:"%s %s %d %s IP%d %s"}],s:[{name:"name"}],i:[{name:"description"}],u:[{name:"uri"}],e:[{name:"email"}],p:[{name:"phone"}],z:[{name:"timezones"}],r:[{name:"repeats"}],t:[{name:"timing",reg:/^(\d*) (\d*)/,names:["start","stop"],format:"%d %d"}],c:[{name:"connection",reg:/^IN IP(\d) (\S*)/,names:["version","ip"],format:"IN IP%d %s"}],b:[{push:"bandwidth",reg:/^(TIAS|AS|CT|RR|RS):(\d*)/,names:["type","limit"],format:"%s:%s"}],m:[{reg:/^(\w*) (\d*) ([\w\/]*)(?: ([\w\W]*))?/,names:["type","port","protocol","payloads"],format:"%s %d %s %s"}],a:[{push:"rtp",reg:/^rtpmap:(\d*) ([\w\-]*)\/(\d*)(?:\s*\/(\S*))?/,names:["payload","codec","rate","encoding"],format:function(a){return null!=a.encoding?"rtpmap:%d %s/%s/%s":"rtpmap:%d %s/%s"}},{push:"fmtp",reg:/^fmtp:(\d*) ([\S\s]*)/,names:["payload","config"],format:"fmtp:%d %s"},{name:"control",reg:/^control:([\w\W]*)/,format:"control:%s"},{name:"rtcp",reg:/^rtcp:(\d*)(?: (\S*) IP(\d) (\S*))?/,names:["port","netType","ipVer","address"],format:function(a){return null!=a.address?"rtcp:%d %s IP%d %s":"rtcp:%d"}},{push:"rtcpFbTrrInt",reg:/^rtcp-fb:(\*|\d*) trr-int (\d*)/,names:["payload","value"],format:"rtcp-fb:%d trr-int %d"},{push:"rtcpFb",reg:/^rtcp-fb:(\*|\d*) ([\-\w_]*)(?: ([\-\w_]*))?/,names:["payload","type","subtype"],format:function(a){return null!=a.subtype?"rtcp-fb:%s %s %s":"rtcp-fb:%s %s"}},{push:"ext",reg:/^extmap:([\w_\/]*) (\S*)(?: (\S*))?/,names:["value","uri","config"],format:function(a){return null!=a.config?"extmap:%s %s %s":"extmap:%s %s"}},{push:"crypto",reg:/^crypto:(\d*) ([\w_]*) (\S*)(?: (\S*))?/,names:["id","suite","config","sessionConfig"],format:function(a){return null!=a.sessionConfig?"crypto:%d %s %s %s":"crypto:%d %s %s"}},{name:"setup",reg:/^setup:(\w*)/,format:"setup:%s"},{name:"mid",reg:/^mid:(\S*)/,format:"mid:%s"},{name:"ptime",reg:/^ptime:(\d*)/,format:"ptime:%d"},{name:"maxptime",reg:/^maxptime:(\d*)/,format:"maxptime:%d"},{name:"direction",reg:/^(sendrecv|recvonly|sendonly|inactive)/,format:"%s"},{name:"iceLite",reg:/^(ice-lite)/},{name:"iceUfrag",reg:/^ice-ufrag:(\S*)/,format:"ice-ufrag:%s"},{name:"icePwd",reg:/^ice-pwd:(\S*)/,format:"ice-pwd:%s"},{name:"fingerprint",reg:/^fingerprint:(\S*) (\S*)/,names:["type","hash"],format:"fingerprint:%s %s"},{push:"candidates",reg:/^candidate:(\S*) (\d*) (\S*) (\d*) (\S*) (\d*) typ (\S*)(?: raddr (\S*) rport (\d*))?(?: generation (\d*))?/,names:["foundation","component","transport","priority","ip","port","type","raddr","rport","generation"],format:function(a){var b="candidate:%s %d %s %d %s %d typ %s";return b+=a.raddr?" raddr %s rport %d":"%v%v",null!=a.generation&&(b+=" generation %d"),b}},{name:"endOfCandidates",reg:/^(end-of-candidates)/},{name:"remoteCandidates",reg:/^remote-candidates:([\w\W]*)/,format:"remote-candidates:%s"},{name:"iceOptions",reg:/^ice-options:(\S*)/,format:"ice-options:%s"},{push:"ssrcs",reg:/^ssrc:(\d*) ([\w_]*):([\w\W]*)/,names:["id","attribute","value"],format:"ssrc:%d %s:%s"},{name:"ssrcGroup",reg:/^ssrc-group:(\w*) ([\w\W]*)/,names:["value","ssrcids"],format:"ssrc-group:%s %s"},{name:"msidSemantic",reg:/^msid-semantic:\s?(\w*) (\S*)/,names:["semantic","token"],format:"msid-semantic: %s %s"},{name:"msid",reg:/^msid:\{?([\w\-]*)\}?\s?\{?([\w\-]*)?\}?/,names:["id","appdata"],format:function(a){return null!=a.appdata?"msid:%s %s":"msid:%s"}},{push:"groups",reg:/^group:(\w*) ([\w\W]*)/,names:["type","mids"],format:"group:%s %s"},{name:"rtcpMux",reg:/^(rtcp-mux)/},{name:"3ge2ae",reg:/^3ge2ae:(\w*)/,names:["value"],format:"3ge2ae:%s"},{push:"invalid",names:["value"]}]},Object.keys(k).forEach(function(a){l=k[a],l.forEach(function(a){a.reg||(a.reg=/([\w\W]*)/),a.format||(a.format="%s")})}),m=RegExp.prototype.test.bind(/^([a-z])=([\w\W]*)/),n=/%[sdv%]/g,a.sdpParser=o,o.getInstance=function(){return j||(j=i()),j}}(ATT||{}),function(){"use strict";function a(){return["error","warn","info","debug","trace"]}function b(){return u}function c(a){var b;for(b in q)q.hasOwnProperty(b)&&q[b].setLogLevel(a)}function d(){var a,b="",c="",d=[],e="",f=[];try{throw new Error}catch(g){return c=0===g.stack.split("\n")[0].indexOf("Error")?g.stack.split("\n")[4]:g.stack.split("\n")[3],d=c.split(":"),5<=d.length?(e=d[2],f=void 0===e?[]:e.split("/"),b=f[f.length-1],void 0!==b&&b.indexOf("?")>-1&&(b=b.split("?")[0]),a=d[3]):(e=d[0],f=void 0===e?[]:e.split(" "),b=f[f.length-1],void 0!==b&&b.indexOf("?")>-1&&(b=b.split("?")[0]),a=d[1]),b+":"+a}}function e(b,c,e){var f,g,h,i=e||"",j=b;f=a().indexOf(b),g=t[f],void 0===console[b]&&(j="log"),(void 0===c||"function"==typeof c)&&(c=""),(void 0===e||"function"==typeof e)&&(i=""),void 0!==e&&"object"==typeof e&&(i=":",h=e),console[j](g,c,i,"["+d()+"]"),void 0!==h&&console[j](h)}function f(){return r}function g(){return s}function h(b){if(void 0===b||"string"!=typeof b||0===b.length)throw new Error("No log level provided");if(-1===a().indexOf(b))throw new Error("Invalid log level provided");s=b,c(b)}function i(){var a,b=[];for(a in q)q.hasOwnProperty(a)&&b.push(a);return b}function j(){var a;for(a in u)u.hasOwnProperty(a)&&void 0!==q[a]&&q[a].setLogLevel(u[a]);for(a in q)q.hasOwnProperty(a)&&void 0===u[a]&&q[a].setLogLevel(r)}function k(b){function c(){return m}function d(){return l}function f(b){if(void 0===b||"string"!=typeof b||0===b.length)throw new Error("No log level provided");if(-1===a().indexOf(b))throw new Error("Invalid log level provided");l=b}function g(b){var c=a(),d=this.getLogLevel();c.indexOf("error")<=c.indexOf(d)&&e("error",b)}function h(b){var c=a(),d=this.getLogLevel();c.indexOf("warn")<=c.indexOf(d)&&e("warn",b)}function i(b){var c=a(),d=this.getLogLevel();c.indexOf("info")<=c.indexOf(d)&&e("info",b)}function j(b){var c=a(),d=this.getLogLevel();c.indexOf("debug")<=c.indexOf(d)&&e("debug",b)}function k(b,c){var d=a(),f=this.getLogLevel();d.indexOf("trace")<=d.indexOf(f)&&e("trace",b,c)}var l="",m=b||!1;this.isCustomType=c,this.setLogLevel=f,this.getLogLevel=d,this.logError=g,this.logWarning=h,this.logInfo=i,this.logDebug=j,this.logTrace=k}function l(a,b){if(void 0===a||"string"!=typeof a||0===a.length)throw new Error("No module name provided");if(q[a])throw new Error("logger is already defined");return q[a]=new k(b),void 0!==u[a]?q[a].setLogLevel(u[a]):q[a].setLogLevel(r),q[a]}function m(a){return l(a,!0)}function n(a){if(void 0===a||"string"!=typeof a||0===a.length)throw new Error("No module name provided");if(!q[a])throw new Error("Invalid module name provided");if(q[a].isCustomType()!==!0)throw new Error("Cannot delete "+a+" logger");delete q[a]}function o(a){if(void 0===a||"string"!=typeof a||0===a.length)throw new Error("No module name provided");if(void 0===q[a])throw new Error("Logger "+a+" not found");return q[a]}function p(){var a,b={},c=i();for(a=0;a<c.length;a+=1)b[c[a]]=o(c[a]).getLogLevel();return b}var q={},r="warn",s=r,t=["[ERROR]","[WARNING]","[INFO]","[DEBUG]","[TRACE]"],u={call:"info",session:"info"};ATT.logManager=function(){return{getLogLevels:a,getCurrentModuleLogLevels:p,getLoggers:i,getLogger:o,getDefaultLogLevel:f,getGlobalLogLevel:g,setGlobalLogLevel:h,resetLogLevels:j,createLogger:l,createCustomLogger:m,deleteCustomLogger:n,getModuleDefaults:b}}()}(),function(){"use strict";function a(){function a(a,b){a.callback.apply(a.context,b)}var b={};return{getTopics:function(){return b},unsubscribe:function(a,c){var d,e;if(!b.hasOwnProperty(a))return!1;if("function"!=typeof c)throw new Error("Must pass in the callback you are unsubscribing");for(e=b[a],d=0;d<e.length;d+=1)if(e[d].callback===c)return e.splice(d,1),0===e.length&&delete b[a],!0;return!1},publish:function(){var c,d,e=Array.prototype.slice.call(arguments),f=e.shift();if(!b.hasOwnProperty(f))return!1;for(d=b[f],c=0;c<d.length;c+=1)setTimeout(a.bind(null,b[f][c],e),0);return!0},subscribe:function(a,c,d){var e,f,g;if(""===a||null===a||void 0===a)return!1;if("function"!=typeof c)return!1;if(void 0!==d&&(null===d||"object"!=typeof d))return!1;for(g={context:d,callback:c},b.hasOwnProperty(a)||(b[a]=[]),e=b[a],f=0;f<e.length;f+=1)if(c===e[f].callback)return!1;return b[a].push(g),!0}}}var b;b=typeof window.ATT,void 0===b?window.ATT={"private":{factories:{}}}:void 0===ATT["private"]&&(ATT["private"]={factories:{}}),ATT["private"].factories.createEventEmitter=a}(),!ATT)var ATT={};var attUtils=null;"object"==typeof module&&module&&"object"==typeof module.exports&&(attUtils={utils:require("./att.utils"),logManager:require("./att.log-manager.js")},module.exports=attUtils);var RESTClient=function(a){"use strict";function b(b){b.forEach(function(b){i.prototype[b]=function(c){c.method=b,c.headers=g(a).extend(this.config.headers,c.headers),this.ajax(c)}})}var c,d=typeof window,e="object"==typeof module&&module&&"object"==typeof module.exports,f={"Content-Type":"application/json",Accept:"application/json"},g=function(a){return e?attUtils.utils.utils:a.utils},h=ATT.logManager.createLogger("RESTClient"),i=function(b){this.config=g(a).extend({},b),this.config.async=this.config.async||!0,this.config.success=this.config.success||function(){},this.config.error=this.config.error||c,this.config.ontimeout=this.config.ontimeout||function(a){h.logDebug(a),h.logError("Request timed out")},this.config.headers=this.config.headers||f},j=function(a,b,c,d){var e,f=JSON.stringify(d);h.logDebug("---------Request---------------"),h.logDebug(a+" "+b+" HTTP/1.1"),h.logDebug("=========headers=======");for(e in c)c.hasOwnProperty(e)&&h.logDebug(e+": "+c[e]);void 0!==f&&(h.logDebug("=========body=========="),h.logDebug(f))},k=function(a){h.logDebug("---------Response--------------"),h.logDebug(a.getResponseStatus()),h.logDebug("=========headers======="),h.logDebug(a.headers),h.logDebug("=========body=========="),h.logDebug(a.responseText)},l=function(a){var b,c=a.getResponseHeader("Content-Type");return c&&0===c.indexOf("application/json")?(b=JSON.parse(a.responseText),"object"==typeof b?b:JSON.parse(b)):""},m=function(a,b){var c={getJson:function(){return l(a)},getResponseHeader:function(b){return a.getResponseHeader(b)},responseText:a.responseText,headers:a.getAllResponseHeaders(),statusText:a.statusText,getResponseStatus:function(){return a.status},getResourceURL:function(){return b.method.toUpperCase()+" "+b.url}};return c},n=function(b){var d=this,e=m(d,b),f=g(a).extend({},e);k(f),d.status>=400&&d.status<=599?"function"==typeof b.error?b.error.call(d,f):c.call(d,f):b.success.call(d,f)},o=function(b){var c=this,d=m(c,b),e=g(a).extend({},d);k(e),b.error.call(this,e)},p=function(b){var c=this,d=m(c,b),e=g(a).extend({},d);k(e),h.logError("Request timeout"),b.ontimeout.call(this,e)};return i.prototype.ajax=function(){var a=this.config,b=new XMLHttpRequest,d=null,e=null;try{d=a.data&&JSON.stringify(a.data),void 0!==a.timeout&&(b.timeout=a.timeout),b.onload=n.bind(b,a),b.onerror=function(){if("undefined"===a.error)throw new Error("Network error occurred in REST client.");o.call(this,a)},b.onreadystatechange=function(){4===this.readyState&&0===this.status&&""===this.statusText&&void 0===a.ontimeout&&(h.logError("Failed to complete request for resource:"+a.url),o.call(this,a))},b.onabort=o.bind(b,a),b.ontimeout=p.bind(b,a),b.open(a.method,a.url,a.async);for(e in a.headers)a.headers.hasOwnProperty(e)&&b.setRequestHeader(e,a.headers[e]);j(a.method,a.url,a.headers,d),b.send(d)}catch(f){h.logError("XHR request failed, "+f),"function"==typeof a.error?o.call(b,f):c.call(b,f)}},c=function(a){throw new Error("RESTClient error handler triggered!"+a)},b(["get","post","delete"]),i.prototype.getConfig=function(){return this.config},"undefined"!==d&&ATT&&(ATT.RESTClient=i),i}(ATT);if("object"==typeof module&&module&&"object"==typeof module.exports&&(module.exports=RESTClient),function(){"use strict";function a(b,c){var d;for(d in c)c.hasOwnProperty(d)&&(c[d]instanceof Object?b[d]=a(c[d]):b[d]=c[d]);return b}function b(a,b){a["super"]=b,a.prototype=Object.create(b.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}})}function c(a,b){var c=b.split("."),d=a;return c.forEach(function(a){d[a]||(d[a]={}),d=d[a]}),d}function d(a){return null===a.match(new RegExp("[^0-9]"))?10===a.length?"tel:+"+a:0===a.indexOf("1")?"tel:+"+a:0===a.indexOf("+")?"tel:"+a:"sip:"+a+"@icmn.api.att.net":a.indexOf("@")>0?"sip:"+a:null}function e(){var a,b=navigator.userAgent,c=b.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i)||[];return/trident/i.test(c[1])?(a=/\brv[ :]+(\d+)/g.exec(b)||[],"IE "+(a[1]||"")):"Chrome"===c[1]&&(a=b.match(/\bOPR\/(\d+)/),null!==a)?"Opera":(c=c[2]?[c[1],c[2]]:[navigator.appName,navigator.appVersion,"-?"],a=b.match(/version\/(\d+)/i),null!==a&&c.splice(1,1,a[1]),c[0])}function f(){var a,b=navigator.userAgent,c=b.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i)||[];return/trident/i.test(c[1])?(a=/\brv[ :]+(\d+)/g.exec(b)||[],"IE "+(a[1]||"")):"Chrome"===c[1]&&(a=b.match(/\bOPR\/(\d+)/),null!==a)?a[1]:(c=c[2]?[c[1],c[2]]:[navigator.appName,navigator.appVersion,"-?"],a=b.match(/version\/(\d+)/i),null!==a&&c.splice(1,1,a[1]),c[1])}function g(a){var b,c;if(c=ATT.sdpParser.getInstance(),void 0===a||null===a)throw new Error("SDP not provided.");if(b=c.parse(a),1===b.media.length){if(void 0===b.media[0].direction&&(b.media[0].direction=b.direction),"sendrecv"===b.media[0].direction)return"audio";if("sendonly"===b.media[0].direction)return"audio";if("recvonly"===b.media[0].direction)return"nomedia";if("inactive"===b.media[0].direction)return"nomedia"}if(2===b.media.length){if("sendrecv"===b.media[0].direction&&"sendrecv"===b.media[1].direction&&0<b.media[1].port)return"video";if("sendonly"===b.media[0].direction&&"sendrecv"===b.media[1].direction)return"video";if("sendrecv"===b.media[0].direction&&"sendonly"===b.media[1].direction)return"video";if("sendonly"===b.media[0].direction&&"sendonly"===b.media[1].direction)return"video";if("sendrecv"===b.media[0].direction&&"recvonly"===b.media[1].direction)return"audio";if("sendrecv"===b.media[0].direction&&("inactive"===b.media[1].direction||0===b.media[1].port))return"audio";if("recvonly"===b.media[0].direction&&"recvonly"===b.media[1].direction)return"nomedia";if("inactive"===b.media[0].direction&&"inactive"===b.media[1].direction)return"nomedia"}return"unsupported"}function h(a){var b,c,d=[],e=ATT.sdpParser.getInstance().parse(a);for(b=0;b<e.media.length;b+=1)c={rtp:e.media[b].rtp,type:e.media[b].type},0<c.rtp.length&&d.push(c);return d}if(void 0===ATT)throw new Error("Error exporting ATT.utils");ATT.utils={createNamespace:c,extend:a,inherits:b,createCalledPartyUri:d,getBrowserName:e,getBrowserVersion:f,getCodecFromSdp:h,getMediaType:g}}(),function(a){"use strict";var b=a.logManager.createLogger("phoneNumber"),c={alphaLookup:{a:2,b:2,c:2,d:3,e:3,f:3,g:4,h:4,i:4,j:5,k:5,l:5,m:6,n:6,o:6,p:7,q:7,r:7,s:7,t:8,u:8,v:8,w:9,x:9,y:9,z:9},stringify:function(a){b.logDebug("att.phonenumber: stringify"),b.logInfo("removes all the special character "),b.logTrace(a);var d,e=c.translate(a),f=e.length,g="1"===e.charAt(0),h=e.split("");return f>(g?11:10)?e:!g&&4>f?e:(g&&h.splice(0,1),g?f>1&&(d=4-f,d=d>0?d:0,h.splice(0,0," ("),h.splice(4,0,new Array(d+1).join(" ")+") "),f>7&&h.splice(8,0,"-")):f>7?(h.splice(0,0,"("),h.splice(4,0,") "),h.splice(8,0,"-")):f>3&&h.splice(3,0,"-"),b.logTrace((g?"+1":"")+h.join("")),(g?"+1":"")+h.join(""))},translate:function(a){b.logDebug("att.phonenumber: translate"),b.logInfo("converts all the alphanumbers to Numbers "),b.logTrace(a);var d,e,f="";for(d=0;d<a.length;d+=1)e=a.charAt(d),isNaN(e)?void 0!==c.alphaLookup[e.toLowerCase()]&&(f+=c.alphaLookup[e.toLowerCase()]):f+=e;return b.logTrace(f),String(f)},getCallable:function(a,b){var d=b||"us",e=c.translate(a);return 10!==e.length?"us"===d&&11===e.length&&"1"===e.charAt(0)?e:e:"us"===d?"1"+e:void 0},cleanPhoneNumber:function(c){b.logDebug("att.phonenumber: cleanPhoneNumber"),b.logInfo("removes special character and convert the number to a callable format"),b.logTrace(c);var d;return-1!==c.indexOf("@")?c:(d=c.replace(/\s/g,""),a.SpecialNumbers[c]?(b.logTrace(c),c):(d=a.phoneNumber.translate(d),b.logTrace("Formatted Number",d),d))},formatNumber:function(c){b.logDebug("att.phonenumber: formatNumber"),b.logInfo("converts the given number to a universal format"),b.logTrace(c);var d=this.cleanPhoneNumber(c);return d?c.length<=10?(b.logTrace("Formatted Number",d),d):(b.logTrace("Formatted Number",a.phoneNumber.stringify(d)),a.phoneNumber.stringify(d)):void b.logWarning("Phone number cannot be formatted.")}};a.phoneNumber=c}(ATT),!ATT)var ATT={};if(function(a){"use strict";var b={};b.SpecialNumbers={911:!0,411:!0,611:!0,"*69":!0,"#89":!0},a.SpecialNumbers=Object.freeze(b.SpecialNumbers)}(ATT||{}),function(){"use strict";var a,b,c,d={};if(a={MOBILE_NUMBER:"MOBILE_NUMBER",VIRTUAL_NUMBER:"VIRTUAL_NUMBER",ACCOUNT_ID:"ACCOUNT_ID"},b={OUTGOING:"Outgoing",INCOMING:"Incoming"},c={INVITATION_RECEIVED:"invitation-received",SESSION_OPEN:"session-open",SESSION_MODIFIED:"session-modified",SESSION_TERMINATED:"session-terminated",MODIFICATION_RECEIVED:"mod-received",MODIFICATION_TERMINATED:"mod-terminated",MOVE_TERMINATED:"move-terminated",TRANSFER_INITIATED:"transfer-initiated",TRANSFER_TERMINATED:"transfer-terminated"},void 0===ATT["private"])throw new Error("Error exporting ATT.private.enum");d.USER_TYPE=Object.freeze(a),d.CALL_TYPE=Object.freeze(b),d.API_EVENT=Object.freeze(c),ATT["private"]["enum"]=d}(),!ATT)var ATT={};!function(){"use strict";function a(a){d.logDebug("ATT.private.config.api: configure"),d.logInfo("Configuring API..."),d.logTrace("appConfig",a);var b={rtc_endpoint:a.api_endpoint+a.ewebrtc_uri,headers:{"Content-Type":"application/json",Accept:"application/json"}};return{createWebRTCSession:{method:"POST",url:b.rtc_endpoint+"/sessions",formatters:{headers:{Authorization:function(a){return d.logDebug("createWebRTCSession:formatters:headers:Authorization"),d.logTrace("Authorization","Bearer "+a),"Bearer "+a},"x-e911Id":function(a){return d.logDebug("createWebRTCSession:formatters:headers:x-e911Id"),d.logTrace("x-e911Id",a),a},"x-Arg":function(a){return d.logDebug("createWebRTCSession:formatters:headers:x-Arg"),d.logTrace("x-Arg",a),a}}},headers:b.headers},refreshWebRTCSession:{method:"PUT",formatters:{url:function(a){return d.logDebug("refreshWebRTCSession:formatters:url"),d.logTrace("sessionId",a),d.logTrace("url",b.rtc_endpoint+"/sessions/"+a),b.rtc_endpoint+"/sessions/"+a},headers:{Authorization:function(a){return d.logDebug("refreshWebRTCSession:formatters:headers:Authorization"),d.logTrace("Authorization","Bearer "+a),"Bearer "+a}}},headers:b.headers},deleteWebRTCSession:{method:"DELETE",formatters:{url:function(a){return d.logDebug("deleteWebRTCSession:formatters:url"),d.logTrace("sessionId",a),d.logTrace("url",b.rtc_endpoint+"/sessions/"+a),b.rtc_endpoint+"/sessions/"+a},headers:{Authorization:function(a){return d.logDebug("deleteWebRTCSession:formatters:headers:Authorization"),d.logTrace("Authorization","Bearer "+a),"Bearer "+a},"x-e911Id":function(a){return d.logDebug("deleteWebRTCSession:formatters:headers:x-e911Id"),d.logTrace("x-e911Id",a),a}}},headers:b.headers},associateTokenWithUserId:{method:"PUT",formatters:{url:function(a){return d.logDebug("associateTokenWithUserId:formatters:url"),d.logTrace("params",a),d.logTrace("url",b.rtc_endpoint+"/userIds/"+a.userId),b.rtc_endpoint+"/userIds/"+a.userId},headers:{Authorization:function(a){return d.logDebug("associateTokenWithUserId:formatters:headers:Authorization"),d.logTrace("oAuthToken",a),d.logTrace("Authorization","Bearer "+a),"Bearer "+a}}},headers:{Accept:"application/json"}},associateE911Id:{method:"PUT",formatters:{url:function(a){return d.logDebug("associateE911Id:formatters:url"),d.logTrace("sessionId",a),d.logTrace("url",b.rtc_endpoint+"/sessions/"+a),b.rtc_endpoint+"/sessions/"+a},headers:{Authorization:function(a){return d.logDebug("associateE911Id:formatters:headers:Authorization"),d.logTrace("Authorization","Bearer "+a),"Bearer "+a}}},headers:b.headers},getEvents:{formatters:{method:"GET",url:function(a){return d.logDebug("getEvents:formatters:url"),d.logTrace("params",a),d.logTrace("url",b.rtc_endpoint+"/sessions/"+a.sessionId+"/"+a.eventChannelUri),b.rtc_endpoint+"/sessions/"+a.sessionId+"/"+a.eventChannelUri},headers:{Authorization:function(a){return d.logDebug("getEvents:formatters:headers:Authorization"),d.logTrace("Authorization","Bearer "+a),"Bearer "+a}}},headers:{Accept:"application/json"}},createCall:{method:"POST",formatters:{url:function(a){return d.logDebug("createCall:formatters:url"),d.logTrace("params",a),d.logTrace("url",b.rtc_endpoint+"/sessions/"+a.sessionId+"/"+a.type),b.rtc_endpoint+"/sessions/"+a.sessionId+"/"+a.type},headers:{Authorization:function(a){return d.logDebug("createCall:formatters:headers:Authorization"),d.logTrace("Authorization","Bearer "+a),"Bearer "+a}}},headers:b.headers},modifyCall:{method:"PUT",formatters:{url:function(a){return d.logDebug("modifyCall:formatters:url"),d.logTrace("params",a),d.logTrace("url",b.rtc_endpoint+"/sessions/"+a.sessionId+"/"+a.type+"/"+a.callId),b.rtc_endpoint+"/sessions/"+a.sessionId+"/"+a.type+"/"+a.callId},headers:{Authorization:function(a){return d.logDebug("modifyCall:formatters:headers:Authorization"),d.logTrace("Authorization","Bearer "+a),"Bearer "+a},options:{"x-conference-action":function(a){return d.logDebug("modifyCall:formatters:headers:options:x-conference-action"),d.logTrace("x-conference-action",a),a},"x-calls-action":function(a){return d.logDebug("modifyCall:formatters:headers:options:x-calls-action"),d.logTrace("x-calls-action",a),a}}}},headers:b.headers},addParticipant:{method:"PUT",formatters:{url:function(a){return d.logDebug("addParticipant:formatters:url"),d.logTrace("params",a),d.logTrace("url",b.rtc_endpoint+"/sessions/"+a[0]+"/conferences/"+a[1]+"/participants/"+a[2]),b.rtc_endpoint+"/sessions/"+a[0]+"/conferences/"+a[1]+"/participants/"+a[2]},headers:{Authorization:function(a){return d.logDebug("addParticipant:formatters:headers:Authorization"),d.logTrace("Authorization","Bearer "+a),"Bearer "+a}}},headers:b.headers},removeParticipant:{method:"DELETE",formatters:{url:function(a){return d.logDebug("removeParticipant:formatters:url"),d.logTrace("params",a),d.logTrace("url",b.rtc_endpoint+"/sessions/"+a[0]+"/conferences/"+a[1]+"/participants/"+a[2]),b.rtc_endpoint+"/sessions/"+a[0]+"/conferences/"+a[1]+"/participants/"+a[2]},headers:{Authorization:function(a){return d.logDebug("removeParticipant:formatters:headers:Authorization"),d.logTrace("Authorization","Bearer "+a),"Bearer "+a}}},headers:b.headers},rejectMediaModification:{method:"PUT",formatters:{url:function(a){return d.logDebug("rejectMediaModification:formatters:url"),d.logTrace("params",a),d.logTrace("url",b.rtc_endpoint+"/sessions/"+a.sessionId+"/"+a.type+"/"+a.callId),b.rtc_endpoint+"/sessions/"+a.sessionId+"/"+a.type+"/"+a.callId},headers:{Authorization:function(a){return d.logDebug("rejectMediaModification:formatters:headers:Authorization"),d.logTrace("Authorization","Bearer "+a),"Bearer "+a},"x-modId":function(a){return d.logDebug("rejectMediaModification:formatters:headers:x-modId"),d.logTrace("x-modId",a),a}}},headers:ATT.utils.extend({"x-calls-action":"rejectCancel-call-mod"},b.headers)},acceptCallModifications:{method:"PUT",formatters:{url:function(a){return d.logDebug("acceptCallModifications:formatters:url"),d.logTrace("params",a),d.logTrace("url",b.rtc_endpoint+"/sessions/"+a.sessionId+"/"+a.type+"/"+a.callId),b.rtc_endpoint+"/sessions/"+a.sessionId+"/"+a.type+"/"+a.callId},headers:{Authorization:function(a){return d.logDebug("acceptCallModifications:formatters:headers:Authorization"),d.logTrace("Authorization","Bearer "+a),"Bearer "+a},"x-modId":function(a){return d.logDebug("acceptCallModifications:formatters:headers:x-modId"),d.logTrace("x-modId",a),a}}},headers:ATT.utils.extend({"x-calls-action":"accept-call-mod"},b.headers)},acceptConferenceModifications:{method:"PUT",formatters:{url:function(a){return d.logDebug("acceptConferenceModifications:formatters:url"),d.logTrace("params",a),d.logTrace("url",b.rtc_endpoint+"/sessions/"+a.sessionId+"/"+a.type+"/"+a.callId),b.rtc_endpoint+"/sessions/"+a.sessionId+"/"+a.type+"/"+a.callId},headers:{Authorization:function(a){return d.logDebug("acceptConferenceModifications:formatters:headers:Authorization"),d.logTrace("Authorization","Bearer "+a),"Bearer "+a},"x-mod-Id":function(a){return d.logDebug("acceptConferenceModifications:formatters:headers:x-mod-Id"),d.logTrace("x-mod-Id",a),a}}},headers:ATT.utils.extend({"x-conference-action":"accept-media-mod"},b.headers)},deleteCall:{method:"DELETE",formatters:{url:function(a){return d.logDebug("deleteCall:formatters:url"),d.logTrace("params",a),d.logTrace("url",b.rtc_endpoint+"/sessions/"+a.sessionId+"/"+a.type+"/"+a.callId),b.rtc_endpoint+"/sessions/"+a.sessionId+"/"+a.type+"/"+a.callId},headers:{Authorization:function(a){return d.logDebug("deleteCall:formatters:headers:Authorization"),d.logTrace("Authorization","Bearer "+a),"Bearer "+a},"x-delete-reason":function(a){return d.logDebug("deleteCall:formatters:headers:x-delete-reason"),d.logTrace("x-delete-reason",a),a}}},headers:b.headers},transferCall:{method:"PUT",formatters:{url:function(a){return d.logDebug("transferCall:formatters:url"),d.logTrace("params",a),d.logTrace("url",b.rtc_endpoint+"/sessions/"+a.sessionId+"/"+a.type+"/"+a.callId),b.rtc_endpoint+"/sessions/"+a.sessionId+"/"+a.type+"/"+a.callId},headers:{Authorization:function(a){return d.logDebug("transferCall:formatters:headers:Authorization"),d.logTrace("Authorization","Bearer "+a),"Bearer "+a},"x-transferTargetCallId":function(a){return d.logDebug("transferCall:formatters:headers:x-transferTargetCallId"),d.logTrace("x-transferTargetCallId",a),a}}},headers:ATT.utils.extend({"x-calls-action":"initiate-call-transfer"},b.headers)}}}function b(){d.logDebug("ATT.private.config.api: getAPIConfiguration");var b=c.app.getAppConfiguration();return d.logTrace("currentConfig",b),a(b)}var c,d=ATT.logManager.createLogger("configAPI");if(void 0===ATT["private"]||void 0===ATT["private"].config)throw d.logError("Error exporting ATT.private.config.api"),new Error("Error exporting ATT.private.config.api");c=ATT["private"].config,c.api={getAPIConfiguration:b}}(),function(){"use strict";function a(){return k}function b(){return s.logDebug("ATT.private.config.app: getAppConfiguration"),s.logInfo("Getting app configuration"),i={api_endpoint:l,ewebrtc_uri:m,eventChannelType:o},s.logTrace("appConfig",i),i}function c(a){s.logDebug("ATT.private.config.app: setAppConfiguration"),s.logInfo("Setting app configuration"),s.logTrace("options",a),l=a.api_endpoint||l,m=a.ewebrtc_uri||m}function d(){return r}function e(){return j}function f(a){if(void 0===a||null===a)throw new Error("No PC configuration provided");if(0===Object.keys(a).length)throw new Error("Invalid PC configuration provided");if(a.hasOwnProperty("iceServers")){if(void 0===a.iceServers||null===a.iceServers)throw new Error("No iceServers provided");if(!Array.isArray(a.iceServers)||0===a.iceServers.length)throw new Error("Invalid iceServers provided");a.iceServers.forEach(function(a){if("string"!=typeof a.url||""===a.url)throw new Error("Invalid iceServer url provided")}),j.iceServers=a.iceServers}if(a.hasOwnProperty("iceTransports")){if("string"!=typeof a.iceTransports||-1===q.indexOf(a.iceTransports))throw new Error("Invalid iceTransports provided");j.iceTransports=a.iceTransports}if(a.hasOwnProperty("ipv6")){if("boolean"!=typeof a.ipv6)throw new Error("Invalid ipv6 provided");j.ipv6=a.ipv6}if(a.hasOwnProperty("audioCodec")){if("string"!=typeof a.audioCodec||""===a.audioCodec)throw new Error("Invalid audioCodec provided");var b=!1;if(r.forEach(function(c){c.toLowerCase()===a.audioCodec.toLowerCase()&&(b=!0)}),!b)throw new Error("Invalid audioCodec provided. Please use one of these options: "+r.join(", "));j.audioCodec=a.audioCodec}}function g(a){if(void 0!==a&&!p.hasOwnProperty(a))throw new Error("Invalid PC configuration provided");void 0===a&&(j=ATT.utils.extend({},p)),p.hasOwnProperty(a)&&(j[a]=p[a])}function h(){return t}var i,j,k={supported:[{name:"Chrome",version:{min:38}},{name:"Firefox",version:{min:33,max:33}}],not_certified:[{name:"Chrome",version:{min:32,max:37}},{name:"Firefox",version:{min:28,max:32}},{name:"Firefox",version:{min:34}},{name:"Opera"}]},l="https://api.att.com",m="/RTC/v1",n={WebSockets:"WebSockets",LongPolling:"LongPolling"},o=n.LongPolling,p={iceServers:[{url:"STUN:12.194.159.4"},{url:"STUN:12.194.159.7"},{url:"STUN:12.194.159.10"},{url:"STUN:12.194.194.4"},{url:"STUN:12.194.194.7"},{url:"STUN:12.194.194.10"}],iceTransports:"all",ipv6:!1,audioCodec:null},q=["all","none","relay"],r=["opus","G722","PCMU","PCMA"],s=ATT.logManager.createLogger("configApp"),t="1.0.0";if(j=ATT.utils.extend({},p),s.logDebug("Loading ATT.private.config.app..."),void 0===ATT["private"]||void 0===ATT["private"].config)throw new Error("Error exporting ATT.private.config.app");ATT["private"].config.app={getBrowserSupport:a,getAppConfiguration:b,setAppConfiguration:c,getSupportedAudioCodecs:d,getPCConfiguration:e,setPCConfiguration:f,resetPCConfiguration:g,getVersion:h}}(),function(){"use strict";function a(a){return Object.freeze(a),a}var b=[{JSObject:"*",JSMethod:"*",ErrorCode:"0000",ErrorMessage:"An error occurred during an operation",Cause:"Possibly something went wrong during the operation",Resolution:"Please see any additional information available for a possible cause or more details"},{JSObject:"*",JSMethod:"*",ErrorCode:"0001",ErrorMessage:"Error published with unknown error code.",Cause:"Error code is not defined in error dictionary.",Resolution:"Add the error object in error dictionary."},{JSObject:"*",JSMethod:"*",ErrorCode:"0003",ErrorMessage:"Request timed out.",Cause:"Network failure.",
Resolution:"Please check the logs and network connectivity and try again."},{JSObject:"ATT.rtc",JSMethod:"Phone",ErrorCode:"1000",ErrorMessage:"Missing input parameter.",Cause:"One or more of the input parameters are empty.",Resolution:"Please check the values for input parameters."},{JSObject:"ATT.rtc",JSMethod:"Phone",ErrorCode:"1001",ErrorMessage:"Missing local video stream.",Cause:"Input parameter `localVideoElementID` is missing.",Resolution:"Please check the values for `localVideoElementID`."},{JSObject:"ATT.rtc",JSMethod:"Phone",ErrorCode:"1002",ErrorMessage:"Missing remote video stream.",Cause:"Input parameter `remoteVideoElementID` is missing.",Resolution:"Please check the values for `remoteVideoElementID`."},{JSObject:"ATT.rtc",JSMethod:"Phone",ErrorCode:"1003",ErrorMessage:"Invalid media type.",Cause:"Invalid media constraints.",Resolution:"Please provide use valid Media constraints attributes."},{JSObject:"ATT.rtc",JSMethod:"Phone",ErrorCode:"1004",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc",JSMethod:"login",ErrorCode:"2000",ErrorMessage:"Invalid user type.",Cause:"Unsupported user type.",Resolution:"Supported user types are Mobile Number, Virtual Number, Account ID."},{JSObject:"ATT.rtc",JSMethod:"login",ErrorCode:"2001",ErrorMessage:"Missing input parameter.",Cause:"Access token & E911 ID is required.",Resolution:"User type, Access token, E911 ID are mandatory fields for Mobile Number & Virtual Number user types."},{JSObject:"ATT.rtc",JSMethod:"login",ErrorCode:"2002",ErrorMessage:"Mandatory fields can not be empty.",Cause:"One of the Mandatory Parameters is empty.",Resolution:"Please check the values for input parameters."},{JSObject:"ATT.rtc",JSMethod:"login",ErrorCode:"2003",ErrorMessage:"Invalid input parameter.",Cause:"Invalid parameter.",Resolution:"For Account ID users E911 is not required."},{JSObject:"ATT.rtc",JSMethod:"login",ErrorCode:"2004",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc",JSMethod:"login",ErrorCode:"2005",ErrorMessage:"User already logged in.",Cause:"Duplicate operation.",Resolution:"Login should be called only once per session."},{JSObject:"ATT.rtc",JSMethod:"logout",ErrorCode:"3000",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc",JSMethod:"logout",ErrorCode:"3001",ErrorMessage:"User is not logged in.",Cause:"Invalid Logout operation.",Resolution:"None"},{JSObject:"ATT.rtc",JSMethod:"logout",ErrorCode:"3002",ErrorMessage:"User already logged out.",Cause:"Duplicate operation.",Resolution:"Logout should be called only once per session."},{JSObject:"ATT.rtc.Phone",JSMethod:"dial",ErrorCode:"4000",ErrorMessage:"Invalid input parameter.",Cause:"Invalid phone number.",Resolution:"Please provide a valid phone number."},{JSObject:"ATT.rtc.Phone",JSMethod:"dial",ErrorCode:"4001",ErrorMessage:"Invalid input parameter.",Cause:"Invalid SIP URI.",Resolution:"Please provide valid SIP URI."},{JSObject:"ATT.rtc.Phone",JSMethod:"dial",ErrorCode:"4002",ErrorMessage:"Invalid media type.",Cause:"Invalid media constraints.",Resolution:"Please provide use valid Media constraints attributes."},{JSObject:"ATT.rtc.Phone",JSMethod:"dial",ErrorCode:"4003",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"dial",ErrorCode:"4004",ErrorMessage:"User is not logged in.",Cause:"Invalid operation.",Resolution:"Please login before invoking dial."},{JSObject:"ATT.rtc.Phone",JSMethod:"dial",ErrorCode:"4005",ErrorMessage:"Can not make second call. Please put the current call on hold before making second call.",Cause:"Invalid operation.",Resolution:"Please ensure that current call is on hold before making second call."},{JSObject:"ATT.rtc.Phone",JSMethod:"dial",ErrorCode:"4006",ErrorMessage:"The `localMedia` parameter is invalid.",Cause:"The `localMedia` parameter is invalid.",Resolution:"Please provide a valid `localMedia` parameter."},{JSObject:"ATT.rtc.Phone",JSMethod:"dial",ErrorCode:"4007",ErrorMessage:"The `remoteMedia` parameter is invalid.",Cause:"The `remoteMedia` parameter is invalid.",Resolution:"Please provide a valid `remoteMedia` parameter."},{JSObject:"ATT.rtc.Phone",JSMethod:"dial",ErrorCode:"4008",ErrorMessage:"The `destination` parameter is invalid.",Cause:"The `destination` parameter is invalid.",Resolution:"Please provide a valid `destination` parameter."},{JSObject:"ATT.rtc.Phone",JSMethod:"dial",ErrorCode:"4009",ErrorMessage:"The `options` parameter is invalid.",Cause:"The `options` parameter is invalid.",Resolution:"You must include a valid `options` parameter."},{JSObject:"ATT.rtc.Phone",JSMethod:"dial",ErrorCode:"4010",ErrorMessage:"Cannot dial another call when there is a call trying to connect (dialing)",Cause:"Trying to dial another call before the call is connected.",Resolution:"The current call must be connected before you can proceed with another call."},{JSObject:"ATT.rtc.Phone",JSMethod:"dial",ErrorCode:"4011",ErrorMessage:"Cannot dial a second call when there is an active call.",Cause:"Trying to dial another call when call is in progress.",Resolution:"Use the `addCall` method instead of `dial`."},{JSObject:"ATT.rtc.Phone",JSMethod:"answer",ErrorCode:"5000",ErrorMessage:"Answer failed. No incoming call.",Cause:"No incoming call.",Resolution:"No incoming call."},{JSObject:"ATT.rtc.Phone",JSMethod:"answer",ErrorCode:"5001",ErrorMessage:"Invalid media type.",Cause:"Invalid media constraints.",Resolution:"Please provide use valid Media constraints attributes."},{JSObject:"ATT.rtc.Phone",JSMethod:"answer",ErrorCode:"5002",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"answer",ErrorCode:"5003",ErrorMessage:"User is not logged in.",Cause:"Invalid operation.",Resolution:"Please login before invoking answer."},{JSObject:"ATT.rtc.Phone",JSMethod:"answer",ErrorCode:"5004",ErrorMessage:"Mandatory fields can not be empty.",Cause:"One of the Mandatory Parameters is empty.",Resolution:"Please check the values for input parameters."},{JSObject:"ATT.rtc.Phone",JSMethod:"answer",ErrorCode:"5005",ErrorMessage:"Invalid Action parameter.",Cause:"Action can only be `hold` or `end`.",Resolution:"Please provide a valid action (hold or end)"},{JSObject:"ATT.rtc.Phone",JSMethod:"hangup",ErrorCode:"6000",ErrorMessage:"Hangup failed. Call is not in progress.",Cause:"Can not hangup before the call is established.",Resolution:"Please use cancel call, or allow call to be established before trying to hang-up."},{JSObject:"ATT.rtc.Phone",JSMethod:"hangup",ErrorCode:"6001",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"hold",ErrorCode:"7000",ErrorMessage:"Hold failed. Call is not in progress.",Cause:"Cannot hold. There is no active call in progress.",Resolution:"Please ensure an active call is in progress before trying to put the call on Hold."},{JSObject:"ATT.rtc.Phone",JSMethod:"hold",ErrorCode:"7001",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"hold",ErrorCode:"7002",ErrorMessage:"Failed to hold the call.",Cause:"Hold was initiated when the call was already on hold.",Resolution:"Please ensure that the call was not put on hold."},{JSObject:"ATT.rtc.Phone",JSMethod:"resume",ErrorCode:"8000",ErrorMessage:"Resume failed. Call is not in progress.",Cause:"There is no active call in progress.",Resolution:"Please ensure an active call is in progress."},{JSObject:"ATT.rtc.Phone",JSMethod:"resume",ErrorCode:"8001",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"resume",ErrorCode:"8002",ErrorMessage:"Cannot resume a call which in not on hold.",Cause:"The call cannot be resumed if the call is not on hold.",Resolution:"Please ensure that the call is on hold before attempting to resume the call."},{JSObject:"ATT.rtc.Phone",JSMethod:"mute",ErrorCode:"9000",ErrorMessage:"Mute failed. Call is not in progress.",Cause:"No media stream.",Resolution:"Please confirm that an active call is in progress."},{JSObject:"ATT.rtc.Phone",JSMethod:"mute",ErrorCode:"9001",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"unmute",ErrorCode:"10000",ErrorMessage:"Unmute failed. No media stream.",Cause:"No media stream.",Resolution:"Please confirm that an active call is in progress."},{JSObject:"ATT.rtc.Phone",JSMethod:"unmute",ErrorCode:"10001",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"cancel",ErrorCode:"11000",ErrorMessage:"Cancel failed-Call has not been initiated.",Cause:"No call to cancel in progress.",Resolution:"Please invoke dial before invoking cancel."},{JSObject:"ATT.rtc.Phone",JSMethod:"cancel",ErrorCode:"11001",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"reject",ErrorCode:"12000",ErrorMessage:"Reject failed-Call has not been initiated.",Cause:"No call to reject.",Resolution:"Reject can be performed only on incoming call."},{JSObject:"ATT.rtc.Phone",JSMethod:"reject",ErrorCode:"12001",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"*",ErrorCode:"13005",ErrorMessage:"onUserMediaError",Cause:"Failed to get the user media.",Resolution:"Please enable media for the browser."},{JSObject:"ATT.rtc.Phone",JSMethod:"*",ErrorCode:"14000",ErrorMessage:"Permission denied to access audio/video",Cause:"User denied permission.",Resolution:"User may intentionally have denied permission, please retry the requested operation."},{JSObject:"ATT.rtc.Phone",JSMethod:"*",ErrorCode:"14001",ErrorMessage:"Unsupported browser-unable to get audio/video",Cause:"Unsupported browser.",Resolution:"The browser does not support Enhanced WebRTC, please use Enhanced WebRTC supported browser."},{JSObject:"ATT.rtc.Phone",JSMethod:"*",ErrorCode:"14002",ErrorMessage:"Invalid input for media request.",Cause:"Invalid media constraints.",Resolution:"Please check the media constraints."},{JSObject:"ATT.rtc.Phone",JSMethod:"*",ErrorCode:"15000",ErrorMessage:"Cannot interpret other party's state.",Cause:"Unable to Setup Event Interceptor. Please contact support.",Resolution:"Please contact support."},{JSObject:"ATT.rtc.Phone",JSMethod:"*",ErrorCode:"15001",ErrorMessage:"Event Channel unable to shutdown gracefully.",Cause:"Unable to shut down event channel. Please logout and login again.",Resolution:"Please login again."},{JSObject:"ATT.rtc.Phone",JSMethod:"*",ErrorCode:"15002",ErrorMessage:"Event Channel got shutdown unexpectedly.",Cause:"Event Channel stopped. Please logout and login again.",Resolution:"Please login again."},{JSObject:"ATT.rtc.Phone",JSMethod:"associateE911Id",ErrorCode:"17000",ErrorMessage:"e911Id parameter missing.",Cause:"Once or more required input parameter(s) are missing.",Resolution:"Please pass E911Id as a parameter."},{JSObject:"ATT.rtc.Phone",JSMethod:"associateE911Id",ErrorCode:"17001",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"associateE911Id",ErrorCode:"17002",ErrorMessage:"Could not update E911 Id, E911 Id could be updated only for ongoing session.",Cause:"Precondition failed.",Resolution:"E911 Id can be updated only for ongoing session, Please login and then update E911 Id if necessary."},{JSObject:"ATT.rtc.Phone",JSMethod:"startConference",ErrorCode:"18000",ErrorMessage:"Parameters missing.",Cause:"No parameter passed.",Resolution:"Please pass parameters to `startConference`."},{JSObject:"ATT.rtc.Phone",JSMethod:"startConference",ErrorCode:"18001",ErrorMessage:"Invalid `localMedia` passed.",Cause:"The `localMedia` parameter is missing.",Resolution:"Please pass `localMedia` as a parameter for start conference."},{JSObject:"ATT.rtc.Phone",JSMethod:"startConference",ErrorCode:"18002",ErrorMessage:"Invalid `remoteMedia` passed.",Cause:"The `remoteMedia` parameter is missing.",Resolution:"Please pass `remoteMedia` as a parameter for start conference."},{JSObject:"ATT.rtc.Phone",JSMethod:"startConference",ErrorCode:"18003",ErrorMessage:"Invalid `mediaType` passed.",Cause:"The `mediaType` parameter is missing.",Resolution:"Please pass `mediaType` as a parameter for start conference."},{JSObject:"ATT.rtc.Phone",JSMethod:"startConference",ErrorCode:"18004",ErrorMessage:"Internal error occurred.",Cause:"onUserMediaError",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"startConference",ErrorCode:"18005",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"startConference",ErrorCode:"18007",ErrorMessage:"User not login to make conference.",Cause:"User not logged In.",Resolution:"Please login before you make a conference."},{JSObject:"ATT.rtc.Phone",JSMethod:"joinConference",ErrorCode:"20000",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"joinConference",ErrorCode:"20001",ErrorMessage:"User is not logged in.",Cause:"Invalid operation.",Resolution:"Please login before invoking join conference."},{JSObject:"ATT.rtc.Phone",JSMethod:"joinConference",ErrorCode:"20002",ErrorMessage:"No conference invite.",Cause:"Invalid operation.",Resolution:"Cannot join conference before receiving an invite."},{JSObject:"ATT.rtc.Phone",JSMethod:"joinConference",ErrorCode:"20003",ErrorMessage:"Invalid media type.",Cause:"Invalid media constraints.",Resolution:"Please provide use valid Media constraints attributes."},{JSObject:"ATT.rtc.Phone",JSMethod:"joinConference",ErrorCode:"20004",ErrorMessage:"Mandatory fields cannot be empty.",Cause:"One of the Mandatory Parameters is empty.",Resolution:"Please check the values for input parameters."},{JSObject:"ATT.rtc.Phone",JSMethod:"joinConference",ErrorCode:"20005",ErrorMessage:"Invalid Action parameter.",Cause:"Action can only be `hold` or `end`.",Resolution:"Please provide a valid action (hold or end)."},{JSObject:"ATT.rtc.Phone",JSMethod:"rejectConference",ErrorCode:"22000",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"rejectConference",ErrorCode:"22001",ErrorMessage:"User is not logged in.",Cause:"Invalid operation.",Resolution:"Please login before invoking reject conference."},{JSObject:"ATT.rtc.Phone",JSMethod:"rejectConference",ErrorCode:"22002",ErrorMessage:"No conference invite.",Cause:"Invalid operation.",Resolution:"Cannot reject conference before receiving an invite."},{JSObject:"ATT.rtc.Phone",JSMethod:"getParticipants",ErrorCode:"21000",ErrorMessage:"Conference not initiated.",Cause:"Invalid operation.",Resolution:"Please invoke conference before invoking `getParticipants`."},{JSObject:"ATT.rtc.Phone",JSMethod:"getParticipants",ErrorCode:"21001",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"getParticipants",ErrorCode:"21002",ErrorMessage:"User is not logged in.",Cause:"Invalid operation.",Resolution:"Please login before invoking `getParticipants`."},{JSObject:"ATT.rtc.Phone",JSMethod:"endConference",ErrorCode:"23000",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"endConference",ErrorCode:"23001",ErrorMessage:"User is not logged in.",Cause:"Invalid operation.",Resolution:"Please login before invoking `endConference`."},{JSObject:"ATT.rtc.Phone",JSMethod:"endConference",ErrorCode:"23002",ErrorMessage:"`endConference` failed. A conference is not in progress.",Cause:"Cannot end a conference before the conference is established.",Resolution:"Allow the conference to be established before trying to end."},{JSObject:"ATT.rtc.Phone",JSMethod:"addParticipant",ErrorCode:"24000",ErrorMessage:"The participant parameter is missing.",Cause:"One or more required input parameter(s) are missing.",Resolution:"Please provide participant parameter."},{JSObject:"ATT.rtc.Phone",JSMethod:"addParticipant",ErrorCode:"24001",ErrorMessage:"The participant parameter is incorrect.",Cause:"One or more required input parameter(s) are not correct.",Resolution:"Please provide participant parameter of type string."},{JSObject:"ATT.rtc.Phone",JSMethod:"addParticipant",ErrorCode:"24002",ErrorMessage:"User is not logged in.",Cause:"Invalid operation.",Resolution:"Please login before invoking `addParticipant`."},{JSObject:"ATT.rtc.Phone",JSMethod:"addParticipant",ErrorCode:"24003",ErrorMessage:"Conference not initiated.",Cause:"Invalid operation.",Resolution:"Please invoke conference before invoking `addParticipant`."},{JSObject:"ATT.rtc.Phone",JSMethod:"addParticipant",ErrorCode:"24004",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"addParticipant",ErrorCode:"24005",ErrorMessage:"Cannot invite existing participant.",Cause:"Invalid operation.",Resolution:"Please invite new user."},{JSObject:"ATT.rtc.Phone",JSMethod:"addParticipant",ErrorCode:"24006",ErrorMessage:"Invalid input parameter.",Cause:"Invalid phone number.",Resolution:"Please provide valid 10 digit phone number."},{JSObject:"ATT.rtc.Phone",JSMethod:"addParticipant",ErrorCode:"24007",ErrorMessage:"Invalid input parameter.",Cause:"Invalid SIP URI.",Resolution:"Please provide valid SIP URI."},{JSObject:"ATT.rtc.Phone",JSMethod:"removeParticipant",ErrorCode:"25000",ErrorMessage:"User is not logged in.",Cause:"Invalid operation.",Resolution:"Please login before invoking `removeParticipant`."},{JSObject:"ATT.rtc.Phone",JSMethod:"removeParticipant",ErrorCode:"25001",ErrorMessage:"`removeParticipant` failed. Conference is not in progress.",Cause:"Cannot remove participant before the conference is established.",Resolution:"Allow conference to be established before trying to remove participant."},{JSObject:"ATT.rtc.Phone",JSMethod:"removeParticipant",ErrorCode:"25002",ErrorMessage:"The participant parameter is missing.",Cause:"One or more required input parameter(s) are missing.",Resolution:"Please provide participant parameter."},{JSObject:"ATT.rtc.Phone",JSMethod:"removeParticipant",ErrorCode:"25003",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"cleanPhoneNumber",ErrorCode:"26001",ErrorMessage:"An error occurred during cleanPhoneNumber.",Cause:"Invalid phone number passed.",Resolution:"Please pass a valid phone number."},{JSObject:"ATT.rtc.Phone",JSMethod:"formatNumber",ErrorCode:"26002",ErrorMessage:"An error occurred during formatNumber.",Cause:"Invalid phone number passed.",Resolution:"Please pass a valid phone number."},{JSObject:"ATT.rtc.Phone",JSMethod:"addCall",ErrorCode:"27000",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"addCall",ErrorCode:"27001",ErrorMessage:"Invalid options provided.",Cause:"Input options are not provided.",Resolution:"Please include the required parameters."},{JSObject:"ATT.rtc.Phone",JSMethod:"addCall",ErrorCode:"27002",ErrorMessage:"The parameter `localMedia` is not defined.",Cause:"The `localMedia` parameter is not defined.",Resolution:"Please include `localMedia` parameter."},{JSObject:"ATT.rtc.Phone",JSMethod:"addCall",ErrorCode:"27003",ErrorMessage:"The parameter `remoteMedia` is not defined.",Cause:"The `remoteMedia` parameter is not defined.",Resolution:"Please include `remoteMedia` parameter."},{JSObject:"ATT.rtc.Phone",JSMethod:"addCall",ErrorCode:"27004",ErrorMessage:"The parameter `destination` is not defined.",Cause:"The destination parameter is not defined.",Resolution:"Please include destination parameter."},{JSObject:"ATT.rtc.Phone",JSMethod:"addCall",ErrorCode:"27005",ErrorMessage:"Invalid input parameter.",Cause:"Invalid phone number.",Resolution:"Please provide valid phone number."},{JSObject:"ATT.rtc.Phone",JSMethod:"addCall",ErrorCode:"27006",ErrorMessage:"Invalid input parameter.",Cause:"Invalid SIP URI.",Resolution:"Please provide valid SIP URI."},{JSObject:"ATT.rtc.Phone",JSMethod:"addCall",ErrorCode:"27007",ErrorMessage:"Invalid media type.",Cause:"Invalid media constraints.",Resolution:"Please provide use valid Media constraints attributes."},{JSObject:"ATT.rtc.Phone",JSMethod:"addCall",ErrorCode:"27008",ErrorMessage:"User is not logged in.",Cause:"Invalid operation.",Resolution:"Please login before invoking dial."},{JSObject:"ATT.rtc.Phone",JSMethod:"addCall",ErrorCode:"27009",ErrorMessage:"Can not make second call. There is no first call in progress.",Cause:"Invalid operation.",Resolution:"Please ensure that there is an existing call in progress before making second call."},{JSObject:"ATT.rtc.Phone",JSMethod:"addCall",ErrorCode:"27010",ErrorMessage:"Cannot make a third call.",Cause:"Trying to make a third call.",Resolution:"Please end one of the calls."},{JSObject:"ATT.rtc.Phone",JSMethod:"move",ErrorCode:"28000",ErrorMessage:"User is not logged in.",Cause:"Invalid operation.",Resolution:"Please login before invoking move."},{JSObject:"ATT.rtc.Phone",JSMethod:"move",ErrorCode:"28001",ErrorMessage:"Move failed. Call is not in progress.",Cause:"Cannot move. There is no active call in progress.",Resolution:"Please ensure an active call is in progress before trying to move the call."},{JSObject:"ATT.rtc.Phone",JSMethod:"move",ErrorCode:"28002",ErrorMessage:"Cannot move a call when the call is on hold.",Cause:"Move was initiated when call was on hold.",Resolution:"Please resume the call before initiating a move."},{JSObject:"ATT.rtc.Phone",JSMethod:"move",ErrorCode:"28003",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"move",ErrorCode:"28004",ErrorMessage:"Move failed. Cannot move conference",Cause:"Uncaught error",Resolution:"Conferences cannot be moved"},{JSObject:"ATT.rtc.Phone",JSMethod:"transfer",ErrorCode:"29000",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"transfer",ErrorCode:"29001",ErrorMessage:"User is not logged in.",Cause:"Invalid operation.",Resolution:"Please login before invoking transfer."},{JSObject:"ATT.rtc.Phone",JSMethod:"transfer",ErrorCode:"29002",ErrorMessage:"Transfer failed. Call is not in progress.",Cause:"Cannot transfer. There is no active call in progress.",Resolution:"Please ensure an active call is in progress before trying to transfer the call."},{JSObject:"ATT.rtc.Phone",JSMethod:"transfer",ErrorCode:"29003",ErrorMessage:"Transfer Failed.",Cause:"Transfer was initiated when the call is not on hold.",Resolution:"Please ensure that the call is on hold before initiating transfer."},{JSObject:"ATT.rtc.Phone",JSMethod:"transfer",ErrorCode:"29004",ErrorMessage:"Transfer failed. There is only one call in progress.",Cause:"Invalid Options.",Resolution:"Please establish two calls before invoking transfer."},{JSObject:"ATT.rtc.Phone",JSMethod:"transfer",ErrorCode:"29005",ErrorMessage:"Transfer failed. Cannot transfer conference",Cause:"invalid Options",Resolution:"Cannot transfer conference"},{JSObject:"ATT.rtc.Phone",JSMethod:"switch",ErrorCode:"30000",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"switch",ErrorCode:"30001",ErrorMessage:"User is not logged in.",Cause:"Invalid operation.",Resolution:"Please login before invoking switch."},{JSObject:"ATT.rtc.Phone",JSMethod:"switch",ErrorCode:"30002",ErrorMessage:"Switch failed. Call is not in progress.",Cause:"Cannot switch. There is no active call in progress.",Resolution:"Please ensure an active call is in progress before trying to invoke switch."},{JSObject:"ATT.rtc.Phone",JSMethod:"switch",ErrorCode:"30003",ErrorMessage:"Switch failed. Only one call is in progress.",Cause:"Trying to invoke switch when only one call is established.",Resolution:"Please create two calls before invoking switch."},{JSObject:"ATT.rtc.Phone",JSMethod:"setIceServers",ErrorCode:"40000",ErrorMessage:"Invalid `iceServers` Array passed.",Cause:"The `iceServers` parameter passed is not a valid array of ICE servers.",Resolution:"Please verify the input to be a valid ICE server array with uris."},{JSObject:"ATT.rtc.Phone",JSMethod:"setIceTransport",ErrorCode:"50000",ErrorMessage:"Invalid ICE Transport parameters passed.",Cause:"The ICE transport parameter passed is not a valid string.",Resolution:"Please provide a valid string as an input for ICE transport."},{JSObject:"ATT.rtc.Phone",JSMethod:"setIceTransport",ErrorCode:"50001",ErrorMessage:"Passed and invalid values other than `none`, `all` or `relay` for `iceTransport`.",Cause:"The ICE transport parameter passed has invalid values.",Resolution:"Please pass 'none','all' or 'relay' as values to `iceTransport`."},{JSObject:"ATT.rtc.Phone",JSMethod:"setIpv6",ErrorCode:"60000",ErrorMessage:"Passed an invalid `ipv6` parameter.",Cause:"The `ipv6` parameter passed is not a boolean value.",Resolution:"Please pass a boolean value to `setIpv6` method."},{JSObject:"ATT.rtc.Phone",JSMethod:"acceptModification",ErrorCode:"31000",ErrorMessage:"Failed to accept modification. There is no active call.",Cause:"There is no active call to accept media modification.",Resolution:"Please make sure there is an active call before accepting modifications."},{JSObject:"ATT.acceptModification.Phone",JSMethod:"acceptModification",ErrorCode:"31001",ErrorMessage:"Failed to accept modification. There is no modification to accept.",Cause:"Tried to accept a modification but there is no modification to accept.",Resolution:"Use this method only after you have received a modification request (Upgrade/Downgrade)."},{JSObject:"ATT.rtc.Phone",JSMethod:"acceptModification",ErrorCode:"31002",ErrorMessage:"Failed to accept modification. The call cannot accept modifications now.",Cause:"Call can only accept modifications when the call is connected or on hold.",Resolution:"Please ensure that the call is either connected or on hold."},{JSObject:"ATT.rtc.Phone",JSMethod:"acceptModification",ErrorCode:"31003",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"acceptModification",ErrorCode:"31004",ErrorMessage:"Error during `getUserMedia` for `acceptModification` for call.",Cause:"`getUserMedia` threw an error when accessing the media device.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"rejectModification",ErrorCode:"32000",ErrorMessage:"Failed to reject modification. There is not an active call.",Cause:"There is not an active call.",Resolution:"Please make sure there is an active call and that you have received a modification (Upgrade/Downgrade) request before calling this method."},{JSObject:"ATT.rtc.Phone",JSMethod:"rejectModification",ErrorCode:"32001",ErrorMessage:"Failed to reject modification. There is no modification to reject.",Cause:"Tried to reject a modification but there is no modification to reject.",Resolution:"Use this method only after you have received a modification request (Upgrade/Downgrade)."},{JSObject:"ATT.rtc.Phone",JSMethod:"rejectModification",ErrorCode:"32002",ErrorMessage:"Failed to reject modification.",Cause:"Call can only reject modifications when the call is connected or on hold.",Resolution:"Please ensure that the call is either connected or on hold."},{JSObject:"ATT.rtc.Phone",JSMethod:"rejectModification",ErrorCode:"32003",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"downgrade",ErrorCode:"33000",ErrorMessage:"Error while downgrading.",Cause:"There is no active call to downgrade.",Resolution:"There should be an active call to downgrade."},{JSObject:"ATT.rtc.Phone",JSMethod:"downgrade",ErrorCode:"33001",ErrorMessage:"Downgrade failed.",Cause:"Cannot downgrade a call when call is on hold.",Resolution:"Please ensure that the call is connected before initiating a downgrade."},{JSObject:"ATT.rtc.Phone",JSMethod:"downgrade",ErrorCode:"33002",ErrorMessage:"Cannot downgrade an Audio call.",Cause:"Trying to downgrade an Audio call.",Resolution:"Cannot downgrade an Audio call."},{JSObject:"ATT.rtc.Phone",JSMethod:"downgrade",ErrorCode:"33003",ErrorMessage:"Failed to downgrade a conference.",Cause:"Cannot downgrade a conference.",Resolution:"Only basic calls can be downgraded."},{JSObject:"ATT.rtc.Phone",JSMethod:"downgrade",ErrorCode:"33004",ErrorMessage:"Error during `getUserMedia`.",Cause:"Failed to get the user media.",Resolution:"Please enable media for the browser."},{JSObject:"ATT.rtc.Phone",JSMethod:"downgrade",ErrorCode:"33005",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"upgrade",ErrorCode:"34000",ErrorMessage:"Error while upgrading.",Cause:"There is no active call to upgrade.",Resolution:"There should be an active call to upgrade."},{JSObject:"ATT.rtc.Phone",JSMethod:"upgrade",ErrorCode:"34001",ErrorMessage:"Upgrade failed.",Cause:"Call cannot be upgraded if the call is on hold.",Resolution:"Please ensure that the call is connected before upgrade."},{JSObject:"ATT.rtc.Phone",JSMethod:"upgrade",ErrorCode:"34002",ErrorMessage:"Cannot upgrade a video call.",Cause:"Trying to upgrade a video call.",Resolution:"Cannot upgrade a video call."},{JSObject:"ATT.rtc.Phone",JSMethod:"upgrade",ErrorCode:"34003",ErrorMessage:"Cannot upgrade a conference.",Cause:"Cannot upgrade a conference.",Resolution:"Only basic calls can be upgraded."},{JSObject:"ATT.rtc.Phone",JSMethod:"upgrade",ErrorCode:"34004",ErrorMessage:"Error during `getUserMedia`.",Cause:"Failed to get the user media.",Resolution:"Please enable media for the browser."},{JSObject:"ATT.rtc.Phone",JSMethod:"upgrade",ErrorCode:"34005",ErrorMessage:"Internal error occurred.",Cause:"Uncaught error.",Resolution:"Please check the logs and contact support if needed."},{JSObject:"ATT.rtc.Phone",JSMethod:"sendDTMFTone",ErrorCode:"35000",ErrorMessage:"User is not logged in.",Cause:"Invalid operation.",Resolution:"Please login before invoking sendDTMFTone."},{JSObject:"ATT.rtc.Phone",JSMethod:"sendDTMFTone",ErrorCode:"35001",ErrorMessage:"There is no active call.",Cause:"Invalid operation.",Resolution:"Please dial a call before invoking sendDTMFTone."},{
JSObject:"ATT.rtc.Phone",JSMethod:"sendDTMFTone",ErrorCode:"35002",ErrorMessage:"Invalid options provided.",Cause:"Input options are not provided.",Resolution:"Please include the required parameters."},{JSObject:"ATT.rtc.Phone",JSMethod:"sendDTMFTone",ErrorCode:"35003",ErrorMessage:"Sending dtmf tone failed.",Cause:"Call was on `held' or `hold`.",Resolution:"Please ensure that current call is not on hold before sending DTMF tone."},{JSObject:"ATT.rtc.Phone",JSMethod:"sendDTMFTone",ErrorCode:"35004",ErrorMessage:"Sending dtmf tone failed.",Cause:"Internal error occurred.",Resolution:"Please check the log for additional information"}];if(void 0===window.ATT.utils)throw new Error("Cannot export SDK Errors into ATT.utils.ErrorStore.SDKErrors, ATT.utils namespace is undefined...\n ATT: "+JSON.stringify(window.ATT));window.ATT.utils.ErrorStore={},window.ATT.utils.ErrorStore.SDKErrors={getAllSDKErrors:function(){var c,d,e={};for(c=0;c<b.length;c+=1)d=b[c].ErrorCode,e[d]=b[c];return a(e)}}}(),function(){"use strict";var a=[{JSObject:"ATT.rtc",JSMethod:"*",ErrorCode:2500,ErrorMessage:"System error occurred",PossibleCauses:"System error occurred",PossibleResolution:"Use the explanation to find the reason for failure.",APIError:"SVC0001: A service error has occurred. Error code is <error_explanation>",ResourceMethod:"POST /RTC/v1/sessions",HttpStatusCode:400,MessageId:"SVC0001"},{JSObject:"ATT.rtc",JSMethod:"*",ErrorCode:2501,ErrorMessage:"Mandatory parameter is missing in the Request.",PossibleCauses:"Mandatory parameter is missing in the request.",PossibleResolution:"The parameter name is suggested in the error text. Message part contains the missing parameter name.",APIError:"SVC0002 - Invalid input value for message part <part_name>",ResourceMethod:"POST /RTC/v1/sessions",HttpStatusCode:400,MessageId:"SVC0002"},{JSObject:"ATT.rtc",JSMethod:"*",ErrorCode:2502,ErrorMessage:"Invalid values provided for a parameter in the request.",PossibleCauses:"Invalid values are passed in the Request.",PossibleResolution:"Pass the valid values as suggested in the error response.",APIError:"SVC0003 - Invalid input value for message part <part_name>, valid values are <part_values>",ResourceMethod:"POST /RTC/v1/sessions",HttpStatusCode:400,MessageId:"SVC0003"},{JSObject:"ATT.rtc",JSMethod:"*",ErrorCode:2503,ErrorMessage:"Invalid addresses provided in the request.",PossibleCauses:"Invalid addresses provided in the request.",PossibleResolution:"Pass the valid address as suggested in the error response.",APIError:"SVC0004 - No valid addresses provided in message part <part_name>",ResourceMethod:"POST /RTC/v1/sessions",HttpStatusCode:400,MessageId:"SVC0004"},{JSObject:"ATT.rtc",JSMethod:"login",ErrorCode:2504,ErrorMessage:"E911 not supported for non-telephone users",PossibleCauses:"E911 Id is not a required parameter for this user type (account id)",PossibleResolution:"Please don’t pass E911 id to login for account id users",APIError:"SVC8510:E911 not supported for non-telephone users",ResourceMethod:"POST /RTC/v1/sessions",HttpStatusCode:400,MessageId:"SVC8510"},{JSObject:"ATT.rtc",JSMethod:"login",ErrorCode:2505,ErrorMessage:"Valid e911Id is mandatory for mobile number or virtual number",PossibleCauses:"x-e911Id is missing in the request. x-e911Id is invalid.",PossibleResolution:"e911Id should be retrieved using E911 API and appropriately passed in the Create Session Request.",APIError:"SVC8511:Valid e911Id is mandatory for <part_value>",ResourceMethod:"POST /RTC/v1/sessions",HttpStatusCode:400,MessageId:"SVC8511"},{JSObject:"ATT.rtc",JSMethod:"login",ErrorCode:2506,ErrorMessage:"Access token not associated with virtual number or account id",PossibleCauses:"Access token not assigned to virtual number or account id.",PossibleResolution:"Call associate token operation before create session for virtual number or account id scenario.",APIError:"SVC8512:Unassigned token associate token to virtual number or account id",ResourceMethod:"POST /RTC/v1/sessions",HttpStatusCode:400,MessageId:"SVC8512"},{JSObject:"ATT.rtc",JSMethod:"login",ErrorCode:2507,ErrorMessage:"Token in use.",PossibleCauses:"A session was already created with the access token",PossibleResolution:"In case the user abruptly closed the application, expire the token and retrieve new token.",APIError:"SVC8513:Token in use.",ResourceMethod:"POST /RTC/v1/sessions",HttpStatusCode:400,MessageId:"SVC8513"},{JSObject:"ATT.rtc",JSMethod:"*",ErrorCode:2508,ErrorMessage:"Access token is invalid.",PossibleCauses:"Access Token is incorrect or invalid. Access token is not authorized for the Enhanced WebRTC scope.",PossibleResolution:"Re-authenticate and retrieve the correct access token.",APIError:"POL0001:A policy error occurred.",ResourceMethod:"POST /RTC/v1/sessions",HttpStatusCode:401,MessageId:"POL0001"},{JSObject:"ATT.rtc",JSMethod:"*",ErrorCode:2509,ErrorMessage:"Invalid token",PossibleCauses:"Access Token is incorrect or invalid.",PossibleResolution:"Re-Authenticate and retrieve the correct access token for Enhanced WebRTC",APIError:"POL0002:Privacy verification failed for address <address> request is refused",ResourceMethod:"POST /RTC/v1/sessions",HttpStatusCode:403,MessageId:"POL0002"},{JSObject:"ATT.rtc",JSMethod:"*",ErrorCode:2510,ErrorMessage:"Not implemented",PossibleCauses:"Reserved for future use",PossibleResolution:"Reserved for future use",APIError:"POL0003:Too many addresses specified in Message part",ResourceMethod:"POST /RTC/v1/sessions",HttpStatusCode:403,MessageId:"POL0003"},{JSObject:"ATT.rtc",JSMethod:"*",ErrorCode:2511,ErrorMessage:"User has not been provisioned for Enhanced WebRTC",PossibleCauses:"User has not been provisioned for Enhanced WebRTC service",PossibleResolution:"End user needs to provide consent to be provisioned.",APIError:"POL1009:User has not been provisioned for %1",ResourceMethod:"POST /RTC/v1/sessions",HttpStatusCode:403,MessageId:"POL1009"},{JSObject:"ATT.rtc",JSMethod:"login",ErrorCode:2512,ErrorMessage:"Number of Session exceeds the allowed limit.",PossibleCauses:"For virtual number and account id users: Since virtual number is assigned to a specific user.Max number of sessions is defined by the network.",PossibleResolution:"For virtual number and account id scenario, contact Administrator.",APIError:"POL1100:Max number of session exceeded allowed limit %1",ResourceMethod:"POST /RTC/v1/sessions",HttpStatusCode:403,MessageId:"POL1100"},{JSObject:"ATT.rtc",JSMethod:"logout",ErrorCode:3507,ErrorMessage:"Session Id is not associated with the Access Token passed in the request.",PossibleCauses:"Access Token that was passed in the Request is not mapped to the Session Id.",PossibleResolution:"Use the same Access Token that was initially passed in.",APIError:"POL1102:Session Id not associated with the token",ResourceMethod:"DELETE /RTC/v1/sessions/{sessionid}",HttpStatusCode:403,MessageId:"POL1102"},{JSObject:"ATT.rtc.Phone",JSMethod:"answer",ErrorCode:5504,ErrorMessage:"Duplicate Request",PossibleCauses:"A media modification is in progress for the callId.",PossibleResolution:"Complete the In-Progress Media modification before initiating another request.",APIError:"SVC8501: Call <callid> in progress",ResourceMethod:"PUT /RTC/v1/sessions/{sessionid}/calls/{callid}",HttpStatusCode:409,MessageId:"SVC8501"},{JSObject:"ATT.rtc.Phone",JSMethod:"hold",ErrorCode:7508,ErrorMessage:"Duplicate Request",PossibleCauses:"A media modification is in progress for the callId.",PossibleResolution:"Complete the In-Progress Media modification before initiating another request.",APIError:"SVC8501: Call <callid> in progress",ResourceMethod:"PUT /RTC/v1/sessions/{sessionid}/calls/{callid}",HttpStatusCode:409,MessageId:"SVC8501"},{JSObject:"ATT.rtc.Phone",JSMethod:"resume",ErrorCode:8508,ErrorMessage:"Duplicate request",PossibleCauses:"A media modification is in progress for the callId.",PossibleResolution:"Complete the In-Progress Media modification before initiating another request.",APIError:"SVC8501: Call <callid> in progress",ResourceMethod:"PUT /RTC/v1/sessions/{sessionid}/calls/{callid}",HttpStatusCode:409,MessageId:"SVC8501"},{JSObject:"ATT.rtc.Phone",JSMethod:"createE911Id",ErrorCode:16503,ErrorMessage:"Address provided by the end user is not geo codable.",PossibleCauses:"The address provided is unreachable.",PossibleResolution:"Correct the portion of address as per the error text and retry.",APIError:"SVC0015: Address is not valid address for E911 routing.Reason",ResourceMethod:"POST emergencyServices/v1/e911Location",HttpStatusCode:400,MessageId:"SVC0015"},{JSObject:"ATT.rtc.Phone",JSMethod:"createE911Id",ErrorCode:16504,ErrorMessage:"The address provided is not present in the System.",PossibleCauses:"The address provided is not present in the System.",PossibleResolution:"Confirm the address by setting isAddressConfirmed to true and retry.",APIError:"SVC0016: Address Confirmation Required ",ResourceMethod:"POST emergencyServices/v1/e911Location",HttpStatusCode:400,MessageId:"SVC0016"},{JSObject:"ATT.rtc.Phone",JSMethod:"createE911Id",ErrorCode:16505,ErrorMessage:"System is unavailable to process the request.",PossibleCauses:"System is unavailable to process the request.",PossibleResolution:"Please try again later.",APIError:"SVC0017: NENA provider system is not available.",ResourceMethod:"POST emergencyServices/v1/e911Location",HttpStatusCode:400,MessageId:"SVC0017"},{JSObject:"ATT.rtc.Phone",JSMethod:"createE911Id",ErrorCode:16506,ErrorMessage:"System is available but could not process the request.",PossibleCauses:"System is available but could not process the request.",PossibleResolution:"Please contact system administrator.",APIError:"SVC0018: NENA provider system error",ResourceMethod:"POST emergencyServices/v1/e911Location",HttpStatusCode:400,MessageId:"SVC0018"},{JSObject:"ATT.rtc.Phone",JSMethod:"createE911Id",ErrorCode:16507,ErrorMessage:"Access token is invalid.",PossibleCauses:"Access Token is incorrect or invalid, or Access token is not authorized for the Enhanced WebRTC scope.",PossibleResolution:"Re-Authenticate and retrieve the correct access token.",APIError:"POL0001: A policy error occurred. For example, rate limit error, authentication and authorization errors",ResourceMethod:"POST emergencyServices/v1/e911Location",HttpStatusCode:401,MessageId:"POL0001"},{JSObject:"ATT.rtc.Phone",JSMethod:"createE911Id",ErrorCode:16508,ErrorMessage:"Invalid token",PossibleCauses:"Access Token is incorrect or in valid.",PossibleResolution:"Re-Authenticate and retrieve the correct access token for Enhanced WebRTC",APIError:"POL0002: Privacy verification failed for address <address> request is refused",ResourceMethod:"POST emergencyServices/v1/e911Location",HttpStatusCode:403,MessageId:"POL0002"},{JSObject:"ATT.rtc.Phone",JSMethod:"createE911Id",ErrorCode:16509,ErrorMessage:"Not implemented",PossibleCauses:"Reserved for future use",PossibleResolution:"Reserved for future use",APIError:"POL0003: Too many addresses specified in Message part",ResourceMethod:"POST emergencyServices/v1/e911Location",HttpStatusCode:403,MessageId:"POL0003"},{JSObject:"ATT.rtc.Phone",JSMethod:"createE911Id",ErrorCode:16511,ErrorMessage:"System error occurred",PossibleCauses:"System error occurred",PossibleResolution:"Use the explanation to find the reason for failure.",APIError:"SVC0001: A service error has occurred. Error code is <error_explanation>",ResourceMethod:"POST emergencyServices/v1/e911Location",HttpStatusCode:400,MessageId:"SVC0001"},{JSObject:"ATT.rtc.Phone",JSMethod:"*",ErrorCode:500,ErrorMessage:"<method name> failed - Unable to complete requested operation",PossibleCauses:"System error occurred",PossibleResolution:"Use the explanation to find the reason for failure.",APIError:"Populated from API response if available",ResourceMethod:"METHOD: Resource URL",HttpStatusCode:500,MessageId:""},{JSObject:"ATT.rtc.Phone",JSMethod:"*",ErrorCode:502,ErrorMessage:"<method name> failed - Unable to complete requested operation",PossibleCauses:"Please look into API Error",PossibleResolution:"Please look into API Error",APIError:"Populated from API response if available",ResourceMethod:"METHOD: Resource URL",HttpStatusCode:502,MessageId:""},{JSObject:"ATT.rtc.Phone",JSMethod:"*",ErrorCode:503,ErrorMessage:"<method name> failed - Unable to complete requested operation",PossibleCauses:"Bad Gateway",PossibleResolution:"Please look into API Error",APIError:"Populated from API response if available",ResourceMethod:"METHOD: Resource URL",HttpStatusCode:503,MessageId:""},{JSObject:"ATT.rtc.Phone",JSMethod:"*",ErrorCode:504,ErrorMessage:"<method name> failed - Unable to complete requested operation",PossibleCauses:"Service Unavailable",PossibleResolution:"Please look into API Error",APIError:"Populated from API response if available",ResourceMethod:"METHOD: Resource URL",HttpStatusCode:504,MessageId:""}];if(void 0===window.ATT.utils.ErrorStore)throw new Error("Cannot export SDK Errors into ATT.utils.ErrorStore.APIErrors, ATT.utils.ErrorStore namespace is undefined.\n ATT: "+JSON.stringify(window.ATT));window.ATT.utils.ErrorStore.APIErrors={getAllAPIErrors:function(){return a}}}(),function(){"use strict";function a(a,b){function c(a){return a.formatError=function(){var b=a.JSObject+"-"+a.JSMethod+"-"+a.ErrorCode+"-"+a.ErrorMessage+"-"+a.PossibleCauses+"-"+a.PossibleResolution+"-"+a.APIError+"-"+a.ResourceMethod+"-"+a.HttpStatusCode+"-"+a.MessageId;return b},a}function d(a){return a.getId=function(){var b=a.ErrorCode;return b},a}function e(a){return a.getAPIErrorByMethodStatusMsgId=function(){var b=a.JSMethod+a.HttpStatusCode+a.MessageId;return b},a}var f,g={JSObject:"",JSMethod:"",ErrorCode:"",ErrorMessage:"",PossibleCauses:"",PossibleResolution:"",APIError:"",ResourceMethod:"",HttpStatusCode:"",MessageId:""};return f=Object.create(g),f=b.extend(f,a),f=c(f),f=d(f),f=e(f)}function b(b,c){var d=ATT.utils,e=null,f=0,g=[],h=c.length;for(f=0;h>f;f+=1)e=a(c[f],d),g[e.getId()]=e,g[e.getAPIErrorByMethodStatusMsgId()]=e;return{createError:function(b){return a(b,d)},getSDKError:function(a){return b[a]},getError:function(a){return g[a]},getAPIError:function(a,b,c){var d=g[a+b+c];return d||(d=g["*"+b+c],d&&(d.JSMethod=a)),d},getDefaultError:function(b){return a(b,d)}}}var c;c=typeof module,"undefined"!==c&&module.exports&&(module.exports=b);try{window.ATT.utils.createErrorDictionary=b}catch(d){throw new Error("Error while exporting ATT.errorDictionary.\n ATT = ",JSON.stringify(window.ATT)+"Original Message: "+d.message)}}(),function(){"use strict";function a(a){c.logDebug("ATT.private.error: parseAPIErrorResponse"),c.logInfo("Parses the error response and checks for Type"),c.logTrace(a);var b,d=a.getJson(),e={};return d.RequestError?(d.RequestError.ServiceException?e={APIError:d.RequestError.ServiceException.MessageId+":"+d.RequestError.ServiceException.Text+",Variables="+d.RequestError.ServiceException.Variables,MessageId:d.RequestError.ServiceException.MessageId}:d.RequestError.PolicyException?e={APIError:d.RequestError.PolicyException.MessageId+":"+d.RequestError.PolicyException.Text+",Variables="+d.RequestError.PolicyException.Variables,MessageId:d.RequestError.PolicyException.MessageId}:d.RequestError.Exception&&(e={APIError:(d.RequestError.Exception.MessageId||"")+":"+d.RequestError.Exception.Text+",Variables="+d.RequestError.Exception.Variables||"",MessageId:d.RequestError.Exception.MessageId}),e.ResourceMethod=a.getResourceURL(),e.HttpStatusCode=a.getResponseStatus(),e.APIError||(e.APIError=a.responseText,e.MessageId="",c.logError("Unable to parse API Error. Response is empty :"+a)),c.logTrace("error",e),e):(a.getResponseStatus()>=500?(b=""!==a.getJson()?JSON.stringify(a.getJson()):a.responseText,e=ATT.errorDictionary.getAPIError("*",a.getResponseStatus(),""),e.APIError=b,c.logError("Service Unavailable"),c.logError(a),c.logError(e)):(e={APIError:a.responseText},c.logError(a),c.logError(e)),e.ResourceMethod=a.getResourceURL(),e.HttpStatusCode=a.getResponseStatus(),c.logTrace("error",e),e)}function b(a,b,d,e){c.logDebug("ATT.private.error: createAPIErrorCode"),c.logInfo("Parses the error response and checks for Type"),c.logTrace("methodName",d),c.logTrace("moduleId",e),c.logTrace("raw error",a);var f,g;return void 0!==a.HttpStatusCode?g=a:void 0!==a.errorDetail.HttpStatusCode&&(g=a.errorDetail),d=d||"GeneralOperation",e=e||"RTC",0!==g.HttpStatusCode?(f=ATT.errorDictionary.getAPIError(d,g.HttpStatusCode,g.MessageId),void 0!==f&&(f.APIError=g.APIError,f.HttpStatusCode=g.HttpStatusCode,f.MessageId=g.MessageId,f.ResourceMethod=g.ResourceMethod)):f=g,f||(c.logError("Error not found in Error dictionary "),c.logError(a),f=ATT.errorDictionary.getDefaultError({JSObject:b,ErrorCode:e+"-UNKNOWN",JSMethod:d,HttpStatusCode:a.HttpStatusCode||"Unknown",ErrorMessage:d+" failed",APIError:g.APIError||a.responseText,PossibleCauses:"Please look into APIError",PossibleResolution:"Please look into APIError",MessageId:g.MessageId||"",ResourceMethod:g.ResourceMethod||a.getResourceURL()}),c.logError("Generating Missing error response:"+f)),f}var c=ATT.logManager.createLogger("privateError");if(c.logDebug("Initializing error module"),void 0===ATT["private"])throw new Error("Error exporting ATT.private.error");ATT["private"].error={parseAPIErrorResponse:a,createAPIErrorCode:b}}(),function(){"use strict";function a(){if(f.logDebug("ATT.rtc: hasWebRTC"),f.logInfo("Checking if Enhanced WebRTC is supported"),"function"==typeof navigator.mozGetUserMedia||"function"==typeof navigator.webkitGetUserMedia||"function"==typeof navigator.getUserMedia){var a,b,c=e.app.getBrowserSupport(),d=g.getBrowserName(),h=g.getBrowserVersion(),i=!1,j=!1;if(f.logInfo("Browser: "+d),f.logInfo("Version: "+h),0<c.supported.length&&0<c.not_certified.length){if(0<=c.supported.length)for(b=0;b<c.supported.length;b+=1)a=c.supported[b],d===a.name&&(i=!0,void 0!==a.version&&(void 0!==a.version.min&&a.version.min>Number.parseInt(h)&&(i=!1),void 0!==a.version.max&&a.version.max<Number.parseInt(h)&&(i=!1)));if(i)return f.logInfo("Browser supported"),"Supported";if(0<=c.not_certified.length)for(b=0;b<c.not_certified.length;b+=1)a=c.not_certified[b],d===a.name&&(j=!0,void 0!==a.version&&(void 0!==a.version.min&&a.version.min>Number.parseInt(h)&&(j=!1),void 0!==a.version.max&&a.version.max<Number.parseInt(h)&&(j=!1)));if(j)return f.logWarning("Browser not certified"),"Not Certified"}}return f.logError("Browser not supported"),"Not Supported"}function b(){return"undefined"!==navigator?window.isNavigatorOnline()?!0:!1:void 0}function c(){return window.navigator.onLine}function d(){return e.app.getBrowserSupport()}var e=ATT["private"].config,f=ATT.logManager.createLogger("browser"),g=ATT.utils;if(f.logDebug("Loading att.browser..."),window.isNavigatorOnline=c,void 0===ATT.browser)throw new Error("Error exporting ATT.browser methods");ATT.browser.hasWebRTC=a,ATT.browser.isNetworkConnected=b,ATT.browser.getBrowserSupport=d}(),function(){"use strict";function a(a){function f(a,b){e.logDebug("ATT.private.resourceManager: createRESTConfiguration"),e.logInfo("Creating REST configuration..."),e.logTrace("operationConfig",a),e.logTrace("options",b);var d,f,g,h,i,j,k,l;if(d=c.extend({},a),f=a.formatters||{},g=Object.keys(f).length,f&&g>0){if(void 0===b.params||g!==Object.keys(b.params).length)throw e.logError("Params passed in must match number of formatters"),e.logTrace("formatters",f),e.logTrace("params",b.params),new Error("Params passed in must match number of formatters.");if(f.method&&!b.params.method)throw e.logError("Missing method parameter for the method formatter."),new Error("Missing method parameter for the method formatter.");if(f.url&&!b.params.url)throw e.logError("Missing URL parameter for the URL formatter."),new Error("Missing URL parameter for the URL formatter.");if(f.headers&&Object.keys(b.params.headers).length!==Object.keys(a.formatters.headers).length)throw e.logError("Header formatters in APIConfigs do not match header parameters provided."),new Error("Header formatters in APIConfigs do not match the header parameters being passed in.");if("string"==typeof f.method&&(d.method=b.params.method||a.formatters.method,e.logInfo("updated restConfig method"),e.logTrace("restConfig.method",d.method)),"function"==typeof f.url&&(d.url=a.formatters.url(b.params.url),e.logInfo("updated restConfig url"),e.logTrace("restConfig.url",d.url)),"object"==typeof f.headers&&Object.keys(f.headers).length>0){l={},e.logInfo("Configuring request headers...");for(h in b.params.headers)if(b.params.headers.hasOwnProperty(h)){if("options"===h&&"object"==typeof a.formatters.headers[h]){if(0===Object.keys(b.params.headers[h]).length)throw e.logError("Options for header not passed in. Cannot construct request"),new Error("Options for header not passed in. Cannot construct request");k=Object.keys(b.params.headers[h])[0],i=a.formatters.headers[h][k],j=b.params.headers[h][k],h=k}else i=a.formatters.headers[h],j=b.params.headers[h];l[h]=i(j),e.logTrace(h,l[h])}d.headers=ATT.utils.extend({},d.headers),d.headers=ATT.utils.extend(d.headers,l),e.logTrace("restConfig.headers",d.headers)}}return b.data&&(d.data=b.data),e.logTrace("restConfig",d),d}function g(a){function c(c,f,g){e.logDebug("restOperation");var h;b=ATT.errorDictionary,a.success=c,a.error=function(a){0===a.getResponseStatus()&&""===a.responseText?(a.errorDetail=b.getSDKError("0003"),a.errorDetail.HttpStatusCode=a.getResponseStatus(),a.errorDetail.ResourceMethod=a.getResourceURL(),f.call(this,a.errorDetail)):(a.errorDetail=d.parseAPIErrorResponse(a),f.call(this,a.errorDetail))},a.ontimeout=function(){var c={};c.errorDetail=b.getSDKError("0003"),c.errorDetail.HttpStatusCode=0,c.errorDetail.ResourceMethod=a.url,g?g.call(this,c.errorDetail):f.call(this,c.errorDetail)},h=new ATT.RESTClient(a),h.ajax()}return e.logDebug("ATT.private.resourceManager: createRESTOperation"),e.logInfo("Creating REST Operation..."),e.logTrace("restConfig",a),c}function h(a,b){e.logDebug("ATT.private.resourceManager: getOperation"),e.logTrace("operationName",a),e.logTrace("operationOpts",b);var c,d,h,i;if(i=k.getAPIConfiguration(),c=i[a],void 0===c)throw new Error("Operation not found.");if(void 0===b)throw new Error("No options found.");return d=f(c,b),h=g(d)}function i(a,b){if(e.logDebug("ATT.private.resourceManager: doOperation"),e.logTrace("operationName",a),e.logTrace("operationConfig",b),void 0===a||0===a.length)throw e.logError("no operation name provided"),new Error("Must specify an operation name.");if(void 0===b||0===Object.keys(b).length)throw new Error("No options found.");if(void 0===b.success)throw new Error("No `success` callback passed.");if("function"!=typeof b.success)throw new Error("`success` callback has to be a function.");if(void 0===b.error)throw new Error("No `error` callback passed.");if("function"!=typeof b.error)throw new Error("`error` callback has to be a function.");try{var c=h(a,b);e.logInfo("About to perform operation "+a),c(b.success,b.error,b.ontimeout)}catch(d){throw e.logError("Error performing operation: "+a),e.logTrace(d),d}}function j(){return e.logDebug("ATT.private.resourceManager: getRestOperationsConfig"),k.getAPIConfiguration()}e.logDebug("ATT.private.factories: createResourceManager"),e.logInfo("Creating resource manager..."),e.logTrace("apiConfig",a);var k;if(void 0===a||0===Object.keys(a).length)throw new Error("No API configuration passed");if(void 0===a.getAPIConfiguration)throw new Error("No `getAPIConfiguration` method found.");return k=a,{doOperation:i,getRestOperationsConfig:j}}var b,c=ATT.utils,d=ATT["private"].error,e=ATT.logManager.createLogger("resourceManager");if(e.logDebug("Loading att.private.resource-manager..."),void 0===ATT["private"].factories)throw new Error("Error exporting `createResourceManager`");ATT["private"].factories.createResourceManager=a}(),function(){"use strict";function a(a){function e(a){if(b.logDebug("ATT.utils.event-channel: processMessages"),b.logInfo("Processing events..."),b.logTrace("messages",a),m=t?JSON.parse(a.responseText):JSON.parse(a.data),b.logTrace("eventData",m),m.events){b.logInfo("Publish events individually");var c,d=m.events.eventList;for(c in d)d.hasOwnProperty(c)&&(b.logTrace("eventObject",d[c].eventObject),q.publish("api-event",d[c].eventObject))}}function f(){b.logDebug("ATT.utils.event-channel: stopListening"),b.logInfo("Stop listening to event channel"),s=!1}function g(a,c){if(b.logDebug("ATT.utils.event-channel: on"),b.logInfo("Subscribing to event-channel event "+a),"api-event"!==a&&"channel-error"!==a)throw b.logError("Event not defined"),new Error("Event not defined");if("function"!=typeof c)throw b.logError("Handler is not a function"),new Error("Handler is not a function");q.unsubscribe(a,c),q.subscribe(a,c,this)}function h(c,d){b.logDebug("ATT.utils.event-channel: retry"),b.logInfo("Retry polling ..."),b.logTrace("config",c),b.logTrace("error",d),204!==d.HttpStatusCode?(b.logInfo("Response code was: "+d.HttpStatusCode),b.logInfo("Re-polling..."),q.publish("channel-error",ATT["private"].error.createAPIErrorCode(d,"ATT.rtc.Phone","events","RTC"))):0===d.HttpStatusCode?(b.logInfo("Request timed out"),b.logInfo("Re-polling...")):(b.logInfo("Response code was: "+d.HttpStatusCode),b.logInfo("Re-polling...")),setTimeout(function(){b.logInfo("Continue polling..."),a.resourceManager.doOperation(w,r)},0)}function i(c){b.logDebug("ATT.utils.event-channel: startListening"),b.logInfo("Start listening to event channel..."),b.logTrace("config",c),s=!0,r={params:{method:t?"GET":"POST",url:{sessionId:a.sessionId,eventChannelUri:t?"events":"websockets"},headers:{Authorization:a.accessToken}},success:n.bind(this,c),error:o.bind(this,c),ontimeout:p.bind(this,c)},a.resourceManager.doOperation(w,r)}b.logDebug("ATT.utils.event-channel: createEventChannel"),b.logInfo("Creating event channel..."),b.logTrace("channelConfig",a);var j,k,l,m,n,o,p,q,r={},s=!1,t=!0,u=2e3,v=3e5,w="getEvents";if(void 0===a||0===Object.keys(a).length)throw b.logError("No options"),new Error("No options");if(void 0===a.accessToken)throw b.logError("No Access Token"),new Error("No Access Token");if(void 0===a.sessionId)throw b.logError("NO Session Id"),new Error("No Session Id");if(void 0===a.resourceManager)throw b.logError("No Resource Manager"),new Error("No Resource Manager");return void 0!==a.interval&&(b.logInfo("Configuring interval"),b.logTrace("interval",a.interval),u=a.interval),void 0!==a.maxPollingTime&&(b.logInfo("Configuring maximum polling time"),b.logTrace("maxPollingTime",a.maxPollingTime),v=a.maxPollingTime),"WebSockets"===a.channelType&&(b.logInfo("Setting long polling to false for WebSockets"),b.logTrace("channelType",a.channelType),t=!1),q=c.createEventEmitter(),b.logTrace("event-channel: operationConfig",r),n=function(c,d){return b.logDebug("createEventChannel: onSuccess"),b.logInfo("Successfully created event channel"),b.logTrace("response",d),"function"==typeof c.success&&(b.logInfo("Successfully got response from event channel"),c.success("Successfully got response from event channel")),s?t?(b.logInfo("Processing messages..."),200===d.getResponseStatus()&&(e(d),b.logInfo("Messages processed, Re-polling..."),b.logTrace("response",d)),void setTimeout(function(){b.logInfo("Continue polling..."),a.resourceManager.doOperation(w,r)},0)):(l=d.getResponseHeader("location"),b.logInfo("Channel sockets"),b.logTrace("locationForSocket",l),void(void 0===k&&l&&(k=new WebSocket(l),k.onmessage=function(a){b.logDebug("createEventChannel: onMessage"),b.logInfo("Message received"),b.logTrace("message",a),e(a)}))):void b.logInfo("Not processing response because event channel is not running")},o=function(a,c){if(s){if(b.logDebug("createEventChannel: onError"),b.logError("Error creating event channel"),b.logTrace("config",a),b.logInfo("Re-polling..."),u=2*u,u>v)return b.logInfo("Stopping event channel, maximum polling time reached"),b.logTrace("interval",u),b.logTrace("maxPollingTime",v),f(),void q.publish("channel-error",d.createAPIErrorCode(c,"ATT.rtc.Phone","events","RTC"));h(a,c)}else b.logError("Error running event channel"),b.logTrace("error",c)},p=function(a,c){b.logDebug("createEventChannel: onTimeOut"),b.logTrace("config",a),b.logTrace("error",c),s&&(b.logError("Request timed out"),h(a,c))},j={isListening:function(){return s},startListening:i,stopListening:f,on:g}}var b=ATT.logManager.createLogger("eventChannel"),c=ATT["private"].factories,d=ATT["private"].error;if(void 0===ATT["private"].factories)throw b.logError("Error exporting `createEventChannel`"),new Error("Error exporting `createEventChannel`");ATT["private"].factories.createEventChannel=a}(),function(){"use strict";function a(a){function f(a){e.logDebug("ATT.event-manager: processEvent"),e.logInfo("Processing the events coming from event channel");var b,f,g,h,i=null;if(!a)return void e.logError("Not able to consume null event...");switch(e.logDebug("Consumed event from event channel:"),void 0!==a.type&&e.logTrace("type",a.type),void 0!==a.from&&e.logTrace("from",a.from),void 0!==a.state&&e.logTrace("state",a.state),void 0!==a.sdp&&e.logTrace("Event SDP",a.sdp),f="calls"===a.type?"call":"conference",void 0!==a.sdp&&(i=d.getMediaType(a.sdp),b=d.getCodecFromSdp(a.sdp)),g=a.resourceURL.split("/")[4],h=a.resourceURL.split("/")[6],(a.state===c.API_EVENT.SESSION_OPEN||a.state===c.API_EVENT.SESSION_MODIFIED)&&a.sdp&&-1!==a.sdp.indexOf("m=video 0")&&-1===a.sdp.indexOf("a=inactive")&&(-1===a.sdp.indexOf("c=IN IP4 0.0.0.0")?a.sdp=a.sdp.replace("sendrecv","inactive"):a.sdp=a.sdp+"a=inactive\r\n"),e.logTrace("Event state",a.state),a.state){case c.API_EVENT.INVITATION_RECEIVED:o.publish(c.API_EVENT.INVITATION_RECEIVED+":"+g,{type:f,id:h,from:a.from,mediaType:i,sdp:a.sdp});break;case c.API_EVENT.MODIFICATION_RECEIVED:o.publish(c.API_EVENT.MODIFICATION_RECEIVED+":"+h,{id:h,remoteSdp:a.sdp,mediaType:i,modificationId:a.modId});break;case c.API_EVENT.MODIFICATION_TERMINATED:o.publish(c.API_EVENT.MODIFICATION_TERMINATED+":"+h,{id:h,type:f,mediaType:i,remoteSdp:a.sdp,modificationId:a.modId,reason:a.reason,from:a.from});break;case c.API_EVENT.SESSION_OPEN:o.publish(c.API_EVENT.SESSION_OPEN+":"+h,{type:f,id:h,remoteSdp:a.sdp,mediaType:i,codec:b||null,provisionalSdp:a.provisionalSDP});break;case c.API_EVENT.SESSION_MODIFIED:o.publish(c.API_EVENT.SESSION_MODIFIED+":"+h,{type:f,id:h,remoteSdp:a.sdp});break;case c.API_EVENT.MOVE_TERMINATED:o.publish(c.API_EVENT.MOVE_TERMINATED+":"+h,{type:f,id:h,from:a.from,reason:a.reason});break;case c.API_EVENT.TRANSFER_INITIATED:o.publish(c.API_EVENT.TRANSFER_INITIATED+":"+h,{type:f,id:h,from:a.from,transferToCallId:a.transferToCallId});break;case c.API_EVENT.TRANSFER_TERMINATED:o.publish(c.API_EVENT.TRANSFER_TERMINATED+":"+h,{type:f,id:h,from:a.from,transferToCallId:a.transferToCallId,reason:a.reason});break;case c.API_EVENT.SESSION_TERMINATED:o.publish(c.API_EVENT.SESSION_TERMINATED+":"+h,{type:f,id:h,from:a.from,reason:a.reason});break;default:e.logError("Unrecognized event state: "+a.state)}}function g(a){e.logDebug("ATT.event-manager: setupEventChannel"),e.logInfo("Setting up the event channel"),e.logTrace(a);var c={accessToken:a.token,sessionId:a.sessionId,publisher:o,resourceManager:n,channelType:l};m=b.createEventChannel(c),m&&(e.logInfo("Event channel up and running"),m.on("api-event",function(a){f(a)}),m.on("channel-error",function(b){a.onError(b)}),e.logInfo("Subscribed to api-event from event channel"),m.startListening({success:function(a){e.logDebug("startListening: success"),e.logInfo("successfully started listening"),e.logTrace(a)},error:a.onError})),o.publish("listening")}function h(){e.logDebug("ATT.event-manager: stop"),e.logInfo("stop listening"),m&&(m.stopListening(),e.logInfo("Event channel shutdown successfully")),o.publish("stop-listening")}function i(a,b){e.logDebug("ATT.event-manager: off"),e.logInfo("Unsubscribing from event-manager event: "+a),o.unsubscribe(a,b)}function j(a,b){if(e.logDebug("ATT.rtc.RTCManager: on"),e.logInfo("Subscribing to event-manager event: "+a),
"listening"!==a&&"stop-listening"!==a&&a.indexOf(c.API_EVENT.INVITATION_RECEIVED)<0&&a.indexOf(c.API_EVENT.SESSION_OPEN)<0&&a.indexOf(c.API_EVENT.SESSION_MODIFIED)<0&&a.indexOf(c.API_EVENT.MODIFICATION_RECEIVED)<0&&a.indexOf(c.API_EVENT.MODIFICATION_TERMINATED)<0&&a.indexOf(c.API_EVENT.MOVE_TERMINATED)<0&&a.indexOf(c.API_EVENT.TRANSFER_INITIATED)<0&&a.indexOf(c.API_EVENT.TRANSFER_TERMINATED)<0&&a.indexOf(c.API_EVENT.SESSION_TERMINATED)<0)throw e.logError("Event "+a+" not found"),new Error("Event "+a+" not found");o.unsubscribe(a,b),o.subscribe(a,b)}function k(a){if(e.logDebug("ATT.event-manager: setup"),e.logInfo("Setting up the event channel"),e.logTrace(a),void 0===a)throw e.logError("Options not defined"),new Error("Options not defined");if(void 0===a.sessionId)throw e.logError("Session id is not defined"),new Error("Session id is not defined");if(void 0===a.token)throw e.logError("Token not defined"),new Error("Token not defined");g(a)}e.logDebug("ATT.event-manager: createEventManager"),e.logTrace(a);var l,m,n,o;if(e.logDebug("createEventManager"),void 0===a||0===Object.keys(a).length)throw e.logError("Invalid options"),new Error("Invalid options");if(void 0===a.resourceManager)throw e.logError("Must pass `options.resourceManager`"),new Error("Must pass `options.resourceManager`");if(void 0===a.eventChannelType)throw e.logError("Must pass `options.eventChannelType`"),new Error("Must pass `options.eventChannelType`");return l=a.eventChannelType,n=a.resourceManager,o=b.createEventEmitter(),{on:j,off:i,setup:k,stop:h}}var b=ATT["private"].factories,c=ATT["private"]["enum"],d=ATT.utils,e=ATT.logManager.createLogger("eventManager");if(void 0===ATT["private"].factories)throw new Error("Error exporting createEventManager");ATT["private"].factories.createEventManager=a}(),function(){"use strict";function a(a){function c(a){e.logDebug("ATT.private.RTCManager: extractSessionInformation"),e.logTrace("responseObject",a);var b=null,c=null;if(a&&(a.getResponseHeader("Location")&&(b=a.getResponseHeader("Location").split("/")[4]),a.getResponseHeader("x-expires")&&(c=a.getResponseHeader("x-expires"),c=Number(c),c=isNaN(c)?0:1e3*c)),!b)throw"Failed to retrieve session id";return{sessionId:b,timeout:c}}function g(a,b){e.logDebug("ATT.private.RTCManager: on"),e.logInfo("Subscribing to RTCmanager event: "+a),C.on(a,b)}function h(a,b){e.logDebug("ATT.private.RTCManager: off"),e.logInfo("Unsubscribing from RTCmanager event: "+a),C.off(a,b)}function i(a){if(e.logDebug("ATT.private.RTCManager: refreshSession"),e.logTrace("refreshSessionOpts",a),void 0===a||0===Object.keys(a).length)throw new Error("Invalid options provided");if(void 0===a.sessionId)throw new Error("No sessionId provided");if(void 0===a.token)throw new Error("No token provided");if("function"!=typeof a.onSuccess)throw new Error("No `onSuccess` callback provided");if("function"!=typeof a.onError)throw new Error("No `onError` callback provided");e.logInfo("Calling operation refreshWebRTCSession to refresh session..."),D.doOperation("refreshWebRTCSession",{success:function(b){e.logDebug("doOperation(refreshWebRTCSession): success"),e.logInfo("Successfully completed operation refreshWebRTCSession");try{var c=parseInt(b.getResponseHeader("x-expires"),10);e.logTrace("Session timeout",c),a.onSuccess({timeout:(1e3*c).toString()})}catch(d){e.logError("Error during refreshSession"),e.logTrace(d),a.onError(d)}},error:a.onError,params:{url:[a.sessionId],headers:{Authorization:a.token}}})}function j(a){if(e.logDebug("ATT.private.RTCManager: connectSession"),e.logTrace("connectSessionOpts",a),void 0===a)throw new Error("No options defined.");if(void 0===a.token)throw new Error("No token defined.");if(void 0===a.onSessionConnected)throw new Error("Callback onSessionConnected not defined.");if(void 0===a.onSessionReady)throw new Error("Callback onSessionReady not defined.");if(void 0===a.onError)throw new Error("Callback onError not defined.");var b=function(b){var d,f;try{e.logDebug("doOperation(createWebRTCSession): success"),e.logInfo("Successfully created web rtc session"),f=c(b),a.onSessionConnected(f),d=function(){e.logInfo("listening@eventManager"),a.onSessionReady({sessionId:f.sessionId}),C.off("listening",d)},C.on("listening",d),e.logInfo("Trying to setup the event manager..."),C.setup({sessionId:f.sessionId,token:a.token,onError:function(b){e.logDebug("eventManager.setup: onError"),e.logError("There was an error setting up the eventManager"),e.logTrace(b),a.onError(b)}})}catch(g){e.logError("Error during connectionSession"),e.logTrace(g),a.onError(g)}};e.logInfo("Attempting to create enhanced webrtc session"),D.doOperation("createWebRTCSession",{data:{session:{mediaType:"dtls-srtp",ice:"true",services:["ip_voice_call","ip_video_call"]}},params:{headers:{Authorization:a.token,"x-e911Id":a.e911Id||"","x-Arg":"ClientSDK=WebRTCTestAppJavascript1"}},success:b,error:a.onError})}function k(a){if(e.logDebug("ATT.private.RTCManager: disconnectSession"),e.logTrace("disconnectSessionOpts",a),void 0===a)throw new Error("No options defined.");if(void 0===a.sessionId)throw new Error("No session id defined.");if(void 0===a.token)throw new Error("No token defined.");if(void 0===a.onSessionDisconnected)throw new Error("Callback onSessionDisconnected not defined.");e.logInfo("Attempting to stop event manager..."),C.stop(),e.logInfo("Attempting to delete enhanced webrtc session"),D.doOperation("deleteWebRTCSession",{params:{url:[a.sessionId],headers:{Authorization:a.token,"x-e911Id":a.e911Id}},success:a.onSessionDisconnected,error:a.onError})}function l(a){e.logDebug("ATT.private.RTCManager: connectCall"),e.logTrace("connectCallOpts",a);var b,c,d,g,h;if(void 0===a)throw new Error("No options provided");if(void 0===a.breed)throw new Error("No call breed provided");if("call"===a.breed&&void 0===a.peer)throw new Error("No peer provided");if(void 0===a.sessionId)throw new Error("No session id provided");if(void 0===a.token)throw new Error("No token provided");if(void 0===a.description)throw new Error("No description provided");if(void 0===a.onSuccess&&"function"!=typeof a.onSuccess)throw new Error("No success callback provided");if(void 0===a.onError&&"function"!=typeof a.onError)throw new Error("No error callback provided");return void 0===a.callId?(h="call"===a.breed?{call:{calledParty:f.createCalledPartyUri(a.peer),sdp:a.description.sdp}}:{conference:{sdp:a.description.sdp}},d={params:{url:{sessionId:a.sessionId,type:a.breed+"s"},headers:{Authorization:a.token}},data:h,success:function(c){e.logDebug("doOperation(createCall): success"),e.logInfo("Success during creating call/conference"),e.logTrace("response",c),b={id:c.getResponseHeader("Location").split("/")[6],state:c.getResponseHeader("x-state")},a.onSuccess(b)},error:a.onError},e.logInfo("Attempting to create the call..."),void D.doOperation("createCall",d)):(g={Authorization:a.token,options:{}},"call"===a.breed?(g.options["x-calls-action"]="call-answer",h={callsMediaModifications:{sdp:a.description.sdp}}):(g.options["x-conference-action"]="call-answer",h={conferenceModifications:{sdp:a.description.sdp}}),c={params:{url:{sessionId:a.sessionId,callId:a.callId,type:a.breed+"s"},headers:g},data:h,success:function(c){e.logDebug("doOperation(modifyCall): success"),e.logInfo("Success during answering call/conference"),e.logTrace("response",c),b={state:c.getResponseHeader("x-state")},a.onSuccess(b)},error:a.onError},e.logInfo("Attempting to answer the call..."),void D.doOperation("modifyCall",c))}function m(a){e.logDebug("RTCManager: acceptMediaModifications"),e.logTrace("options",a);var b,c,d="call"===a.breed?"calls":"conferences";b={params:{url:{sessionId:a.sessionId,type:d,callId:a.callId},headers:{Authorization:a.token,"x-modId":a.modId}},data:{callsMediaModifications:{sdp:a.sdp}},success:function(){e.logDebug("doOperation(acceptMediaModifications): success"),e.logInfo("Successfully accepted media modifications for call"),a.onSuccess()},error:function(a){e.logDebug("doOperation(acceptMediaModifications): error"),e.logError("Error during accepting media modifications for call"),e.logTrace(a)}},c={params:{url:{sessionId:a.sessionId,type:d,callId:a.callId},headers:{Authorization:a.token,"x-mod-Id":a.modId}},data:{conferenceModifications:{sdp:a.sdp}},success:function(){e.logDebug("doOperation(acceptConferenceModifications): success"),e.logInfo("Successfully accepted media modifications for conference")},error:function(a){e.logDebug("doOperation(acceptConferenceModifications): error"),e.logError("Error during accepting media modifications for conference"),e.logTrace(a)}},e.logInfo("Attempting to accept media modifications for the "+a.breed),"calls"===d?D.doOperation("acceptCallModifications",b):D.doOperation("acceptConferenceModifications",c)}function n(a){e.logDebug("ATT.private.RTCManager: acceptMediaModifications"),e.logTrace("acceptMediaModOpts",a);var b,c="calls";b={params:{url:{sessionId:a.sessionId,type:c,callId:a.callId},headers:{Authorization:a.token,"x-modId":a.modId}},data:{callsMediaModifications:{sdp:a.sdp}},success:function(){e.logDebug("doOperation(rejectMediaModOpts): success"),e.logInfo("Successfully rejecting media modifications for call")},error:function(a){e.logDebug("doOperation(rejectMediaModOpts): error"),e.logError("Error during rejecting media modifications for call"),e.logTrace(a)}},e.logInfo("Attempting to reject media modifications for the "+a.breed),D.doOperation("rejectMediaModification",b)}function o(a){e.logDebug("ATT.private.RTCManager: addParticipant"),e.logTrace("addParticipantOpts",a);var b,c;if(void 0===a)throw new Error("No `options` passed");if(void 0===a.sessionInfo)throw new Error("No `sessionInfo` passed");if(void 0===a.confId)throw new Error("No `confId` passed");if("function"!=typeof a.onSuccess)throw new Error("No `onSuccess` callback passed");b=a.invitee.toString(),b=b.indexOf("@")>-1?"sip:"+b:"tel:+"+b,e.logInfo("Attempting to add a participant to the conference"),D.doOperation("addParticipant",{params:{url:[a.sessionInfo.sessionId,a.confId,b],headers:{Authorization:a.sessionInfo.token}},success:function(b){e.logDebug("doOperation(addParticipant): success"),e.logInfo("Successfully added participant to the conference"),e.logTrace("response",b),"add-pending"===b.getResponseHeader("x-state")&&(c=b.getResponseHeader("x-modId"),a.onSuccess(c))},error:function(b){e.logDebug("doOperation(addParticipant): error"),e.logError("Error during adding a participant to the conference"),e.logTrace(b),a.onError(b)}})}function p(a){e.logDebug("ATT.private.RTCManager: removeParticipant"),e.logTrace("removeParticipantOpts",a);var b;if(void 0===a)throw new Error("No `options` passed");if(void 0===a.sessionInfo)throw new Error("No `sessionInfo` passed");if(void 0===a.confId)throw new Error("No `confId` passed");if("function"!=typeof a.onSuccess)throw new Error("No `onSuccess` callback passed");b=a.participant.toString(),b=b.indexOf("@")>-1?"sip:"+b:"tel:+"+b,e.logInfo("Attempting to remove a participant from the the conference"),D.doOperation("removeParticipant",{params:{url:[a.sessionInfo.sessionId,a.confId,b],headers:{Authorization:a.sessionInfo.token}},success:function(b){e.logDebug("doOperation(removeParticipant): success"),e.logInfo("Successfully removed participant from the conference"),e.logTrace("response",b),"remove-pending"===b.getResponseHeader("x-state")&&a.onSuccess()},error:function(b){e.logDebug("doOperation(removeParticipant): error"),e.logError("Error during removing participant from the conference"),e.logTrace(b),a.onError(b)}})}function q(a){if(e.logDebug("ATT.private.RTCManager: disconnectCall"),e.logTrace("disconnectCallOpts",a),void 0===a)throw new Error("No options provided");if(void 0===a.callId)throw new Error("No CallId provided");if(void 0===a.breed)throw new Error("No call breed provided");if(void 0===a.sessionId)throw new Error("No sessionId provided");if(void 0===a.token)throw new Error("No token provided");if(void 0===a.onSuccess)throw new Error("No success callback provided");if(void 0===a.onError)throw new Error("No error callback provided");e.logInfo("Attempting to delete the "+a.breed),D.doOperation("deleteCall",{params:{url:{sessionId:a.sessionId,type:a.breed+"s",callId:a.callId},headers:{Authorization:a.token,"x-delete-reason":"terminate"}},success:function(){e.logDebug("doOperation(deleteCall): success"),e.logInfo("Successfully deleted the "+a.breed)},error:function(b){e.logDebug("doOperation(deleteCall): error"),e.logError("Error deleting the "+a.breed),e.logTrace(b),a.onError(b)}})}function r(a){if(e.logDebug("ATT.private.RTCManager: cancelCall"),e.logTrace("cancelCallOpts",a),void 0===a)throw new Error("No options provided");if(void 0===a.callId)throw new Error("No callId provided");if(void 0===a.breed)throw new Error("No call breed provided");if(void 0===a.sessionId)throw new Error("No sessionId provided");if(void 0===a.token)throw new Error("No token provided");if(void 0===a.onSuccess)throw new Error("No success callback provided");if(void 0===a.onError)throw new Error("No error callback provided");a.callId.length>0&&(e.logInfo("Attempting to cancel the "+a.breed),D.doOperation("deleteCall",{params:{url:{sessionId:a.sessionId,type:a.breed+"s",callId:a.callId},headers:{Authorization:a.token,"x-delete-reason":"cancel"}},success:function(){e.logDebug("doOperation(deleteCall): success"),e.logInfo("Successfully deleted the "+a.breed),a.onSuccess()},error:function(b){e.logDebug("doOperation(deleteCall): error"),e.logError("Error canceling the "+a.breed),e.logTrace(b),a.onError(b)}}))}function s(a,b){e.logDebug("ATT.private.RTCManager: holdOrMoveCall"),e.logTrace("holdOrMoveCallOpts",a),e.logTrace("action",b);var c,d,f;if(void 0!==a&&(f="move"===b?"move":"hold"),void 0===a)throw new Error("No options provided");if(void 0===a.callId)throw new Error("No callId provided");if(void 0===a.sessionId)throw new Error("No sessionId provided");if(void 0===a.token)throw new Error("No token provided");if(void 0===a.description)throw new Error("No sdp provided");if(void 0===a.breed)throw new Error("No breed provided");if(void 0===a.onSuccess)throw new Error("No success callback provided");if(void 0===a.onError)throw new Error("No error callback provided");d={Authorization:a.token,options:{}},e.logDebug("Modification data:"),"conference"===a.breed?(c={conferenceModifications:{sdp:a.description.sdp,type:a.description.type}},d.options["x-conference-action"]="initiate-hold",e.logTrace("sdp",c.conferenceModifications.sdp),e.logTrace("type",c.conferenceModifications.type)):(c={callsMediaModifications:{sdp:a.description.sdp,type:a.description.type}},d.options["x-calls-action"]="initiate-call-"+f,e.logTrace("sdp",c.callsMediaModifications.sdp),e.logTrace("type",c.callsMediaModifications.type)),e.logInfo("Attempting to "+f+" the "+a.breed),D.doOperation("modifyCall",{params:{url:{sessionId:a.sessionId,type:a.breed+"s",callId:a.callId},headers:d},data:c,success:function(b){e.logDebug("doOperation(modifyCall): success"),e.logInfo("Successfully performed operation "+f+" on the "+a.breed),e.logTrace("response",b),204===b.getResponseStatus()?(e.logInfo("Response Status 204"),a.onSuccess()):(e.logError("Response Status is not 204"),a.onError())},error:function(b){e.logDebug("doOperation(modifyCall): error"),e.logError("Error during performing operation "+f+" on the "+a.breed),e.logTrace(b),a.onError(b)}})}function t(a){e.logDebug("ATT.private.RTCManager: holdCall"),e.logTrace("holdCallOpts",a),s(a,"hold")}function u(a){e.logDebug("ATT.private.RTCManager: moveCall"),e.logTrace("moveCallOpts",a),s(a,"move")}function v(a){e.logDebug("ATT.private.RTCManager: resumeCall"),e.logTrace("resumeCallOpts",a);var b,c;if(void 0===a)throw new Error("No options provided");if(void 0===a.callId)throw new Error("No callId provided");if(void 0===a.sessionId)throw new Error("No sessionId provided");if(void 0===a.token)throw new Error("No token provided");if(void 0===a.description)throw new Error("No sdp provided");if(void 0===a.breed)throw new Error("No breed provided");if(void 0===a.onSuccess)throw new Error("No success callback provided");if(void 0===a.onError)throw new Error("No error callback provided");c={Authorization:a.token,options:{}},"conference"===a.breed?(b={conferenceModifications:{sdp:a.description.sdp,type:a.description.type}},c.options["x-conference-action"]="initiate-resume"):(b={callsMediaModifications:{sdp:a.description.sdp,type:a.description.type}},c.options["x-calls-action"]="initiate-call-resume"),e.logInfo("Attempting to resume the "+a.breed),D.doOperation("modifyCall",{params:{url:{sessionId:a.sessionId,type:a.breed+"s",callId:a.callId},headers:c},data:b,success:function(b){e.logDebug("doOperation(modifyCall): success"),e.logInfo("Successfully resuming the "+a.breed),e.logTrace("response",b),204===b.getResponseStatus()?(e.logInfo("Resume request sent..."),a.onSuccess()):a.onError()},error:function(b){e.logDebug("doOperation(modifyCall): error"),e.logError("Error resuming the "+a.breed),e.logTrace(b),a.onError(b)}})}function w(a){e.logDebug("ATT.private.RTCManager: associateE911Id"),e.logTrace("associateE911IdOpts",a);var b;if(void 0===a)throw"Invalid options";if(void 0===a.token||""===a.token)throw"No token passed";if(void 0===a.e911Id||""===a.e911Id)throw"No e911Id passed";if(void 0===a.sessionId||""===a.sessionId)throw"No session Id passed";if(void 0===a.onSuccess||"function"!=typeof a.onSuccess)throw"No success callback passed";if(void 0===a.onError||"function"!=typeof a.onError)throw"No error callback passed";b={data:{e911Association:{e911Id:a.e911Id}},params:{url:[a.sessionId],headers:{Authorization:a.token}},success:a.onSuccess,error:a.onError},e.logInfo("Attempting to associate the e911Id with session..."),D.doOperation("associateE911Id",b)}function x(a){if(e.logDebug("ATT.private.RTCManager: associateE911Id"),e.logTrace("associateTokenOpts",a),void 0===a)throw new Error("No options provided.");if(void 0===a.userId)throw new Error("No userId provided.");if(void 0===a.token)throw new Error("No token provided.");e.logInfo("Attempting to associate token with the user id..."),D.doOperation("associateTokenWithUserId",{params:{url:{userId:a.userId},headers:{Authorization:a.token}},success:a.success,error:a.error})}function y(a){if(e.logDebug("ATT.private.RTCManager: associateE911Id"),e.logTrace("rejectCallOpts",a),void 0===a)throw new Error("Invalid options");if(void 0===a.callId||""===a.callId)throw new Error("No callId provided");if(void 0===a.breed||""===a.breed)throw new Error("No call breed provided");if(void 0===a.sessionId||""===a.sessionId)throw new Error("No session Id provided");if(void 0===a.token||""===a.token)throw new Error("No token provided");if(void 0===a.onSuccess||"function"!=typeof a.onSuccess)throw new Error("No success callback provided");if(void 0===a.onError||"function"!=typeof a.onError)throw new Error("No error callback provided");e.logInfo("Attempting to reject the "+a.breed),D.doOperation("deleteCall",{params:{url:{sessionId:a.sessionId,type:a.breed+"s",callId:a.callId},headers:{Authorization:a.token,"x-delete-reason":"reject"}},success:function(){e.logDebug("doOperation(deleteCall): success"),e.logInfo("Successfully deleted the "+a.breed)},error:function(b){e.logDebug("doOperation(deleteCall): error"),e.logError("Error deleting the "+a.breed),e.logTrace(b),a.onError(b)}})}function z(a){if(e.logDebug("ATT.private.RTCManager: transferCall"),e.logTrace("transferCallOpts",a),void 0===a||0===Object.keys(a).length)throw new Error("No options provided");if(void 0===a.callId)throw new Error("No call id provided");if(void 0===a.breed)throw new Error("No call breed provided");if(void 0===a.sessionId)throw new Error("No session id provided");if(void 0===a.token)throw new Error("No token provided");if(void 0===a.targetCallId)throw new Error("No target call id provided");if(void 0===a.transfereeSdp)throw new Error("No sdp provided");if(void 0===a.success)throw new Error("No success callback provided");if(void 0===a.error)throw new Error("No error callback provided");e.logInfo("Attempting to transfer the "+a.breed),D.doOperation("transferCall",{data:{callsMediaModifications:{sdp:a.transfereeSdp}},params:{url:{sessionId:a.sessionId,type:a.breed+"s",callId:a.callId},headers:{Authorization:a.token,"x-transferTargetCallId":a.targetCallId}},success:function(){e.logDebug("doOperation(transferCall): success"),e.logInfo("Successfully transferred the "+a.breed),a.success()},error:function(b){e.logDebug("doOperation(transferCall): error"),e.logError("Error transferring the "+a.breed),e.logTrace(b),a.error(b)}})}function A(a){e.logDebug("RTCManager: modifyCall"),e.logTrace("options",a);var b,c;if(void 0===a)throw new Error("No options provided");if(void 0===a.callId)throw new Error("No callId provided");if(void 0===a.sessionId)throw new Error("No sessionId provided");if(void 0===a.token)throw new Error("No token provided");if(void 0===a.description)throw new Error("No sdp provided");if("function"!=typeof a.onSuccess)throw new Error("No success callback provided");if("function"!=typeof a.onError)throw new Error("No error callback provided");c={Authorization:a.token,options:{}},b={callsMediaModifications:{sdp:a.description.sdp}},c.options["x-calls-action"]="initiate-call-mod",D.doOperation("modifyCall",{params:{url:{sessionId:a.sessionId,type:a.breed+"s",callId:a.callId},headers:c},data:b,success:function(b){e.logDebug("Received response for modification:"),e.logTrace("response",b),204===b.getResponseStatus()?(e.logDebug("Modification sent successfully."),a.onSuccess()):(e.logError("Modification failed."),e.logTrace("responseStatus",b.getResponseStatus()),a.onError())},error:function(b){e.logError("Modification failed."),e.logTrace(b),a.onError(b)}})}var B,C,D;D=a.resourceManager,e.logDebug("ATT.private.RTCManager: Constructor"),e.logTrace("options",a),B=d.getAppConfiguration(),C=b.createEventManager({resourceManager:D,eventChannelType:B.eventChannelType}),this.on=g,this.off=h,this.connectSession=j,this.disconnectSession=k,this.connectCall=l,this.acceptMediaModifications=m,this.addParticipant=o,this.removeParticipant=p,this.disconnectCall=q,this.refreshSession=i,this.cancelCall=r,this.holdCall=t,this.moveCall=u,this.resumeCall=v,this.rejectCall=y,this.transferCall=z,this.associateE911Id=w,this.associateToken=x,this.modifyCall=A,this.rejectMediaModification=n}var b=ATT["private"].factories,c=ATT["private"].config.api,d=ATT["private"].config.app,e=ATT.logManager.createLogger("rtcManager"),f=ATT.utils;if(void 0===ATT["private"])throw new Error("Error exporting `RTCManager`");ATT["private"].RTCManager=a,ATT["private"].rtcManager=function(){var d,e;return{getRTCManager:function(){return void 0===d&&(e=b.createResourceManager(c),d=new a({resourceManager:e})),d}}}()}();var RTCPeerConnection=null,RTCSessionDescription,RTCIceCandidate=null,getUserMedia=null,attachMediaStream=null,reattachMediaStream=null,webrtcDetectedBrowser=null,webrtcDetectedVersion=null,logger=ATT.logManager.createLogger("adapter"),createIceServer;if(navigator.mozGetUserMedia)logger.logInfo("This appears to be Firefox"),logger.logInfo(navigator.userAgent),webrtcDetectedBrowser="firefox",webrtcDetectedVersion=parseInt(navigator.userAgent.match(/Firefox\/([0-9]+)\./)[1],10),RTCPeerConnection=mozRTCPeerConnection,RTCSessionDescription=mozRTCSessionDescription,RTCIceCandidate=mozRTCIceCandidate,getUserMedia=navigator.mozGetUserMedia.bind(navigator),createIceServer=function(a,b,c){var d,e=null,f=a.split(":");return 0===f[0].indexOf("stun")?e={url:a}:0===f[0].indexOf("turn")?webrtcDetectedVersion>=27?e={url:a,credential:c,username:b}:(d=a.split("?"),0===d[1].indexOf("transport=udp")?e={url:d[0],credential:c,username:b}:null):void 0},attachMediaStream=function(a,b){logger.logInfo("Attaching media stream"),a.mozSrcObject=b,a.play()},reattachMediaStream=function(a,b){logger.logInfo("Reattaching media stream"),a.mozSrcObject=b.mozSrcObject,a.play()},MediaStream.prototype.getVideoTracks||(MediaStream.prototype.getVideoTracks=function(){return[]}),MediaStream.prototype.getAudioTracks||(MediaStream.prototype.getAudioTracks=function(){return[]});else if(navigator.webkitGetUserMedia){logger.logInfo("This appears to be Chrome"),logger.logInfo(navigator.userAgent),webrtcDetectedBrowser="chrome",webrtcDetectedVersion=parseInt(navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./)[2],10);var createIceServer=function(a,b,c){var d=null,e=a.split(":");return 0===e[0].indexOf("stun")?d={url:a}:0===e[0].indexOf("turn")&&(d={url:a,credential:c,username:b}),d};RTCPeerConnection=webkitRTCPeerConnection,getUserMedia=navigator.webkitGetUserMedia.bind(navigator),attachMediaStream=function(a,b){"undefined"!==a.srcObject?a.srcObject=b:"undefined"!==a.mozSrcObject?a.mozSrcObject=b:"undefined"!==a.src?a.src=URL.createObjectURL(b):logger.logError("Error attaching stream to element.")},reattachMediaStream=function(a,b){a.src=b.src}}else logger.logError("Browser does not appear to be WebRTC-capable");!function(a){"use strict";var b,c={audio:!0,video:!0},d=ATT.logManager.createLogger("userMediaService");d.logDebug("Loading att.user-media-service"),b={localMedia:null,remoteMedia:null,localStream:null,remoteStream:null,mediaConstraints:null,onUserMedia:null,onMediaEstablished:null,onUserMediaError:null,getUserMedia:function(a){d.logDebug("ATT.UserMediaService: getUserMedia"),d.logInfo("Trying to get the user media"),d.logTrace(a);var b=this;this.localMedia=a.localMedia,this.remoteMedia=a.remoteMedia,this.mediaConstraints=c,this.onUserMedia=a.onUserMedia,this.onMediaEstablished=a.onMediaEstablished,this.onUserMediaError=a.onUserMediaError,void 0!==a.mediaType&&(this.mediaConstraints.video="audio"!==a.mediaType),this.mediaConstraints.fake=!0===a.fake,getUserMedia(this.mediaConstraints,b.getUserMediaSuccess.bind(b),function(b){d.logDebug("getUserMedia: error"),d.logError("Error in getting user media"),d.logTrace("mediaError",b);var c=ATT.errorDictionary.getSDKError(14e3);a.onUserMediaError(c)})},getUserMediaSuccess:function(a){d.logDebug("getUserMedia: success"),d.logInfo("Got the user media."),d.logTrace("stream",a),this.showStream({localOrRemote:"local",stream:a});var b={mediaConstraints:this.mediaConstraints,localStream:a};this.onUserMedia(b)},showStream:function(a){d.logDebug("ATT.UserMediaService: showStream"),d.logTrace(a);var b;try{"remote"===a.localOrRemote?(this.remoteStream=a.stream,b=this.remoteMedia):(this.localStream=a.stream,b=this.localMedia,b.setAttribute("muted","")),b&&(b.src=window.URL.createObjectURL(a.stream),d.logInfo("About to play "+a.localOrRemote+" stream..."),b.play(),"remote"===a.localOrRemote&&this.onMediaEstablished())}catch(c){d.logError("Error during showStream"),d.logTrace(c),void 0!==this.onUserMediaError&&"function"==typeof this.onUserMediaError&&this.onUserMediaError(c)}},stopUserMedia:function(){d.logDebug("ATT.UserMediaService: stopUserMedia");try{this.localStream&&(d.logInfo("Stopping the local stream..."),this.localStream.stop(),this.localStream=null,this.localMedia.src=""),this.remoteStream&&"function"==typeof this.remoteStream.stop&&(d.logInfo("Stopping the remote stream..."),this.remoteStream.stop(),this.remoteStream=null,this.remoteMedia.src="")}catch(a){d.logError("Error stopping local and remote streams"),d.logTrace(a),this.onUserMediaError(a)}}},a.UserMediaService=b}(ATT),function(){"use strict";function a(a){function e(a){return{sdp:a.sdp,type:a.type}}function f(a){if(void 0===a||null===a)throw new Error("Stream is undefined");c.logDebug("peerConnection: Removing stream"),c.logTrace("stream.id",a.id),r.removeStream(a)}function g(a){if(void 0===a||null===a)throw new Error("Stream is undefined");c.logDebug("peerConnection: Adding stream"),c.logTrace("stream.id",a.id),r.addStream(a),"function"==typeof r.createDTMFSender&&(w=r.createDTMFSender(a.getAudioTracks()[0]))}function h(d,f,g){if(c.logDebug("peerConnection: setLocalDescription"),c.logTrace("description.type",d.type),c.logTrace("description.sdp",d.sdp),void 0!==a.pcConfiguration.audioCodec){var h=b.createSdp(e(d));d=h.modifyForSetAudioCodec(a.pcConfiguration.audioCodec).getDescription(),c.logTrace("modified description.sdp",d.sdp)}r.setLocalDescription(new RTCSessionDescription(d),function(){c.logDebug("Successfully set the local description."),void 0!==f&&"function"==typeof f&&f()},function(a){c.logError("Error setting the local description."),c.logTrace("error",a),void 0!==g&&"function"==typeof g&&g(a)})}function i(a,b,d){c.logDebug("peerConnection: setRemoteDescription"),c.logTrace("description.type",a.type),c.logTrace("description.sdp",a.sdp),r.setRemoteDescription(new RTCSessionDescription(a),function(){c.logDebug("Successfully set remote description."),void 0!==b&&"function"==typeof b&&b()},function(a){c.logError("Failed to set remote description."),c.logTrace("error",a),void 0!==d&&"function"==typeof d&&d(a)})}function j(a,b,d){if(c.logDebug("peerConnection: createOffer"),c.logTrace("constraints",d),void 0===a)throw new Error("No success callback defined.");if(void 0===b)throw new Error("No error callback defined.");r.createOffer(a,b,{mandatory:d})}function k(a,b,d){if(c.logDebug("peerConnection: createAnswer"),c.logTrace("constraints",d),void 0===a)throw new Error("No success callback defined.");if(void 0===b)throw new Error("No error callback defined.");r.createAnswer(a,b,{mandatory:d})}function l(b){c.logDebug("ATT.private.peer-connection: createSdpOffer"),c.logTrace("createSdpOffer: options",b),c.logInfo("Trying to create an SDP offer..."),r.createOffer(function(a){c.logDebug("createOffer: success"),c.logInfo("Successfully created the sdp offer"),c.logTrace("local description",a),c.logInfo("Trying to set the local description..."),h(a,function(){c.logDebug("createOffer:setLocalDescription: success"),c.logInfo("Successfully set the local description during createSdpOffer"),void 0!==b.onSuccess&&b.onSuccess()},function(a){c.logDebug("createSdpOffer:setLocalDescription: error"),c.logError("Error during createSdpOffer:setLocalDescription"),c.logTrace(a),b.onError(a)})},function(a){c.logError("Error during createSdpOffer"),c.logTrace(a),b.onError(a)},{mandatory:{OfferToReceiveAudio:!0,OfferToReceiveVideo:"video"===a.mediaType}})}function m(a){if(void 0===a)throw new Error("No options provided.");if(void 0===a.constraints)throw new Error("No constraints provided.");if(void 0===a.onOfferReady)throw new Error("No onOfferReady callback provided.");if(void 0===a.onError)throw new Error("No onError callback provided.");c.logDebug("ATT.private.peer-connection: generateOffer"),c.logInfo("Trying to generate an SDP offer..."),j(function(b){c.logDebug("createOffer: success"),c.logInfo("Successfully created the sdp offer during generateOffer"),"function"==typeof a.onOfferCreated&&(b=a.onOfferCreated(e(b))),c.logTrace("local description",b),c.logInfo("Trying to set the local description..."),h(b,function(){c.logDebug("createOffer:setLocalDescription: success"),c.logInfo("Successfully set the local description during generateOffer"),"complete"===r.iceGatheringState?a.onOfferReady(e(b)):t=a.onOfferReady},function(b){c.logDebug("generateOffer:setLocalDescription: error"),c.logError("Error during generateOffer:setLocalDescription"),c.logTrace(b),a.onError(b)})},function(b){c.logDebug("generateOffer:setLocalDescription: error"),c.logError("Error during generateOffer:createOffer"),c.logTrace(b),a.onError(b)},a.constraints)}function n(d){c.logDebug("ATT.private.peer-connection: createSdpAnswer"),c.logTrace("createSdpAnswer: options",d),c.logInfo("Trying to create an SDP answer..."),r.createAnswer(function(a){c.logDebug("createAnswer: success"),c.logInfo("Successfully created the SDP answer"),c.logTrace("localSdp",a);var e=b.createSdp({sdp:a.sdp,type:a.type});e.replaceufragpwd(),a=e.getDescription(),h(a,function(){c.logDebug("createSdpAnswer:setLocalDescription: success"),c.logInfo("Successfully set the local description during createSdpAnswer"),void 0!==d.onSuccess&&d.onSuccess(a);
},function(a){c.logDebug("createSdpAnswer:setLocalDescription: error"),c.logError("Error during createSdpAnswer:setLocalDescription"),c.logTrace(a),d.onError(a)})},function(a){c.logDebug("createAnswer: error"),c.logInfo("Error creating the SDP answer"),c.logTrace(a),d.onError(a)},{mandatory:{OfferToReceiveAudio:!0,OfferToReceiveVideo:"video"===a.mediaType}})}function o(a){c.logDebug("ATT.private.peer-connection: acceptSdpOffer"),c.logTrace("acceptSdpOffer: options",a),c.logInfo("Trying to set the remote description..."),i(a.remoteDescription,function(){c.logDebug("acceptSdpOffer:setRemoteDescription: success"),c.logInfo("Trying to create the SDP answer..."),n(a)},function(b){c.logDebug("acceptSdpOffer:setRemoteDescription: error"),c.logInfo("Error during acceptSdpOffer:setRemoteDescription"),c.logTrace(b),a.onError(b)})}function p(a){if(c.logDebug("ATT.private.peer-connection: generateAnswer"),void 0===a)throw new Error("No options provided.");if(void 0===a.constraints)throw new Error("No constraints provided.");if("function"!=typeof a.onAnswerReady)throw new Error("No onAnswerReady callback provided.");if("function"!=typeof a.onError)throw new Error("No onError callback provided.");c.logInfo("Trying to generate an SDP answer..."),k(function(b){c.logDebug("createAnswer: success"),c.logInfo("Successfully created the sdp offer during generateAnswer"),c.logTrace("description on createAnswer success",b),"function"==typeof a.onAnswerCreated&&(b=a.onAnswerCreated(e(b))),h(b,function(){c.logDebug("createAnswer:setLocalDescription: success"),c.logInfo("Successfully set the local description during generateAnswer"),"complete"===r.iceGatheringState?a.onAnswerReady(e(b)):t=a.onAnswerReady},function(b){c.logDebug("generateAnswer:setLocalDescription: error"),c.logError("Error during generateAnswer:setLocalDescription"),c.logTrace(b),a.onError(b)})},function(b){c.logDebug("generateAnswer:createAnswer: error"),c.logError("Error during generateOffer:createAnswer"),c.logTrace(b),a.onError(b)},a.constraints)}function q(a){if(void 0===a||0===Object.keys(a).length)throw new Error("No options provided");if(void 0===a.input)throw new Error("No input provided");if("function"!=typeof a.onToneSent)throw new Error("No onToneSend callback passed");if("function"!=typeof a.onToneSending)throw new Error("No onToneSending callback provided");if(void 0===w)throw new Error("DTMF is not supported on this browser.Browser "+navigator.appName+"Version"+navigator.appVersion);if(void 0!==w){var b=!1;if(w.ontonechange=function(c){b||a.onToneSent(c),b=!0},a.onToneSending(),void 0!==a.gap)return void w.insertDTMF(a.input,w.duration,a.gap);w.insertDTMF(a.input)}}c.logDebug("ATT.private.factories: createPeerConnection"),c.logTrace("createPeerConnection.config",a);var r,s,t,u,v,w;if(void 0===a||0===Object.keys(a).length)throw c.logError("No options passed."),new Error("No options passed.");if(void 0===a.stream)throw c.logError("No `stream` passed."),new Error("No `stream` passed.");if(void 0===a.mediaType)throw c.logError("No `mediaType` passed."),new Error("No `mediaType` passed.");if("function"!=typeof a.onSuccess)throw c.logError("No `onSuccess` callback passed."),new Error("No `onSuccess` callback passed.");if(t=a.onSuccess,"function"!=typeof a.onRemoteStream)throw c.logError("No `onRemoteStream` callback passed."),new Error("No `onRemoteStream` callback passed.");if(s=a.onRemoteStream,"function"!=typeof a.onError)throw c.logError("No `onError` callback passed."),new Error("No `onError` callback passed.");if("object"!=typeof a.pcConfiguration)throw c.logError("No `pcConfiguration` parameter passed."),new Error("No `pcConfiguration` parameter passed.");try{c.logInfo("Creating the peer connection"),u={iceServers:a.pcConfiguration.iceServers,iceTransports:a.pcConfiguration.iceTransports},v={optional:[{googIPv6:a.pcConfiguration.ipv6}]},r=new RTCPeerConnection(u,v)}catch(x){throw c.logError("Failed to create PeerConnection."),c.logTrace(x),new Error("Failed to create PeerConnection.")}return r.addStream(a.stream),"function"==typeof r.createDTMFSender&&(w=r.createDTMFSender(a.stream.getAudioTracks()[0])),r.onaddstream=function(a){s(a.stream)},r.onicecandidate=function(a){var f,g=d.getBrowserName();return c.logDebug("createPeerConnection: onIceCandidate"),c.logInfo("Got ICE candidate"),c.logTrace("candidate",a.candidate),"Chrome"===g&&"function"==typeof t?(f=b.createSdp(e(r.localDescription)),void(f.hasICECandidates()&&(t(e(r.localDescription)),t=void 0))):void(a.candidate?(c.logInfo("Got new ICE Candidate"),c.logTrace("Candidate",a.candidate)):(c.logInfo("End of ICE Candidates"),"Firefox"===g&&"function"==typeof t&&t(e(r.localDescription))))},void 0===a.remoteSdp?l({onError:a.onError}):o({remoteDescription:a.remoteSdp,onError:a.onError}),c.logInfo("Peer connection created"),c.logTrace("Peer connection",r),{isStateStable:function(){return"stable"===r.signalingState},hasLocalOffer:function(){return"have-local-offer"===r.signalingState},hasRemoteOffer:function(){return"have-remote-offer"===r.signalingState},getLocalDescription:function(){return e(r.localDescription)},setRemoteDescription:i,setLocalDescription:h,createSdpOffer:l,createSdpAnswer:n,acceptSdpOffer:o,getRemoteDescription:function(){return e(r.remoteDescription)},close:function(){r.close(),r=null},removeStream:f,addStream:g,generateOffer:m,generateAnswer:p,sendDTMFTone:q}}var b=ATT["private"].factories,c=ATT.logManager.createLogger("peerConnection"),d=ATT.utils;if(c.logDebug("Loading att.peer-connection"),void 0===ATT["private"].factories)throw new Error("Error exporting `ATT.private.factories.createPeerConnection`");ATT["private"].factories.createPeerConnection=a}(),function(){"use strict";function a(a,e){function f(){return M.media.forEach(function(a){a.setup="actpass"}),K=d.write(M),this}function g(a){return M.media.forEach(function(b){(void 0===a||a===b.type)&&(b.setup="passive")}),K=d.write(M),this}function h(){return M.media.forEach(function(a){a.direction="inactive"}),K=d.write(M),this}function i(){return M.media.forEach(function(a){a.direction="recvonly"}),K=d.write(M),this}function j(a){return-1!==a.indexOf("c=IN IP4")?a.split("c=IN IP4 ")[1].split("\r\n")[0]:null}function k(a,b){return-1===a.indexOf("m="+b)?!1:!0}function l(a,b){var c;return!1===k(a,b)?null:(c=a.split("m="+b)[1],void 0===c?null:c)}function m(a){var b;return!1===k(a.sdp,a.mediaType)?null:(b=l(a.sdp,a.mediaType).split(" ")[1],void 0===b?null:b)}function n(a){return"string"!=typeof a||0===a.length?!1:-1===a.toLowerCase().indexOf("2 udp")?!1:!0}function o(a){var b,c,d,e;return"string"!=typeof a.sdp||0===a.sdp.length?null:(c=l(a.sdp,a.mediaType),!1===n(c)?null:(b=c.split(/2 udp/i)[1],void 0===b?null:(d=b.split(a.ip)[1],void 0===d?null:e=d.split("typ")[0].trim())))}function p(a){var b,c,d,e,f;return d=j(a),b=m({sdp:a,mediaType:"audio"}),e=o({sdp:a,ip:d,mediaType:"audio"}),!0===k(a,"video")&&(c=m({sdp:a,mediaType:"video"}),e=o({sdp:a.split("m=video")[0],ip:d,mediaType:"audio"}),f=o({sdp:a,ip:d,mediaType:"video"})),{audioPort:b,videoPort:c,audioPortRTCP:e,videoPortRTCP:f,ip:d}}function q(a){var b,c,d;return void 0===a.sdpPorts.ip||null===a.sdpPorts.ip?a.sdp:(d=a.sdp,void 0!==a.sdpPorts.audioPort&&void 0!==a.sdpPorts.audioPortRTCP&&(b=parseInt(a.sdpPorts.audioPort,10)+1,d=a.sdp.replace(a.sdpPorts.ip+" "+a.sdpPorts.audioPortRTCP,a.sdpPorts.ip+" "+b)),!0===k(a.sdp,"video")&&void 0!==a.sdpPorts.videoPort&&void 0!==a.sdpPorts.videoPortRTCP&&(c=parseInt(a.sdpPorts.videoPort,10)+1,d=d.replace(a.sdpPorts.ip+" "+a.sdpPorts.videoPortRTCP,a.sdpPorts.ip+" "+c)),d)}function r(a){return-1===a.sdp.indexOf("a=rtcp:"+a.sdpPorts.audioPort+" IN IP4")?!1:!0}function s(a){return!1===r(a)?!1:"string"!=typeof a.sdpPorts.ip||"0.0.0.0"===a.sdpPorts.ip?!1:!1===k(a.sdp,"audio")?!1:"string"!=typeof a.sdpPorts.audioPort||"string"!=typeof a.sdpPorts.audioPortRTCP||parseInt(a.sdpPorts.audioPortRTCP,10)!==parseInt(a.sdpPorts.audioPort,10)+1?!1:!0!==k(a.sdp,"video")||"string"==typeof a.sdpPorts.videoPortRTCP&&"string"==typeof a.sdpPorts.videoPort&&parseInt(a.sdpPorts.videoPortRTCP,10)===parseInt(a.sdpPorts.videoPort,10)+1?!0:!1}function t(){return c.logDebug("getParsedSdp"),c.logTrace("parsedSdp",M),M}function u(){return N}function v(){return c.logDebug("getOriginal"),c.logTrace("originalSdp",K),{sdp:K,type:L}}function w(){return c.logDebug("getMinimal"),c.logTrace("minimalSdp:string",K),c.logTrace("minimalSdp:parsed",M),{sdp:d.write(M),type:L}}function x(){return N?w():v()}function y(){var a,c,e;if(a=b.getBrowserName(),"Firefox"===a){if(c=p(K),e={sdp:K,sdpPorts:c,browser:a},!0===s(e)||0===Object.keys(c).length)return;K=q(e),M=d.parse(K)}return this}function z(){return K=K.replace(/a=sendonly/g,"a=inactive"),M=d.parse(K),this}function A(){return f(),this}function B(a){return void 0!==a&&null!==a&&M.media.forEach(function(b){if("audio"===b.type&&void 0!==b.rtp){var c=[],d=[],e=[];b.rtp.forEach(function(b){("telephone-event"===b.codec.toLowerCase()||a.toLowerCase()===b.codec.toLowerCase())&&(c.push(b),d.push(b.payload))}),void 0!==b.fmtp&&b.fmtp.forEach(function(a){-1!==d.indexOf(a.payload)&&e.push(a)}),b.rtp=c,b.payloads=d.join(" "),0===e.length?delete b.fmtp:b.fmtp=e}}),K=d.write(M),this}function C(){var a,b,c=!1,d=null,e=1,f=2;return void 0!==M.media&&0<M.media.length&&(M.media.forEach(function(c){0!==c.port&&(a=!1,b=!1,void 0!==c.candidates&&c.candidates.forEach(function(c){"udp"===c.transport&&(e===c.component&&(a=!0),f===c.component&&(b=!0))}),d=(null===d||d)&&a&&b),d=null===d||d}),c=d),c}function D(){var a=null;return void 0===M.media?!1:(M.media.forEach(function(b){a="sendonly"===b.direction||"inactive"===b.direction?null===a?!0:a:!1}),a)}function E(){var a=null;return void 0===M.media?!1:(M.media.forEach(function(b){a="sendrecv"===b.direction||"recvonly"===b.direction?null===a?!0:a:!1}),a)}function F(){var a=null;return void 0===M.media?!1:(M.media.forEach(function(b){a="recvonly"===b.direction||"inactive"===b.direction?null===a?!0:a:!1}),a)}function G(){var a=!1,b=!1;return void 0===M.media?!1:(M.media.forEach(function(c){"audio"===c.type&&"sendrecv"===c.direction?a=!0:"video"===c.type&&"sendrecv"===c.direction&&(b=!0)}),a&&b)}function H(){var a=!1,b=!1;return void 0===M.media?!1:(M.media.forEach(function(c){"audio"===c.type&&"sendrecv"===c.direction?a=!0:"video"===c.type&&"recvonly"===c.direction&&(b=!0)}),a&&b)}function I(){return M.media&&(void 0!==M.media[1]&&void 0!==M.media[1].ssrcs?(M.media[0].ssrcs=[],M.media[1].ssrcs=[]):void 0!==M.media[0]&&void 0!==M.media[0].ssrcs&&(M.media[0].ssrcs=[])),K=d.write(M),this}function J(){return M.media&&void 0!==M.media[1]&&void 0!==M.media[1].iceUfrag&&(M.media[1].iceUfrag=M.media[0].iceUfrag,M.media[1].icePwd=M.media[0].icePwd),K=d.write(M),this}c.logDebug("ATT.private.factories.createSdp: Constructor");var K,L,M,N=!0;if(void 0===a)throw new Error("No description provided");if(0===Object.keys(a).length||void 0===a.sdp||"string"!=typeof a.sdp)throw new Error("Invalid description provided");if(void 0===a.type)throw new Error("No type provided");return void 0!==e&&(N=e),K=a.sdp,L=a.type,M=d.parse(K),{getParsedSdp:t,usingMinimalSdp:u,getOriginal:v,getMinimal:w,getDescription:x,hasICECandidates:C,isHoldSdp:D,isResumeSdp:E,isHeldSdp:F,isUpgradeSdp:G,isDowngradeSdp:H,setupActivePassive:f,setupPassive:g,createInactiveSdp:h,createResumeSdp:i,modifyForConnect:y,modifyForConnectFCD:z,modifyForAcceptOffer:A,modifyForSetAudioCodec:B,removeSSRCS:I,replaceufragpwd:J}}var b=ATT.utils,c=ATT.logManager.createLogger("sdp"),d=ATT.sdpParser.getInstance();if(void 0===ATT["private"].factories)throw new Error("Error exporting `ATT.private.factories.createSdp`");ATT["private"].factories.createSdp=a}(),function(){"use strict";function a(a){function g(a,b){f.logDebug("ATT.rtc.Call: publishError");var c;"object"==typeof a&&a.hasOwnProperty("ErrorCode")?(c=a,a=c.ErrorCode):"object"==typeof b&&b.hasOwnProperty("ErrorCode")?(c=b,a=c.ErrorCode,b=void 0):"string"==typeof a?c=Da.getSDKError(a):a instanceof Error&&(b=a,c=Da.getSDKError("0000"),a="0000"),void 0===c&&(b=new Error("TODO: Error with error code "+a+" is not defined in the SDK error dictionary"),a="0001",c=Da.getSDKError(a)),void 0!==b&&(b instanceof Error?c.AdditionalInformation=b.message:"string"==typeof b?c.AdditionalInformation=b:c.AdditionalInformation=JSON.stringify(b)),f.logInfo("Publishing SDK error "+a),Ba.publish("error",c)}function h(){var a={index:fa,timestamp:new Date,callType:ka,mediaType:ia};return void 0!==ya&&(a.codec=ya),void 0!==ma&&(a.downgrade=ma),ja===c.CALL_TYPE.OUTGOING?a.to=ea:ja===c.CALL_TYPE.INCOMING&&(a.from=ea),null!==Ga&&(a.generator=Ga?"initiator":"receiver"),null!==Fa&&(a.operation=Fa),Object.keys(oa).length>0&&(a.invitations=oa),Object.keys(pa).length>0&&(a.participants=pa),a}function i(a){f.logDebug("ATT.rtc.Call: toggleLocalAudio");var b;null!==sa&&(b=sa.getAudioTracks(),b.forEach(function(b){b.enabled=a}))}function j(a){f.logDebug("ATT.rtc.Call: toggleLocalVideo");var b;null!==sa&&(b=sa.getVideoTracks(),b.forEach(function(b){b.enabled=a}))}function k(){f.logDebug("ATT.rtc.Call: disableLocalMedia"),i(!1),j(!1)}function l(){f.logDebug("ATT.rtc.Call: enableLocalMedia"),i(!xa),j(!0)}function m(){var a,b,c,d;return sa&&(b=sa.getTracks()),b&&0<b.length&&b.forEach(function(a){"audio"===a.kind&&(a.enabled||xa)?c=!0:"video"===a.kind&&a.enabled&&(d=!0)}),a=c||d?c&&!d?"audio":c&&d?"video":"unsupported":"nomedia"}function n(){void 0!==ha&&ha.addStream(sa),ia=m()}function o(){l(),ia=m()}function p(){void 0!==ha&&ha.removeStream(sa),ia=m()}function q(){k(),ia=m()}function r(a){f.logDebug("previousState call state:"+ua),f.logDebug("New call state:"+a),ua=va,va=a,ua!==va&&Ba.publish("state-changed",ATT.utils.extend(h(),{oldState:ua,newState:va}))}function s(a){r(a),Ba.publish(a,h())}function t(a){f.logDebug("Call: Adding local stream"),f.logTrace("Local stream ID",a.id),sa=a,i(!xa),n()}function u(a){null!==sa&&sa.id===a.id&&(f.logDebug("Call: Removing local stream"),f.logTrace("Local stream ID",a.id),p(),sa=null)}function v(a,b){var c,d,e,f=na.invitations();for(c in f)f.hasOwnProperty(c)&&(d=f[c],a===d.id&&(e=d.invitee,pa[e]={participant:e,status:b},Ba.publish("invite-accepted",h())))}function w(a,b,c){oa[a]={invitee:a,id:b,status:c}}function x(a,b){var c,d,e,f=na.invitations();for(c in f)f.hasOwnProperty(c)&&(d=f[c],a===d.id&&(e=d.invitee,oa[e].status=b))}function y(a){return a.toString(),a.indexOf("tel")>-1?a.split("+")[1]:a.indexOf("sip")>-1?a.split(":")[1].split("@")[0]:a}function z(){setTimeout(function(){Fa=null,Ga=null},5)}function A(a){f.logDebug("ATT.rtc.Call: modifyCall"),f.logInfo("Trying to send modify call request"),f.logTrace("description",a),Ca.modifyCall({description:a,callId:da,breed:ka,sessionId:la.sessionId,token:la.token,onSuccess:function(){f.logDebug("modifyCall: onSuccess"),f.logInfo("Successfully sent media modification."),r("modification-initiated"),Ba.publish("modification-in-progress",h())},onError:function(a){f.logDebug("modifyCall: onError"),f.logError("Failed to send media modification"),f.logTrace("error",a),g(a)}})}function B(a){f.logDebug("ATT.rtc.Call: acceptMediaModifications"),f.logInfo("Trying to send accept media modification request"),f.logTrace("description",a),Ca.acceptMediaModifications({sessionId:la.sessionId,token:la.token,callId:da,breed:ka,sdp:a.sdp,modId:null!==Ea?Ea.modId:null,onSuccess:function(){f.logDebug("acceptMediaModification: onSuccess"),f.logInfo("Successfully accepted media modification."),r("modification-accepted"),Ea=null},onError:function(a){f.logDebug("acceptMediaModification: onError"),f.logError("Error accepting media modification"),f.logTrace("error",a),g(a),Ea=null}})}function C(a){var b,c,d;return f.logDebug("Event: onModReceived"),f.logTrace("modificationId",a.modificationId),f.logTrace("remoteSdp",a.remoteSdp),Ga=!1,Ea={modId:a.modificationId,mediaType:a.mediaType},c=na.localSdp().getDescription(),f.logTrace("localDescription",c),void 0===a.remoteSdp?(f.logInfo("No remote sdp, accepting media modifications"),void B(c)):(f.logInfo("Remote sdp exists"),na.setRemoteSdp({sdp:a.remoteSdp,type:"offer"}),na.remoteSdp().modifyForAcceptOffer(),na.remoteSdp().isHoldSdp()&&na.remoteSdp().removeSSRCS(),d=na.remoteSdp().getDescription(),void ha.setRemoteDescription(d,function(){return f.logDebug("peerConnection.setRemoteDescription: success"),f.logInfo("Remote description set successfully on receiving modifications"),"connected"===va&&("audio"===ia&&na.remoteSdp().isUpgradeSdp()||"video"===ia&&na.remoteSdp().isDowngradeSdp())?(f.logInfo("Call media modification received."),Fa="audio"===ia&&na.remoteSdp().isUpgradeSdp()?"upgrade":"video"===ia&&na.remoteSdp().isDowngradeSdp()?"downgrade":null,f.logTrace("modifications",Ea),b=h(),b.newMediaType=a.mediaType,void Ba.publish("media-modification",b)):(f.logInfo("Accepting SDP Offer"),Fa=!wa&&na.remoteSdp().isHoldSdp()?"hold":wa&&na.remoteSdp().isResumeSdp()?"resume":null,void ha.generateAnswer({constraints:{OfferToReceiveAudio:!wa,OfferToReceiveVideo:!wa&&"video"===ia},onAnswerReady:function(a){f.logDebug("generateAnswer: onAnswerReady"),f.logInfo("Successfully generated SDP answer"),na.setLocalSdp(a),c=na.localSdp().getDescription(),f.logTrace("local description",c),B(c)},onError:function(a){f.logDebug("peerConnection.generateAnswer: error"),f.logError("Error during accept sdp offer on peer connection"),f.logTrace(a),g(a)}}))},function(a){f.logDebug("peerConnection.setRemoteDescription: error"),f.logError("Error setting remote description on receiving modifications"),f.logTrace(a),g(a)}))}function D(a){f.logDebug("Event: onModTerminated"),f.logTrace("type",a.type),f.logTrace("reason",a.reason);var b,d;if(f.logInfo("Media modification terminated"),"success"===a.reason){if(f.logInfo("Media modification successful"),void 0===a.remoteSdp){if(f.logInfo("No remote SDP"),Ga=!1,"modification-accepted"===va&&("connected"===ua?na.localSdp().isHeldSdp()?(f.logInfo("Call is held."),wa=!0,r("connected"),Ba.publish("held",h())):(f.logInfo("Call is connected."),wa=!1,r("connected")):"held"===ua?na.localSdp().isHeldSdp()?(f.logInfo("Call is held."),wa=!0,s("held")):(f.logInfo("Call is held."),wa=!1,s("held")):wa?na.localSdp().isHoldSdp()?(f.logInfo("Call is resumed."),wa=!1,r("held"),Ba.publish("resumed",h())):na.localSdp().isResumeSdp()&&(f.logInfo("Call is resumed."),wa=!1,r("connected"),Ba.publish("resumed",h())):(f.logInfo("Call is connected."),r("connected")),z()),"conference"===a.type){if(void 0!==a.modificationId)return f.logInfo("Conference: invitation-accepted"),void v(a.modificationId,"active");return}return}return Ga=!0,f.logInfo("Remote SDP exists"),d=ha.hasLocalOffer()?"answer":"offer",na.setRemoteSdp({sdp:a.remoteSdp,type:d}),c.CALL_TYPE.INCOMING===ja&&("audio"===ia?"audio"===a.mediaType?na.remoteSdp().setupPassive("audio"):"video"===a.mediaType&&na.remoteSdp().setupPassive():"video"===ia?"video"===a.mediaType?"held"===ua?na.remoteSdp().setupPassive():na.remoteSdp().setupPassive("audio"):"audio"===a.mediaType&&na.remoteSdp().setupPassive("audio"):"nomedia"===ia&&"nomedia"===a.mediaType&&na.remoteSdp().setupPassive()),b=na.remoteSdp().getDescription(),void ha.setRemoteDescription(b,function(){f.logDebug("peerConnection.setRemoteDescription: onSuccess"),f.logInfo("Successfully set remote description."),"modification-initiated"===va&&("connected"===ua&&na.localSdp().isHoldSdp()?(f.logInfo("Call is on hold."),s("held")):"held"===ua&&na.localSdp().isResumeSdp()?(f.logInfo("Call is resumed."),r("connected"),Ba.publish("resumed",h())):(f.logInfo("Call is connected."),r("connected")),z())},function(a){f.logDebug("peerConnection.setRemoteDescription: onError"),f.logError("Failed to set the remote description."),f.logTrace("error",a),g(a)})}if("Call rejected"!==a.reason)Ba.publish("notification",ATT.utils.extend(h(),{message:a.reason}));else if("conference"===a.type){if(void 0!==a.modificationId)return f.logInfo("Conference: invitation-rejected"),x(a.modificationId,"rejected"),void Ba.publish("rejected",h());return}}function E(a){return f.logDebug("att.call.js: onMoveTerminated"),f.logInfo("Move terminated"),f.logTrace("data",a),"success"!==a.reason?(r("move-failed"),f.logError("Move failed"),void g(new Error("There was an error moving the call. Reason: "+a.reason))):(f.logInfo("Move success"),void r("move-initiated"))}function F(a){if(f.logDebug("onSessionOpen"),f.logTrace("data",a),a.mediaType&&("audio"===a.mediaType&&"video"===ia&&(ma=!0,j(!1)),ia=a.mediaType),a.provisionalSdp||s("connected"),void 0!==a.remoteSdp){f.logTrace("Remote SDP",a.remoteSdp);var b={sdp:a.remoteSdp,type:"answer"};na.setRemoteSdp(b),na.remoteSdp().removeSSRCS(),b=na.remoteSdp().getDescription(),ha.setRemoteDescription(b,function(){f.logDebug("peerConnection.setRemoteDescription: success"),f.logDebug("Successfully set remote description on peer connection")},function(a){f.logDebug("peerConnection.setRemoteDescription: error"),f.logError("Error during set remote description on peer connection"),f.logTrace(a),g(a)})}}function G(a){f.logDebug("onSessionModified");var b,c,d;return"connecting"===va?s("connected"):"move-initiated"===va?s("moved"):"move-failed"===va?(r("connected"),1===ATT["private"].holdResumeOpt?n():o()):r("connected"),void 0===a.remoteSdp?void f.logInfo("No Remote SDP"):(f.logInfo("Remote SDP exists"),f.logTrace("Remote SDP",a.remoteSdp),d=ha.hasLocalOffer()?"answer":"offer",c={sdp:a.remoteSdp,type:d},na.setRemoteSdp(c),ha.isStateStable()&&na.remoteSdp().modifyForAcceptOffer(),c=na.remoteSdp().getDescription(),void ha.setRemoteDescription(c,function(){f.logDebug("peerConnection.setRemoteDescription: onSuccess"),f.logDebug("Successfully set remote description on peer connection"),ha.hasRemoteOffer()&&ha.generateAnswer({constraints:{OfferToReceiveAudio:!0,OfferToReceiveVideo:"video"===ia},onAnswerReady:function(a){f.logDebug("generateAnswer: onAnswerReady"),f.logInfo("Successfully generated SDP answer"),na.setLocalSdp(a),b=na.localSdp().getDescription(),f.logTrace("local description",b)},onError:function(a){f.logDebug("peerConnection.generateAnswer: error"),f.logError("Error during accept sdp offer on peer connection"),f.logTrace(a),g(a)}})},function(a){f.logDebug("peerConnection.setRemoteDescription: onError"),f.logError("Error during set remote description on peer connection"),f.logTrace(a),g(a)}))}function H(){f.logDebug("att.call.js: onTransferInitiated"),f.logInfo("Transfer initiated successfully"),s("transferring")}function I(a){return f.logDebug("att.call.js: onTransferTerminated"),f.logInfo("Transfer terminated"),f.logTrace("data",a),"success"!==a.reason?void g(new Error("There was an error transferring the call. "+a.reason)):void s("transferred")}function J(a){f.logDebug("onSessionTerminated"),f.logTrace(a);var b;void 0!==a?"Call rejected"===a.reason||Aa?s("rejected"):"Call canceled"===a.reason||za?s("canceled"):void 0!==a.reason?(r("disconnected"),b=h(),b.message=a.reason,Ba.publish("disconnected",b)):s("created"===va?"canceled":"disconnected"):s("disconnected"),Ca.off(c.API_EVENT.SESSION_OPEN+":"+da,F),Ca.off(c.API_EVENT.SESSION_MODIFIED+":"+da,G),Ca.off(c.API_EVENT.SESSION_TERMINATED+":"+da,J),Ca.off(c.API_EVENT.MODIFICATION_RECEIVED+":"+da,C),Ca.off(c.API_EVENT.MODIFICATION_TERMINATED+":"+da,D),Ca.off(c.API_EVENT.MOVE_TERMINATED+":"+da,E),Ca.off(c.API_EVENT.TRANSFER_INITIATED+":"+da,H),Ca.off(c.API_EVENT.TRANSFER_TERMINATED+":"+da,I),void 0!==ha&&(ha.close(),ha=void 0)}function K(){f.logDebug("ATT.rtc.Call: registerForRTCEvents"),Ca.on(c.API_EVENT.SESSION_OPEN+":"+da,F),Ca.on(c.API_EVENT.SESSION_MODIFIED+":"+da,G),Ca.on(c.API_EVENT.SESSION_TERMINATED+":"+da,J),Ca.on(c.API_EVENT.MODIFICATION_RECEIVED+":"+da,C),Ca.on(c.API_EVENT.MODIFICATION_TERMINATED+":"+da,D),Ca.on(c.API_EVENT.MOVE_TERMINATED+":"+da,E),Ca.on(c.API_EVENT.TRANSFER_INITIATED+":"+da,H),Ca.on(c.API_EVENT.TRANSFER_TERMINATED+":"+da,I)}function L(a){f.logDebug("ATT.rtc.Call: setId"),f.logTrace(a),da=a,null===da?(f.logInfo("disconnecting..."),s("disconnected")):(f.logInfo("connecting..."),s("connecting"))}function M(a){if(f.logDebug("ATT.rtc.Call: setLocalSdp"),f.logTrace("description",a),void 0===a)throw new Error("No local description provided");if("object"!=typeof a||0===Object.keys(a).length||void 0===a.sdp)throw new Error("Invalid local description provided");qa=b.createSdp(a)}function N(a){if(f.logDebug("ATT.rtc.Call: setRemoteSdp"),f.logTrace("description",a),void 0===a)throw new Error("No remote description provided");if("object"!=typeof a||0===Object.keys(a).length||void 0===a.sdp)throw new Error("Invalid remote description provided");ra=b.createSdp(a),ya=d.getCodecFromSdp(a.sdp),f.logTrace("codec",ya)}function O(a,b){if(f.logDebug("ATT.rtc.Call: on"),f.logInfo("Subscribing to call event: "+a),"connecting"!==a&&"response-pending"!==a&&"invite-accepted"!==a&&"participant-removed"!==a&&"canceled"!==a&&"rejected"!==a&&"connected"!==a&&"muted"!==a&&"unmuted"!==a&&"stream-added"!==a&&"error"!==a&&"held"!==a&&"resumed"!==a&&"disconnecting"!==a&&"disconnected"!==a&&"notification"!==a&&"moved"!==a&&"transferring"!==a&&"transferred"!==a&&"modification-in-progress"!==a&&"state-changed"!==a&&"media-modification"!==a&&"tone-sending"!==a&&"tone-sent"!==a)throw new Error("Event "+a+" not defined");Ba.unsubscribe(a,b),Ba.subscribe(a,b,this)}function P(a,b){f.logDebug("ATT.rtc.Call: off"),f.logInfo("Unsubscribing from call event: "+a),Ba.unsubscribe(a,b)}function Q(){function a(a){f.logInfo("Offer is ready"),na.setLocalSdp(a),A(na.localSdp().getDescription())}function d(a){f.logInfo("Answer is ready"),na.setLocalSdp(a),B(na.localSdp().getDescription())}function e(){f.logDebug("createPeerConnection: onSuccess");try{if(za)return f.logInfo("Call is being canceled..."),za=!1,void J({reason:"Call canceled"});na.setLocalSdp(ha.getLocalDescription()),j=na.localSdp().getDescription(),f.logTrace("Call.connect SDP",j),l={sessionId:la.sessionId,token:la.token,description:j,breed:ka,onSuccess:function(a){f.logDebug("connectCall: onSuccess"),f.logInfo("Success during connectCall"),f.logTrace(a),c.CALL_TYPE.INCOMING===ja?s("connecting"):(L(a.id),K())},onError:function(a){f.logDebug("connectCall: onError"),f.logError("Error during connectCall"),f.logTrace(a),g(a)}},void 0!==da&&null!==da&&(l.callId=da),"call"===ka&&(l.peer=ea),f.logInfo("Peer Connection created. Connecting now.."),Ca.connectCall(l)}catch(a){f.logError("Error during connectCall"),f.logTrace("error",a),g(a)}}f.logDebug("Call: connect");var h,i,j,k,l;return null!==na.remoteSdp()&&(na.remoteSdp().modifyForConnectFCD(),na.remoteSdp().removeSSRCS(),k=na.remoteSdp().getDescription()),void 0!==ha&&null!==ha?(f.logInfo("Peer connection exists"),null===Ea||void 0===Ea?(f.logInfo("The call mediaType is: "+ia),Fa="video"===ia?"upgrade":"downgrade",Ga=!0,i={constraints:{OfferToReceiveAudio:!0,OfferToReceiveVideo:!0},onOfferCreated:function(a){return f.logDebug("peerConnection.generateOffer: onOfferCreated"),f.logInfo("Successfully created SDP offer"),f.logTrace("description",a),a},onOfferReady:a,onError:function(a){f.logError("peerConnection.generateOffer: onError"),f.logTrace("error",a),g(a)}},f.logInfo("Trying to initiate media modification"),f.logTrace("generateOfferOptions",i),void ha.generateOffer(i)):(f.logInfo("Media modifications exists"),f.logTrace("modifications",Ea),f.logInfo("The current call state is: "+va),"connected"===va?(f.logInfo("The call mediaType is: "+ia),i={constraints:{OfferToReceiveAudio:!0,OfferToReceiveVideo:"video"===Ea.mediaType},onAnswerCreated:function(a){return f.logDebug("peerConnection.generateOffer: onAnswerCreated"),f.logInfo("Successfully created SDP answer"),f.logTrace("description",a),a},onAnswerReady:d,onError:function(a){f.logError("peerConnection.generateAnswer: onError"),f.logTrace("error",a),g(a)}},f.logInfo("Trying to accept media modification"),f.logTrace("generateAnswerOptions",i),void ha.generateAnswer(i)):void f.logWarning("Connect for accept media modifications called in wrong state: "+va))):(h={pcConfiguration:ga,mediaType:ia,stream:sa,remoteSdp:k,onSuccess:e,onError:function(a){f.logDebug("createPeerConnection: onError"),f.logError("Error creating peer connection"),f.logTrace(a),g(a)},onRemoteStream:function(a){f.logDebug("createPeerConnection: onRemoteStream"),f.logInfo("Remote stream playing"),f.logTrace(a),ta=a,Ba.publish("stream-added",{stream:a})}},f.logInfo("Trying to create a peer connection..."),f.logTrace("options",h),void(ha=b.createPeerConnection(h)))}function R(a){f.logDebug("ATT.rtc.Call: addParticipant"),f.logInfo("adding participant..."),f.logTrace(a);try{Ca.addParticipant({sessionInfo:la,invitee:a,confId:da,onSuccess:function(b){f.logDebug("rtcManager.addParticipant: onSuccess"),f.logInfo("Successfully added participant"),f.logTrace(b),w(y(a),b,"invited"),Ba.publish("response-pending",h())},onError:function(a){f.logDebug("rtcManager.addParticipant: onError"),f.logError("Error adding participant"),f.logTrace(a),g(a)}})}catch(b){f.logError("Error adding participant"),f.logTrace(b),g(b)}}function S(a){f.logDebug("ATT.rtc.Call: removeParticipant"),f.logTrace(a);try{Ca.removeParticipant({sessionInfo:la,participant:a,confId:da,onSuccess:function(){f.logDebug("rtcManager.removeParticipant: onSuccess"),f.logInfo("Successfully removed participant"),delete na.participants()[a],Ba.publish("participant-removed",h())},onError:function(a){f.logDebug("rtcManager.removeParticipant: onError"),f.logError("Error removing participant"),f.logTrace(a),g(a)}})}catch(b){f.logError("Error removing participant"),f.logTrace(b),g(b)}}function T(){if(f.logDebug("ATT.rtc.Call: disconnect"),na.on("error",J),"created"===va||"connecting"===va){if(f.logInfo("Canceling.."),za=!0,null===da)return void f.logInfo("Call connecting not completed yet");f.logInfo("Call connecting completed. Sending cancel request"),Ca.cancelCall({callId:da,breed:ka,sessionId:la.sessionId,token:la.token,onSuccess:function(){f.logDebug("cancelCall: success"),f.logInfo("Successfully canceled call")},onError:function(a){f.logDebug("cancelCall: onError"),f.logError("Error canceling call"),f.logTrace(a),g(a)}})}else null!==da&&(f.logInfo("Disconnecting..."),s("disconnecting"),Ca.disconnectCall({sessionId:la.sessionId,breed:ka,token:la.token,callId:da,onSuccess:function(){f.logDebug("disconnectCall: onSuccess"),f.logInfo("Successfully disconnected call")},onError:function(a){f.logDebug("disconnectCall: onError"),f.logError("Error disconnecting call"),f.logTrace(a),g(a)}}))}function U(){f.logDebug("ATT.rtc.Call: disconnectConference"),f.logInfo("Disconnecting Conference..."),s("disconnecting"),Ca.disconnectCall({sessionId:la.sessionId,token:la.token,breed:"conference",callId:da,onSuccess:function(){f.logDebug("disconnectCall: onSuccess"),f.logInfo("Successfully disconnected conference")},onError:function(a){f.logDebug("disconnectCall: onError"),f.logError("Error disconnecting conference"),f.logTrace(a),g(a)}})}function V(a){var b=!1;if(f.logDebug("ATT.rtc.Phone: validOperation"),f.logTrace("Operation",a),f.logTrace("State",va),!Ha.hasOwnProperty(a))throw new Error(a+" is not a valid operation");if(Ha[a].forEach(function(a){va===a&&(b=!0)}),!b)throw new Error("Cannot "+a+" call. The operation was called in invalid call state: "+va)}function W(){f.logDebug("ATT.rtc.Call: mute"),f.logInfo("Muting call...");try{i(!1),xa=!0,Ba.publish("muted",h())}catch(a){f.logError("Error muting call"),f.logTrace(a),g(a)}}function X(){f.logDebug("ATT.rtc.Call: unmute"),f.logInfo("Unmuting call...");try{i(!0),xa=!1,Ba.publish("unmuted",h())}catch(a){f.logError("Error unmuting call"),f.logTrace(a),g(a)}}function Y(a){var c,d;Fa=a,Ga=!0,f.logInfo("Creating offer for "+a),1===ATT["private"].holdResumeOpt?p():q(),ha.generateOffer({constraints:{OfferToReceiveAudio:!1,OfferToReceiveVideo:!1},onOfferCreated:function(a){return f.logDebug("peerConnection.generateOffer: onOfferCreated"),wa&&(a=b.createSdp(a).createInactiveSdp().getDescription()),a},onOfferReady:function(b){return f.logDebug("peerConnection.generateOffer: onOfferReady"),
na.setLocalSdp(b),d=na.localSdp().getDescription(),f.logTrace("localSDP",d),c={description:d,sessionId:la.sessionId,token:la.token,breed:ka,callId:da,onSuccess:function(){f.logDebug(a+"Call: onSuccess"),f.logInfo("Successfully sent offer for "+a+" call"),r("modification-initiated"),Ba.publish("modification-in-progress",h())},onError:function(b){f.logDebug(a+"Call: onError"),f.logInfo("Error sending offer for "+a+" call"),f.logTrace(b),g(b)}},"move"===a?void Ca.moveCall(c):void Ca.holdCall(c)},onError:function(a){f.logDebug("peerConnection.createSdpOffer: onError"),f.logInfo("Error during create sdp offer"),f.logTrace(a),g(a)}})}function Z(){f.logDebug("ATT.rtc.Call: hold"),f.logInfo("Holding call..."),Y("hold")}function $(){f.logDebug("ATT.rtc.Call: move"),f.logInfo("Moving call..."),Y("move")}function _(){var a;f.logDebug("ATT.rtc.Call: resume"),f.logInfo("Creating offer for resume"),Fa="resume",Ga=!0,1===ATT["private"].holdResumeOpt?n():o(),ha.generateOffer({constraints:{OfferToReceiveAudio:!0,OfferToReceiveVideo:"video"===ia},onOfferCreated:function(a){return f.logDebug("peerConnection.generateOffer: onOfferCreated"),wa&&(a=b.createSdp(a).createResumeSdp().getDescription()),a},onOfferReady:function(b){f.logDebug("peerConnection.generateOffer: onOfferReady"),na.setLocalSdp(b),a=na.localSdp().getDescription(),f.logTrace("localDescription",a),Ca.resumeCall({description:a,sessionId:la.sessionId,token:la.token,callId:da,breed:ka,onSuccess:function(){f.logDebug("resumeCall: onSuccess"),f.logInfo("Successfully sent resume call offer"),r("modification-initiated"),Ba.publish("modification-in-progress",h())},onError:function(a){f.logDebug("resumeCall: onError"),f.logError("Error sending resume call offer"),f.logTrace(a),g(a)}})},onError:function(a){f.logDebug("peerConnection.createSdpOffer: onError"),f.logInfo("Error during create sdp offer"),f.logTrace(a),g(a)}})}function aa(){f.logDebug("ATT.rtc.Call: reject"),f.logInfo("Rejecting call..."),Aa=!0,Ca.rejectCall({callId:da,sessionId:la.sessionId,token:la.token,breed:ka,onSuccess:function(){f.logDebug("rejectCall: onSuccess"),f.logInfo("Successfully rejected the call")},onError:function(a){f.logDebug("rejectCall: onError"),f.logError("Error rejecting the call"),f.logTrace(a),g(a)}})}function ba(a){if(void 0===a||0===Object.keys(a).length)throw new Error("No options provided");if(void 0===a.input)throw new Error("No input provided");try{a.onToneSent=function(a){var b=h();b.tone=a.tone,b.timestamp=new Date(a.timeStamp),Ba.publish("tone-sent",b)},a.onToneSending=function(){Ba.publish("tone-sending",h())},ha.sendDTMFTone(a)}catch(b){f.logError("Error sending dtmf tone"),f.logTrace(b),g(b)}}function ca(a){if(f.logDebug("ATT.rtc.Call: transfer"),f.logInfo("Transferring call..."),f.logTrace(a),void 0===a||0===Object.keys(a).length||void 0===a.targetCallId)throw new Error("No targetCallId provided");Ca.transferCall({callId:da,breed:ka,sessionId:la.sessionId,token:la.token,targetCallId:a.targetCallId,transfereeSdp:na.remoteSdp().getDescription().sdp,success:function(){f.logDebug("transferCall: success"),f.logInfo("Successfully transferred the call"),"function"==typeof a.success&&a.success()},error:function(b){f.logDebug("transferCall: error"),f.logError("Error transferring the call"),f.logTrace(b),"function"==typeof a.error&&a.error(b)}})}f.logDebug("ATT.rtc.Call: Constructor");var da,ea,fa,ga,ha,ia,ja,ka,la,ma,na=this,oa={},pa={},qa=null,ra=null,sa=null,ta=null,ua=null,va=null,wa=!1,xa=!1,ya=[],za=!1,Aa=!1,Ba=b.createEventEmitter(),Ca=e.getRTCManager(),Da=ATT.errorDictionary,Ea=null,Fa=null,Ga=null,Ha={hold:["connected"],resume:["held"],move:["connected"],transfer:["held"],upgrade:["connected"],downgrade:["connected"],acceptMod:["connected","held"],rejectMod:["connected","held"]};if(void 0===a||0===Object.keys(a).length)throw new Error("No input provided");if(void 0===a.breed)throw new Error("No breed provided");if("call"===a.breed&&void 0===a.peer)throw new Error("No peer provided");if(void 0===a.type)throw new Error("No type provided");if(void 0===a.mediaType)throw new Error("No mediaType provided");if(void 0===a.pcConfiguration)throw new Error("No peer connection configuration provided");ka=a.breed,void 0===a.id?da=null:(da=a.id,K()),va="created",ea=a.peer,fa=a.index,ia=a.mediaType,ja=a.type,la=a.sessionInfo,ga=a.pcConfiguration,this.index=function(){return fa},this.pcConfiguration=function(){return ga},this.peer=function(){return ea},this.codec=function(){return ya},this.mediaType=function(){return ia},this.type=function(){return ja},this.breed=function(){return ka},this.state=function(){return va},this.held=function(){return wa},this.muted=function(){return xa},this.participants=function(){return pa},this.invitations=function(){return oa},this.sessionInfo=function(){return la},this.id=function(){return da},this.localSdp=function(){return qa},this.remoteSdp=function(){return ra},this.localStream=function(){return sa},this.remoteStream=function(){return ta},this.canceled=function(){return za},this.rejected=function(){return Aa},this.modifications=function(){return Ea},this.on=O,this.off=P,this.createEventData=h,this.setId=L,this.setLocalSdp=M,this.setRemoteSdp=N,this.addStream=t,this.removeStream=u,this.validateOperation=V,this.connect=Q,this.disconnect=T,this.disconnectConference=U,this.addParticipant=R,this.removeParticipant=S,this.mute=W,this.unmute=X,this.hold=Z,this.resume=_,this.move=$,this.reject=aa,this.transfer=ca,this.sendDTMFTone=ba,a.test&&(this.operation=function(){return Fa},this.generator=function(){return Ga},this.setState=r,this.setHeld=function(a){wa=a},this.setModifications=function(a){Ea=a},this.setOperation=function(a){Fa=a})}var b=ATT["private"].factories,c=ATT["private"]["enum"],d=ATT.utils,e=ATT["private"].rtcManager,f=ATT.logManager.createLogger("call");if(f.logDebug("Loading att.rtc.call..."),ATT["private"].holdResumeOpt=2,void 0===ATT.rtc)throw new Error("Cannot export Call. ATT.rtc is undefined");ATT.rtc.Call=a}(),function(){"use strict";function a(){function a(a,b){d.logDebug("ATT.rtc.Session: publishError");var c;"object"==typeof a&&a.hasOwnProperty("ErrorCode")?(c=a,a=c.ErrorCode):"object"==typeof b&&b.hasOwnProperty("ErrorCode")?(c=b,a=c.ErrorCode,b=void 0):"string"==typeof a?c=n.getSDKError(a):a instanceof Error&&(b=a,c=n.getSDKError("0000"),a="0000"),void 0===c&&(b=new Error("TODO: Error with error code "+a+" is not defined in the SDK error dictionary"),a="0001",c=n.getSDKError(a)),void 0!==b&&(b instanceof Error?c.AdditionalInformation=b.message:"string"==typeof b?c.AdditionalInformation=b:c.AdditionalInformation=JSON.stringify(b)),d.logInfo("Publishing SDK error "+a),k.publish("error",c)}function f(a){d.logDebug("ATT.rtc.Session: onInvitationReceived"),d.logInfo("On getting invitation"),d.logTrace("Call information",a);var b,e,f;return null!==m.pendingCall?void k.publish("notification",{from:a.from,mediaType:a.mediaType,type:a.type,timestamp:new Date,message:"Can only handle one incoming call at a time; ignoring the second incoming call."}):Object.keys(q).length>=2?void k.publish("notification",{from:a.from,mediaType:a.mediaType,type:a.type,timestamp:new Date,message:"Two calls already in progress, unable to handle a third incoming call."}):(e=m.createCall({breed:a.type,id:a.id,peer:a.from,type:c.CALL_TYPE.INCOMING,mediaType:a.mediaType}),void(void 0!==e&&(a.sdp&&(f=a.sdp,e.setRemoteSdp({sdp:f,type:"offer"})),b="call"===e.breed()?"call:incoming":"conference-invite",k.publish(b,{from:e.peer(),mediaType:e.mediaType(),codec:e.codec(),timestamp:new Date}))))}function g(a,b){d.logDebug("ATT.rtc.Session: off"),d.logTrace("Un-subscribing from event:",a),k.unsubscribe(a,b)}function h(a,b){if(d.logDebug("ATT.rtc.Session: on"),d.logTrace("Subscribing to session event: ",a),"ready"!==a&&"connecting"!==a&&"connected"!==a&&"updating"!==a&&"needs-refresh"!==a&&"notification"!==a&&"call:incoming"!==a&&"conference-invite"!==a&&"call:switched"!==a&&"disconnecting"!==a&&"disconnected"!==a&&"address-updated"!==a&&"all-calls-terminated"!==a&&"error"!==a)throw d.logError("Event "+a+" not defined"),new Error("Event "+a+" not defined");k.unsubscribe(a,b),k.subscribe(a,b,this)}function i(){var a,b=0;for(a in q)q.hasOwnProperty(a)&&b<q[a].index()&&(b=q[a].index());return b}function j(a,b){var c={to:b.createEventData(),timestamp:new Date};null!==a&&(c.from=a.createEventData()),k.publish("call:switched",c)}d.logDebug("ATT.rtc.Session: Constructor");var k,l,m=this,n=ATT.errorDictionary,o=null,p=null,q={};k=b.createEventEmitter(),l=ATT["private"].rtcManager.getRTCManager(),this.timeout=null,this.e911Id=null,this.pendingCall=null,this.currentCall=null,this.timer=null,this.getSupportedAudioCodecs=function(){return e.getSupportedAudioCodecs()},this.getPCConfiguration=function(){return e.getPCConfiguration()},this.setPCConfiguration=function(a){e.setPCConfiguration(a)},this.resetPCConfiguration=function(a){e.resetPCConfiguration(a)},this.on=h.bind(this),this.off=g.bind(this),this.getToken=function(){return d.logDebug("ATT.rtc.Session: getToken"),d.logInfo("Getting the token"),d.logTrace("Token",p),p},this.getId=function(){return d.logDebug("ATT.rtc.Session: getId"),d.logInfo("Getting the session Id"),d.logTrace("getId-Session Id",o),o},this.setId=function(a){return d.logDebug("ATT.rtc.Session: setId"),d.logInfo("set the session Id"),d.logTrace("setId-Session Id",a),o=a,null===a?(d.logDebug("No session Id"),void k.publish("disconnected")):void k.publish("connected")},this.update=function(b){if(d.logDebug("ATT.rtc.Session: update"),d.logInfo("Updating the session object"),d.logTrace("update-options",b),void 0===b)throw d.logError("No options provided"),new Error("No options provided");if(void 0!==b.timeout&&"number"!=typeof b.timeout)throw d.logError("Error invalid Timeout"),new Error("Timeout is not a number.");k.publish("updating",b),p=b.token||p,this.e911Id=b.e911Id||this.e911Id,d.logDebug("Updating the session object successfully"),void 0!==b.timeout&&(b.timeout<6e4?this.timeout=b.timeout:this.timeout=b.timeout-6e4,null!==this.timer&&clearInterval(this.timer),this.timer=setInterval(function(){k.publish("needs-refresh"),l.refreshSession({sessionId:o,token:p,success:function(){d.logDebug("refreshSession: success"),d.logInfo("Successfully refreshed the session")},error:function(b){d.logDebug("refreshSession: error"),d.logInfo("Error refreshing the session"),d.logTrace(b),a(b)}})},this.timeout))},this.connect=function(b){if(d.logDebug("ATT.rtc.Session: connect"),d.logTrace("connect-options",b),void 0===b||0===Object.keys(b).length)throw new Error("No options provided");if(void 0===b.token)throw new Error("No token provided");p=b.token,this.e911Id=b.e911Id,k.publish("connecting"),m=this,d.logInfo("Connect the session"),l.connectSession({token:b.token,e911Id:b.e911Id,onSessionConnected:function(a){d.logDebug("connectSession: onSessionConnected"),d.logTrace("Session Information",a),m.setId(a.sessionId),m.update({timeout:a.timeout})},onSessionReady:function(a){d.logDebug("connectSession: onSessionReady"),d.logTrace("onSessionReady-data",a),k.publish("ready",a),l.on("invitation-received:"+o,f)},onError:function(b){d.logDebug("connectSession: onError"),d.logError("Error during connectSession"),d.logTrace("connectSession: error",b),a("2004",b)}})},this.disconnect=function(){d.logDebug("ATT.rtc.Session: disconnect"),k.publish("disconnecting"),clearInterval(this.timer),d.logInfo("Disconnect the session"),l.disconnectSession({sessionId:m.getId(),token:m.getToken(),e911Id:m.e911Id,onSessionDisconnected:function(){d.logDebug("disconnectSession: onSessionDisconnected"),m.setId(null)},onError:function(b){d.logDebug("disconnectSession: onError"),d.logError("Error during disconnectSession"),d.logTrace("disconnectSession: error",b),m.setId(null),a("3000",b)}})},this.addCall=function(a){d.logDebug("ATT.rtc.Session: addCall"),d.logInfo("Adding a call in the calls array"),d.logTrace("callId",a.id()),d.logTrace("Before",q),q[a.id()]=a,d.logTrace("After",q)},this.createCall=function(a){d.logDebug("ATT.rtc.Session: createCall"),d.logInfo("Creating a new call"),d.logTrace("CreateCall-options",a);var b=new ATT.rtc.Call(ATT.utils.extend(a,{pcConfiguration:e.getPCConfiguration(),index:i()+1,sessionInfo:{sessionId:this.getId(),token:this.getToken()}}));return d.logTrace("call.peer()",b.peer()),d.logTrace("call object",b),b.on("connected",function(){d.logDebug("call.on: connected"),null!==m.currentCall&&(d.logInfo("Switching the calls..."),d.logTrace("From",m.currentCall.peer()),d.logTrace("To",m.pendingCall.peer()),j(m.currentCall,m.pendingCall)),m.currentCall=m.pendingCall,m.pendingCall=null,m.addCall(m.currentCall)}),b.on("error",function(){d.logDebug("call.on: error"),b===m.pendingCall&&(d.logInfo("Deleting pending call"),d.logTrace("session.pendingCall.peer",m.pendingCall.peer()),d.logTrace("session.pendingCall",m.pendingCall),m.pendingCall=null)}),this.pendingCall=b,d.logTrace("call.id",b.id()),d.logTrace("call object",b),b},this.getCall=function(a){return d.logDebug("ATT.rtc.Session: getCall"),d.logInfo("Getting call by id"),d.logTrace("callId",a),q[a]},this.getCalls=function(){return d.logDebug("ATT.rtc.Session: getCalls"),d.logInfo("Getting all calls"),d.logTrace("calls",Object.keys(q)),q},this.switchTo=function(a){if(d.logDebug("ATT.rtc.Session: switchTo"),d.logInfo("Switching to call by callId"),d.logTrace("callId",a),void 0===a)throw d.logError("You must pass a valid call id"),new Error("You must pass a valid call id");if(void 0===q[a])throw d.logError("Cannot find call with id "+a),new Error("Cannot find call with id "+a);j(this.currentCall,q[a]),d.logInfo("Setting current call"),this.currentCall=q[a],d.logTrace("currentCall.peer",this.currentCall.peer()),d.logTrace("currentCall",this.currentCall),"held"===this.currentCall.state()&&this.currentCall.autoresume&&(d.logInfo("resuming current call"),this.currentCall.resume(),this.currentCall.autoresume=!1)},this.terminateCalls=function(){d.logDebug("ATT.rtc.Session: terminateCalls"),d.logInfo("Terminating all the calls");var a;for(a in q)q.hasOwnProperty(a)&&(d.logTrace("callId",a),d.logTrace("call.peer",q[a].peer()),q[a].disconnect())},this.deleteCall=function(a){if(d.logDebug("ATT.rtc.Session: deleteCall"),d.logInfo("Deleting a call by callId"),d.logTrace("callId",a),void 0===q[a])throw d.logError("Call not found"),new Error("Call not found");d.logInfo("Call deleted with peer "+q[a].peer()),d.logTrace("Call deleted",q[a]),delete q[a],0===Object.keys(q).length&&(d.logInfo("All calls deleted from ATT.rtc.Session"),k.publish("all-calls-terminated"))},this.deletePendingCall=function(){d.logDebug("ATT.rtc.Session: deletePendingCall"),d.logInfo("Deleting pending call"),null!==this.pendingCall&&(d.logTrace("pendingCall.peer",this.pendingCall.peer()),d.logTrace("pendingCall",this.pendingCall),this.pendingCall=null)},this.deleteCurrentCall=function(){d.logDebug("ATT.rtc.Session: deleteCurrentCall"),d.logInfo("Deleting current call"),null!==this.currentCall&&(d.logTrace("currentCall.peer",this.currentCall.peer()),d.logTrace("currentCall",this.currentCall),this.deleteCall(this.currentCall.id()),this.currentCall=null)},this.associateToken=function(a){d.logDebug("ATT.rtc.Session: associateToken"),d.logInfo("Associating Token"),d.logTrace("associateToken.options",a),l.associateToken(a)},this.associateE911Id=function(b){d.logDebug("ATT.rtc.Session: associateE911Id"),d.logInfo("Associating E911 ID"),d.logTrace("associateE911Id.options",b),l.associateE911Id(ATT.utils.extend(b,{sessionId:this.getId(),token:this.getToken(),onSuccess:function(){d.logDebug("associateE911Id: onSuccess"),d.logInfo("Successfully associated E911 ID"),k.publish("address-updated")},onError:function(b){d.logDebug("associateE911Id: onError"),d.logError("Error during associating E911 ID"),d.logTrace(b),a("17001",b)}}))},this.getVersion=function(){return e.getVersion()},this.createEventData=function(){var a={};return a.timestamp=new Date,null!==o&&(a.sessionId=o),a}}var b=ATT["private"].factories,c=ATT["private"]["enum"],d=ATT.logManager.createLogger("session"),e=ATT["private"].config.app;if(d.logDebug("Loading att.rtc.session..."),void 0===ATT.rtc)throw new Error("Cannot export Session. ATT.rtc is undefined");ATT.rtc.Session=a}(),function(){"use strict";function a(){function a(a,b){Ha.push({event:a,data:b}),d.logInfo("Publishing event "+a),d.logTrace(a,b),Ba.publish(a,b)}function e(b,c){return b instanceof Error?void f("0000",b):(void 0!==c&&(c instanceof Error?b.AdditionalInformation=c.message:"string"==typeof c?b.AdditionalInformation=c:b.AdditionalInformation=JSON.stringify(c)),void a("error",b))}function f(a,b){d.logDebug("ATT.rtc.Phone: publishSDKError");var c=Da.getSDKError(a);void 0===c&&(c=Da.getSDKError("0001"),b=new Error("TODO: Error with error code "+a+" is not defined in the SDK error dictionary")),d.logInfo("Publishing SDK error "+a),e(c,b)}function g(b){if(d.logDebug("ATT.rtc.Phone: onError"),d.logTrace("data",b),b.error){if(404===b.error.HttpStatusCode)return d.logError("session:expired by ATT.rtc.Phone"),void a("session:expired",Ca.createEventData());if(502===b.error.HttpStatusCode||503===b.error.HttpStatusCode)return d.logError("gateway:unreachable by ATT.rtc.Phone"),void a("gateway:unreachable",Ca.createEventData())}d.logError("error event by ATT.rtc.Phone"),e(b)}function h(a){var b,c;return Ca.currentCall&&a.id()===Ca.currentCall.id()?(d.logInfo("Deleting current call"),Ca.deleteCurrentCall(),b=Ca.getCalls(),c=Object.keys(b),0===c.length?void Ea.stopUserMedia():(d.logTrace("Remaining background calls",c.length),d.logInfo("Setting background call as current call"),void Ca.switchTo(c[0]))):Ca.pendingCall&&a.id()===Ca.pendingCall.id()?(d.logInfo("Deleting pending call"),d.logTrace(Ca.pendingCall.peer(),Ca.pendingCall),Ca.deletePendingCall(),b=Ca.getCalls(),c=Object.keys(b),0===c.length?void Ea.stopUserMedia():(d.logInfo("Setting background call as current call"),void Ca.switchTo(c[0]))):(d.logInfo("Deleting background call"),d.logTrace(a.peer(),a),Ca.deleteCall(a.id()),b=Ca.getCalls(),c=Object.keys(b),0===c.length?void Ea.stopUserMedia():void 0)}function i(b,c){d.logDebug("call.on: canceled"),d.logInfo("call:canceled event by ATT.rtc.Phone"),d.logTrace("data",c),h(b),a("call:canceled",c)}function j(b,c){d.logDebug("call.on: rejected"),d.logInfo("call:rejected event by ATT.rtc.Phone"),d.logTrace("data",c),h(b),a("call:rejected",c)}function k(b){d.logDebug("call.on: muted"),d.logInfo("call:muted event by ATT.rtc.Phone"),a("call:muted",b)}function l(b){d.logDebug("call.on: unmuted"),d.logInfo("call:unmuted event by ATT.rtc.Phone"),a("call:unmuted",b)}function m(b){var c=Ca.currentCall;return c.off("held",m),"conference"===c.breed()?(d.logDebug("conference.on: held"),d.logInfo("conference:held event by ATT.rtc.Phone"),d.logTrace("data",b),void a("conference:held",b)):(d.logDebug("call.on: held"),d.logInfo("call:held event by ATT.rtc.Phone"),d.logTrace("data",b),void a("call:held",b))}function n(b){var c=Ca.currentCall;return Ea.showStream({localOrRemote:"local",stream:c.localStream()}),Ea.showStream({localOrRemote:"remote",stream:c.remoteStream()}),c.off("resumed",n),"conference"===c.breed()?(d.logDebug("conference.on: resumed"),d.logInfo("conference:resumed event by ATT.rtc.Phone"),d.logTrace("data",b),void a("conference:resumed",b)):(d.logDebug("call.on: resumed"),d.logInfo("call:resumed event by ATT.rtc.Phone"),d.logTrace("data",b),void a("call:resumed",b))}function o(b){var c=Ca.currentCall;d.logDebug("call.on: moved"),d.logInfo("call:moved event by ATT.rtc.Phone"),d.logTrace("data",b),c.off("moved",o),a("call:moved",b)}function p(b){d.logDebug("call.on: connected"),d.logInfo("call:connected event by ATT.rtc.Phone"),d.logTrace("data",b),a("call:connected",b)}function q(b){d.logDebug("call.on: modification-in-progress"),d.logInfo("call:modification-in-progress event from Att.rtc.Phone"),d.logTrace("data",b),a("call:modification-in-progress",b)}function r(b,c){d.logDebug("call.on: state-changed"),d.logInfo("call:state-changed event from Att.rtc.Phone"),d.logTrace("data",c),null!==Ca.currentCall&&Ca.currentCall.id()!==b.id()&&(c.background=!0),a("call:state-changed",c)}function s(b,c){return h(b),null!==Ca.currentCall&&Ca.currentCall.id()!==b.id()&&(c.background=!0),"conference"===b.breed()?(d.logDebug("conference.on: disconnected"),d.logInfo("conference:ended event by ATT.rtc.Phone"),d.logTrace("data",c),void a("conference:ended",c)):(d.logDebug("ATT.rtc.Phone: onCallDisconnected"),d.logInfo("call:disconnected event by ATT.rtc.Phone"),d.logTrace("data",c),void a("call:disconnected",c))}function t(b){a("call:transferring",b)}function u(b){a("call:transferred",b)}function v(b){d.logDebug("ATT.rtc.Phone: onSessionReady"),d.logTrace("data",b),a("session:ready",b)}function w(b){d.logDebug("ATT.rtc.Phone: onSessionDisconnected"),d.logTrace("data",b),a("session:disconnected",b),Ea.stopUserMedia(),Ca.off("ready",v),Ca.off("disconnected",w)}function x(b){a("dtmf:tone-sending",b)}function y(b){a("dtmf:tone-sent",b)}function z(a){return a=a.replace(/\s/g,""),a.indexOf("sip:")>-1||a.indexOf("tel:")>-1?!0:!1}function A(){return Ca}function B(){return Ha}function C(){return Ha[Ha.length-1]}function D(a){d.logDebug("ATT.rtc.Phone: cleanPhoneNumber");try{return d.logInfo("Attempting to clean the phone number "+a),ATT.phoneNumber.cleanPhoneNumber(a)}catch(b){d.logError("Error during cleanPhoneNumber"),d.logTrace(b),f(26001,b)}}function E(a){d.logDebug("ATT.rtc.Phone: formatNumber");try{return d.logInfo("Attempting to format the phone number "+a),ATT.phoneNumber.formatNumber(a)}catch(b){d.logError("Error during formatNumber"),d.logTrace(b),f(26002,b)}}function F(a){if(void 0===a)return null;var b,c={};try{a.indexOf(";")>-1&&(b=a.split(";"),b.forEach(function(b,d){if(0===d)a=b;else if(b.indexOf("=")>-1){var e=b.split("=");e.length>0&&(c[e[0]]=2===e.length?e[1]:"")}})),a.indexOf(":")>-1&&(b=a.split(":"),c.protocol=b.length>0?b[0]:"",a=b.length>=2?b[1]:"",c.port=b.length>=3?b[2]:""),b=a.split("@"),c.callerId=b.length>0?b[0]:"",c.domain=b.length>=2?b[1]:""}catch(f){d.logError("Error during getCallerInfo"),d.logTrace(f),e(f)}return c}function G(a,b){if(d.logDebug("ATT.rtc.Phone: on"),d.logInfo("Subscribing to phone event: "+a),"session:ready"!==a&&"session:disconnected"!==a&&"session:call-switched"!==a&&"session:expired"!==a&&"gateway:unreachable"!==a&&"notification"!==a&&"dialing"!==a&&"answering"!==a&&"call:incoming"!==a&&"call:connecting"!==a&&"call:connected"!==a&&"call:disconnecting"!==a&&"call:disconnected"!==a&&"call:muted"!==a&&"call:unmuted"!==a&&"call:held"!==a&&"call:resumed"!==a&&"call:canceled"!==a&&"call:rejected"!==a&&"call:moved"!==a&&"call:transferring"!==a&&"call:transferred"!==a&&"address-updated"!==a&&"call:ringback-provided"!==a&&"media:established"!==a&&"conference:invitation-received"!==a&&"conference:joining"!==a&&"conference:invitation-sending"!==a&&"conference:invitation-rejected"!==a&&"conference:connecting"!==a&&"conference:invitation-sent"!==a&&"conference:invitation-accepted"!==a&&"conference:participant-removed"!==a&&"conference:held"!==a&&"conference:resumed"!==a&&"conference:disconnecting"!==a&&"conference:ended"!==a&&"conference:canceled"!==a&&"conference:connected"!==a&&"warning"!==a&&"error"!==a&&"call:modification-in-progress"!==a&&"call:media-modification"!==a&&"call:state-changed"!==a&&"dtmf:tone-sending"!==a&&"dtmf:tone-sent"!==a)throw new Error("Event "+a+" not defined");Ba.unsubscribe(a,b),Ba.subscribe(a,b,this)}function H(){d.logDebug("ATT.rtc.Phone: getCalls");var a,b,c,e,f=Ca.getCalls(),g=[];d.logInfo("Getting list of calls...");for(a in f)if(f.hasOwnProperty(a)){if(d.logTrace("call id",a),b={index:f[a].index(),state:f[a].state(),breed:f[a].breed(),type:f[a].type()},"conference"===f[a].breed()){b.participants=[],e=f[a].participants(),d.logTrace("Participants",Object.keys(e).length);for(c in e)e.hasOwnProperty(c)&&(d.logTrace("participant",c),b.participants.push(e[c]))}else b.peer=f[a].peer();g.push(b)}return d.logTrace("Call List",g),g}function I(a){if(d.logDebug("ATT.rtc.Phone: login"),d.logTrace("options",a),null!==Ca.getId())return void d.logInfo("User is already logged in!");if(void 0===a)return void f("2002");if(void 0===a.token)return void f("2001");try{Ca.off("ready",v),Ca.on("ready",v),d.logInfo("logging in..."),Ca.connect(a)}catch(b){d.logError("Error during login"),d.logTrace(b),f("2004",b)}}function J(a){if(d.logDebug("ATT.rtc: associateAccessToken"),d.logInfo("Associating access token  Domain"),void 0===a||0===Object.keys(a).length)throw new Error("No options provided");if(void 0===a.userId)throw new Error("No userId provided");if(void 0===a.token)throw new Error("No token provided");if(void 0===a.success)throw new Error("No success callback provided");if(void 0===a.error)throw new Error("No error callback provided");Ca.associateToken(a)}function K(b){if(d.logDebug("ATT.rtc.Phone: associateE911Id"),void 0===b)return void f("17000");if(void 0===Ca||null===Ca.getId())return void f("17002");if(void 0===b.e911Id||null===b.e911Id)return void f("17000");try{Ca.on("address-updated",function(){d.logDebug("session.on: address-updated"),d.logInfo("address-updated event by ATT.rtc.Phone"),a("address-updated")}),d.logTrace(Ca.getId(),Ca),d.logTrace("E911 Id",Ca.e911Id),d.logInfo("Associating E911 Id..."),Ca.associateE911Id(b)}catch(c){d.logInfo("Error during associateE911Id"),d.logTrace(c),f("17001",c)}}function L(){function a(){d.logDebug("session.on: all-calls-terminated"),d.logInfo("All calls were terminated successfully"),Ca.off("all-calls-terminated",a),d.logInfo("logging out..."),Ca.disconnect()}if(d.logDebug("ATT.rtc.Phone: logout"),Ca.on("error",w),null===Ca||null===Ca.getId())return void f("3001");try{d.logInfo("logging out..."),Ca.off("disconnected",w),Ca.on("disconnected",w),null!==Ca.pendingCall&&(d.logInfo("Pending call exist. Deleting pending call..."),d.logTrace(Ca.pendingCall.peer(),Ca.pendingCall),Ca.deletePendingCall()),Object.keys(Ca.getCalls()).length>0?(d.logInfo("Active calls exist. Attempting to disconnect active calls..."),Ca.on("all-calls-terminated",a),Ca.terminateCalls()):(d.logInfo("logging out..."),Ca.disconnect())}catch(b){d.logError("Error during logout"),d.logTrace(b),f("3000",b)}}function M(){d.logDebug("ATT.rtc.Phone: rejectCallOnMediaError"),d.logInfo("Rejecting incoming call"),null!==Ca.pendingCall&&void 0!==Ca.pendingCall.id()&&W()}function N(b,c,e){d.logDebug("ATT.rtc.Phone: connectWithMediaStream"),d.logTrace("connectOpts",b),c.on("stream-added",function(a){d.logDebug("call.on: stream-added"),Ea.showStream({stream:a.stream,localOrRemote:"remote"})}),void 0===b.mediaType&&(b.mediaType=c.mediaType()),d.logInfo("Attempting to get user media"),Ea.getUserMedia(ATT.utils.extend({onUserMedia:function(a){try{d.logDebug("getUserMedia: onUserMedia"),d.logInfo("Got user media"),d.logTrace("media",a),c.addStream(a.localStream),d.logInfo("Connecting..."),c.connect()}catch(b){d.logError("Error during onUserMedia"),d.logTrace(b),void 0!==e&&"function"==typeof e&&e(b)}},onMediaEstablished:function(){return d.logDebug("getUserMedia: onMediaEstablished"),d.logInfo("Remote media established"),null!==Ca.pendingCall&&"connecting"===Ca.pendingCall.state()&&"call"===Ca.pendingCall.breed()?(d.logInfo("Got early media"),d.logInfo("call:ringback-provided event by ATT.rtc.Phone"),void a("call:ringback-provided",Ca.pendingCall.createEventData())):void(null!==Ca.currentCall&&"connected"===Ca.currentCall.state()&&(d.logInfo("media:established event by ATT.rtc.Phone"),a("media:established",Ca.currentCall.createEventData())))},onUserMediaError:function(a){d.logDebug("getUserMedia: onUserMediaError"),d.logTrace(a),M(),f("13005",a)}},b))}function O(b){var e;if(null===Ca.getId())return void f("4004");if(void 0===b)return void f("4009");if(void 0===b.localMedia||"VIDEO"!==b.localMedia.tagName&&"AUDIO"!==b.localMedia.tagName)return void f("4006");if(Fa=b.localMedia,Ga=b.remoteMedia,void 0===b.remoteMedia||"VIDEO"!==b.remoteMedia.tagName&&"AUDIO"!==b.remoteMedia.tagName)return void f("4007");if(!("string"==typeof b.destination&&0<b.destination.length))return void f("4008");if(void 0!==b.mediaType&&"audio"!==b.mediaType&&"video"!==b.mediaType)return void f("4002");if(z(b.destination))return void f("4000");if(Ca.pendingCall)return void f("4010");if(b.destination.split("@").length>2)return void f("4001");try{a("dialing",{to:b.destination,mediaType:b.mediaType,timestamp:new Date}),d.logInfo("Creating new call..."),e=Ca.createCall({peer:b.destination,breed:"call",type:c.CALL_TYPE.OUTGOING,mediaType:b.mediaType,localMedia:b.localMedia,remoteMedia:b.remoteMedia}),d.logTrace(e.peer(),e),e.on("connecting",function(b){d.logDebug("call.on: connecting"),d.logInfo("call:connecting event by ATT.rtc.Phone"),d.logTrace("data",b),a("call:connecting",b)}),e.on("rejected",j.bind(null,e)),e.on("connected",p),e.on("held",m),e.on("resumed",n),e.on("moved",o),e.on("disconnected",s.bind(null,e)),e.on("modification-in-progress",q),e.on("state-changed",r.bind(null,e)),e.on("notification",function(b){d.logDebug("call.on: notification"),d.logInfo("notification event by ATT.rtc.Phone"),a("notification",b),Ca.deletePendingCall(),Ea.stopUserMedia()}),e.on("error",g),e.on("media-modification",function(b){d.logDebug("call.on: media-modification"),d.logInfo("call:media-modification event by ATT.rtc.Phone"),d.logTrace("data",b),a("call:media-modification",b)}),d.logInfo("Dialing..."),N(b,e,function(a){d.logError("Error during connectWthMediaStream"),d.logTrace(a),f("4003",a)})}catch(h){d.logError("Error during dial"),d.logTrace(h),f("4003",h)}}function P(a){return d.logDebug("ATT.rtc.Phone: dial"),d.logInfo("Dialing a call.."),d.logTrace("options",a),null!==Ca.currentCall?void f("4011"):void O(a)}function Q(a){function b(){d.logDebug("ATT.rtc.Phone: dialSecondCall"),c.off("held",b),d.logInfo("Dialing second call..."),O(a)}d.logDebug("ATT.rtc.Phone: addCall"),d.logTrace("options",a);var c;if(2<=H().length)return void f("27010");if(void 0===a)return void f("27001");if(void 0===a.localMedia||"VIDEO"!==a.localMedia.tagName&&"AUDIO"!==a.localMedia.tagName)return void f("27002");if(void 0===a.remoteMedia||"VIDEO"!==a.remoteMedia.tagName&&"AUDIO"!==a.remoteMedia.tagName)return void f("27003");if(void 0===a.destination)return void f("27004");if(z(a.destination))return void f("27005");if(a.destination.split("@").length>2)return void f("27006");if(void 0!==a.mediaType&&"audio"!==a.mediaType&&"video"!==a.mediaType)return void f("27007");if(null===Ca.getId())return void f("27008");if(null===Ca.currentCall)return void f("27009");try{if(c=Ca.currentCall,d.logInfo("Putting existing call on hold"),"held"!==c.state())return c.on("held",b),c.hold(),void(c.autoresume=!0);b()}catch(e){d.logError("Error during hold current call"),d.logTrace(e),f("27000",e)}}function R(b,c){d.logDebug("ATT.rtc.Phone: answerCall"),d.logTrace("options",c),a("answering",{from:b.peer(),mediaType:b.mediaType(),codec:b.codec(),timestamp:new Date}),b.on("connecting",function(b){d.logDebug("call.on: connecting"),d.logInfo("call:connecting event by ATT.rtc.Phone"),d.logTrace("data",b),a("call:connecting",b)}),b.on("connected",p),b.on("held",m),b.on("resumed",n),b.on("moved",o),b.on("disconnected",s.bind(null,b)),b.on("notification",function(b){d.logDebug("call.on: notification"),d.logInfo("call:connecting event by ATT.rtc.Phone"),d.logTrace("data",b),a("notification",b),Ca.deleteCurrentCall(),Ea.stopUserMedia()}),b.on("modification-in-progress",q),b.on("media-modification",function(b){d.logDebug("call.on: media-modification"),d.logInfo("call:media-modification event by ATT.rtc.Phone"),d.logTrace("data",b),a("call:media-modification",b)}),b.on("state-changed",r.bind(null,b)),b.on("error",g),d.logInfo("Answering..."),N(c,b)}function S(a){function b(){d.logDebug("ATT.rtc.Phone: answerSecondCall"),d.logInfo("Answering second call"),c="end"===a.action?"disconnected":"held",g.off(c,b),R(e,a)}d.logDebug("ATT.rtc.Phone: answer"),
d.logTrace("options",a);var c,e,g;if(void 0===a)return void f("5004");if(void 0===a.localMedia||"VIDEO"!==a.localMedia.tagName&&"AUDIO"!==a.localMedia.tagName)return void f("5001");if(void 0===a.remoteMedia||"VIDEO"!==a.remoteMedia.tagName&&"AUDIO"!==a.remoteMedia.tagName)return void f("5001");if(Fa=a.localMedia,Ga=a.remoteMedia,null===Ca.getId())return void f("5003");if(e=Ca.pendingCall,null===e)return void f("5000");if(void 0!==a.action&&"hold"!==a.action&&"end"!==a.action)return void f("5005");try{if(g=Ca.currentCall,null!==g){if(d.logTrace(g.peer(),g),d.logInfo("There is an existing call"),void 0===a.action)return void f("5005");if("hold"===a.action){if("held"!==g.state())return d.logInfo("Putting the current call on hold"),g.on("held",b),g.hold(),void(g.autoresume=!0);b(e,a,!0)}return void("end"===a.action&&(d.logInfo("Ending the current call"),g.on("disconnected",b.bind(null,g)),g.disconnect()))}void 0!==a.action&&d.logWarning("There is no current call. Action `"+a.action+"` will be ignored"),R(e,a)}catch(h){d.logError("Error during answer"),d.logTrace(h),f("5002",h)}}function T(){d.logDebug("ATT.rtc.Phone: hangup");var b;if(b=Ca.currentCall,null===b||null===b.id())return void f("6000");try{d.logTrace(b.peer(),b),b.on("disconnecting",function(b){d.logDebug("call.on: disconnecting"),d.logInfo("call:disconnecting event by ATT.rtc.Phone"),d.logTrace("data",b),a("call:disconnecting",b)}),d.logInfo("Hanging up..."),b.disconnect()}catch(c){d.logError("Error during hangup"),d.logTrace(c),f("6001",c)}}function U(){d.logDebug("Att.rtc.Phone: cancel");var a=Ca.pendingCall;if(null===a)return void f("11000");try{d.logTrace(a.peer(),a),a.off("canceled",i),a.on("canceled",i.bind(null,a)),d.logInfo("Canceling..."),a.disconnect()}catch(b){d.logError("Error during cancel"),d.logTrace(b),f("11001",b)}}function V(a){d.logDebug("ATT.rtc.Phone: setupStartConferenceEvents"),d.logTrace("options",a);var b;a.breed="conference",a.type=c.CALL_TYPE.OUTGOING,b=Ca.createCall(a),b.on("held",m),b.on("resumed",n),b.on("error",g),b.on("connected",function(a){d.logDebug("conference.on: connected"),d.logInfo("conference:connected event by ATT.rtc.Phone"),d.logTrace("data",a),Ba.publish("conference:connected",a)}),b.on("response-pending",function(a){d.logDebug("conference.on: response-pending"),d.logInfo("conference:invitation-sent event by ATT.rtc.Phone"),d.logTrace("data",a),Ba.publish("conference:invitation-sent",a)}),b.on("invite-accepted",function(a){d.logDebug("conference.on: invite-accepted"),d.logInfo("conference:invitation-accepted event by ATT.rtc.Phone"),d.logTrace("data",a),Ba.publish("conference:invitation-accepted",a)}),b.on("rejected",function(a){d.logDebug("conference.on: rejected"),d.logInfo("conference:invitation-rejected event by ATT.rtc.Phone"),d.logTrace("data",a),Ba.publish("conference:invitation-rejected",a)}),b.on("notification",function(a){d.logDebug("conference.on: notification"),d.logInfo("notification event by ATT.rtc.Phone"),d.logTrace("data",a),Ba.publish("notification",a)}),b.on("participant-removed",function(a){d.logDebug("conference.on: participant-removed"),d.logInfo("conference:participant-removed event by ATT.rtc.Phone"),d.logTrace("data",a),Ba.publish("conference:participant-removed",a)}),b.on("state-changed",r.bind(null,b)),b.on("disconnected",s.bind(null,b)),d.logInfo("Starting conference..."),N(a,b)}function W(){d.logDebug("Att.rtc.Phone: reject");var a=Ca.pendingCall;if(null===a||null===a.id())return void f("12000");try{a.off("rejected",j),a.on("rejected",j.bind(null,a)),d.logInfo("Rejecting..."),a.reject()}catch(b){d.logError("Error during reject"),d.logTrace(b),f("12001",b)}}function X(a){function b(e){d.logDebug("ATT.rtc.Phone: startSecondConference"),Ba.publish("conference:held",e),c.off("held",b),d.logInfo("Starting second conference..."),V(a)}d.logDebug("ATT.rtc.Phone: startConference"),d.logTrace("options",a);var c;if(2<=this.getCalls().length)return void f("27010");if(void 0===a||0===Object.keys(a).length)return d.logError("No options provided"),void f("18000");if(void 0===Ca||null===Ca.getId())return d.logError("Cannot start session. user is not logged in"),void f("18007");if(void 0===a.localMedia||"VIDEO"!==a.localMedia.tagName&&"AUDIO"!==a.localMedia.tagName)return d.logError("localMedia not provided"),void f("18001");if(void 0===a.remoteMedia||"VIDEO"!==a.remoteMedia.tagName&&"AUDIO"!==a.remoteMedia.tagName)return d.logError("remoteMedia not provided"),void f("18002");if(void 0===a.mediaType||"audio"!==a.mediaType&&"video"!==a.mediaType)return d.logError("mediaType not provided"),void f("18003");try{if(c=Ca.currentCall,null!==c)return d.logTrace(c.peer(),c),d.logInfo("There is an existing conference"),"held"===c.state()||"hold"===c.state()?void b():(d.logInfo("Putting the current conference on hold"),c.on("held",b),c.hold(),void(c.autoresume=!0));V(a)}catch(e){d.logError("Error during start conference"),d.logTrace(e),f("18005",e)}}function Y(a,b){d.logDebug("ATT.rtc.Phone: setupJoinConferenceEvents"),d.logTrace("options",b),Ba.publish("conference:joining",{from:a.peer(),mediaType:a.mediaType(),codec:a.codec(),timestamp:new Date}),a.on("held",m),a.on("state-changed",r.bind(null,a)),a.on("disconnected",s.bind(null,a)),a.on("error",g),a.on("connecting",function(a){d.logDebug("conference.on: connecting"),d.logInfo("conference:connecting event by ATT.rtc.Phone"),d.logTrace("data",a),Ba.publish("conference:connecting",a)}),a.on("connected",function(a){d.logDebug("conference.on: connected"),d.logInfo("conference:connected event by ATT.rtc.Phone"),d.logTrace("data",a),Ba.publish("conference:connected",a)}),a.on("notification",function(a){d.logDebug("conference.on: notification"),d.logInfo("notification event by ATT.rtc.Phone"),d.logTrace("data",a),Ba.publish("notification",a),Ca.deleteCurrentCall(),Ea.stopUserMedia()}),d.logInfo("Joining conference..."),N(b,a,function(a){d.logError("Error during connectWithMediaStream"),d.logTrace(a),Ba.publish("error",{error:ATT.errorDictionary.getSDKError("20000"),data:a})})}function Z(){if(d.logDebug("ATT.rtc.Phone: rejectConference"),null===Ca||null===Ca.getId())return void f("22001");if(null===Ca.pendingCall)return void f("22002");try{var b=Ca.pendingCall;d.logTrace(b.peer(),b),b.on("rejected",function(b){d.logDebug("conference.on: rejected"),d.logInfo("conference:invitation-rejected event by ATT.rtc.Phone"),d.logTrace("data",b),a("conference:invitation-rejected",b),Ca.deletePendingCall(),Ea.stopUserMedia()}),d.logInfo("Rejecting conference invite..."),b.reject()}catch(c){d.logError("Error during reject conference"),d.logTrace(c),f("22000",c)}}function $(a){function b(){d.logDebug("ATT.rtc.Phone: joindSecondConference"),d.logInfo("Joining second conference"),c="held","end"===a.action&&(c="disconnected"),h.off(c,b),Y(g,a)}d.logDebug("ATT.rtc.Phone: joinConference"),d.logTrace("options",a);var c,e,g,h;if(void 0===a)return void f("20004");if(void 0===a.localMedia||"VIDEO"!==a.localMedia.tagName&&"AUDIO"!==a.localMedia.tagName)return void f("20003");if(void 0===a.remoteMedia||"VIDEO"!==a.remoteMedia.tagName&&"AUDIO"!==a.remoteMedia.tagName)return void f("20003");if(Fa=a.localMedia,Ga=a.remoteMedia,null===Ca||null===Ca.getId())return void f("20001");if(null===Ca.pendingCall)return void f("20002");if(g=Ca.pendingCall,void 0!==a.action&&"hold"!==a.action&&"end"!==a.action)return void f("20005");try{if(h=Ca.currentCall,null!==h){if(d.logTrace(h.peer(),h),d.logInfo("There is an existing conference"),void 0===a.action)return void f("20005");if("hold"===a.action)return"held"===h.state()||"hold"===h.state()?void b():(d.logInfo("Putting the current conference on hold"),h.on("held",b),h.hold(),void(h.autoresume=!0));if("end"===a.action){if(d.logInfo("Ending the current conference"),e=h.breed(),h.on("disconnected",b),"conference"===e)return void h.disconnectConference();h.disconnect()}return}void 0!==a.action&&d.logWarning("There is no current call. Action `"+a.action+"` will be ignored"),Y(g,a),d.logTrace(g.peer(),g)}catch(i){d.logError("Error during joinConference"),d.logTrace(i),f("20000",i)}}function _(b){d.logDebug("ATT.rtc.Phone: addParticipant"),d.logTrace("participant",b);var c,e,g;if(void 0===b)return d.logError("Parameter missing"),void f("24000");if("string"!=typeof b||""===b||null===b)return void f("24001");if(null===Ca.getId())return void f("24002");if(c=Ca.currentCall,d.logTrace(c.peer(),c),"conference"!==c.breed())return d.logError("Conference not initiated "),void f("24003");if(d.logInfo("Validating participant to add"),z(b))return void f("24006");if(b.split("@").length>2)return void f("24007");d.logTrace("participant",b);try{if(d.logInfo("Adding Participant..."),d.logInfo("Getting list of current participants"),g=c.participants(),d.logTrace("currentParticipants",g),0<Object.keys(g).length)for(e in g)if(g.hasOwnProperty(e)&&e===b)return void f("24005",{invitee:e,timestamp:new Date});a("conference:invitation-sending",{invitee:b,timestamp:new Date}),c.addParticipant(b)}catch(h){d.logInfo("Error during addParticipant"),d.logTrace(h),f("24004",h)}}function aa(){d.logDebug("ATT.rtc.Phone: getParticipants");var a,b;if(null===Ca.getId())return void f("21002");if(a=Ca.currentCall,null===a||"conference"!==a.breed())return void f("21000");try{return d.logTrace(a.peer(),a),d.logInfo("Getting participants..."),b=a.participants(),d.logTrace("participants",b),b}catch(c){d.logError("Error during getParticipants"),d.logTrace(c),f("21001",c)}}function ba(a){d.logDebug("ATT.rtc.Phone: removeParticipant");var b;if(null===Ca.getId())return void f("25000");if(b=Ca.currentCall,null===b||"conference"!==b.breed())return void f("25001");if(void 0===a)return void f("25002");try{d.logTrace(b.peer(),b),d.logInfo("Removing participant"),b.removeParticipant(a)}catch(c){d.logError("Error during removeParticipant"),d.logTrace(c),f("25003",c)}}function ca(){d.logDebug("ATT.rtc.Phone: endConference");var b;if(null===Ca.getId())return void f("23001");if(b=Ca.currentCall,null===b||"conference"!==b.breed())return void f("23002");try{d.logTrace(b.peer(),b),b.on("disconnecting",function(b){d.logDebug("conference.on: disconnecting"),d.logInfo("conference:disconnecting event by ATT.rtc.Phone"),d.logTrace("data",b),a("conference:disconnecting",b)}),d.logInfo("Disconnecting conference"),b.disconnectConference()}catch(c){d.logError("Error during endConference"),d.logTrace(c),f("23000",c)}}function da(){d.logDebug("ATT.rtc.Phone: mute");var b=Ca.currentCall;if(null===b||null===b.id)return void f("9000");d.logTrace(b.peer(),b);try{if(b.off("muted",k),b.on("muted",k),b.muted())return d.logWarning("warning event by ATT.rtc.Phone"),void a("warning",{message:"Cannot mute call that is already muted"});d.logInfo("Muting..."),b.mute()}catch(c){d.logError("Error during mute"),d.logTrace(c),f("9001",c)}}function ea(){d.logDebug("ATT.rtc.Phone: unmute");var b=Ca.currentCall;if(null===b||null===b.id)return void f("10000");try{if(d.logTrace(b.peer(),b),b.off("unmuted",l),b.on("unmuted",l),!b.muted())return d.logWarning("warning event by ATT.rtc.Phone"),void a("warning",{message:"Cannot umute call that is not muted"});d.logInfo("Unmuting..."),b.unmute()}catch(c){d.logError("Error during unmute"),d.logTrace(c),f("10001",c)}}function fa(){d.logDebug("ATT.rtc.Phone: hold");var a;if(a=Ca.currentCall,null===a||null===a.id())return void f("7000");try{d.logTrace(a.peer(),a),a.validateOperation("hold"),d.logInfo("Holding..."),a.hold()}catch(b){if(d.logError("Error during hold"),d.logTrace(b),"Error"===b.name)return void f("7002",b);f("7001",b)}}function ga(){d.logDebug("ATT.rtc.Phone: resume");var a;if(a=Ca.currentCall,null===a||null===a.id())return void f("8000");try{d.logTrace(a.peer(),a),a.validateOperation("resume"),d.logInfo("Resuming..."),a.resume()}catch(b){if(d.logError("Error during resume"),d.logTrace(b),"Error"===b.name)return void f("8002",b);f("8001",b)}}function ha(){d.logDebug("ATT.rtc.Phone: move");var a;if(null===Ca||null===Ca.getId())return void f("28000");if(a=Ca.currentCall,null===a||null===a.id())return void f("28001");if("conference"===a.breed())return void f("28004");try{d.logTrace(a.peer(),a),a.validateOperation("move"),d.logInfo("Moving..."),a.move()}catch(b){if(d.logError("Error during move"),d.logTrace(b),"Error"===b.name)return void f("28002",b);f("28003",b)}}function ia(){function a(){d.logDebug("ATT.rtc.Phone: switchToCall");var c,e,f;b.off("held",a),e=Ca.getCalls();for(c in e)if(e.hasOwnProperty(c)&&c!==b.id()){f=c;break}d.logInfo("Switching calls..."),d.logTrace("Switch to call id",f),Ca.switchTo(f)}d.logDebug("ATT.rtc.Phone: switchCall");var b=Ca.currentCall;if(null===Ca||null===Ca.getId())return void f(30001);if(null===Ca.currentCall||null===Ca.currentCall.id())return void f(30002);if(2>Object.keys(Ca.getCalls()).length)return void f(30003);try{if(d.logTrace(b.peer(),b),"held"!==b.state())return d.logInfo("Putting current call on hold"),b.on("held",a),b.hold(),void(b.autoresume=!0);a()}catch(c){d.logError("Error during switch"),d.logTrace(c),f(3e4,c)}}function ja(){d.logDebug("ATT.rtc.Phone: transfer");var a,b,c,e;if(null===Ca||null===Ca.getId())return void f("29001");if(a=Ca.currentCall,null===a||null===a.id())return void f("29002");if("conference"===a.breed())return void f("29005");if(2>Object.keys(Ca.getCalls()).length)return void f("29004");try{d.logTrace("currentCall",a.peer()),d.logTrace("currentCall id",a.id()),b=Ca.getCalls();for(c in b)if(b.hasOwnProperty(c)&&c!==Ca.currentCall.id()){e=Ca.getCall(c);break}if(d.logTrace("backgroundCall",e.peer()),d.logTrace("backgroundCall id",e.peer()),"conference"===e.breed())return void f("29005");e.validateOperation("transfer"),e.off("transferred",u),e.on("transferred",u),e.off("transferring",t),e.on("transferring",t),d.logInfo("Transferring call with peer "+e.peer()+" to "+a.peer()),e.transfer({targetCallId:a.id()})}catch(g){if(d.logError("Error during transfer call"),d.logTrace(g),"Error"===g.name)return void f("29003",g);f("29000",g)}}function ka(){d.logInfo("Starting downgrade..."),d.logDebug("Phone: downgrade");var a=Ca.currentCall;if(null===a)return void f("33000");if("audio"===a.mediaType())return void f("33002");if("conference"===a.breed())return void f("33003");try{a.validateOperation("downgrade"),d.logInfo("Trying to get the audio media stream"),Ea.getUserMedia({localMedia:Fa,remoteMedia:Ga,mediaType:"audio",onUserMedia:function(b){d.logInfo("Successfully got user media."),a.removeStream(a.localStream()),a.addStream(b.localStream),Ea.showStream({localOrRemote:"local",stream:b.localStream}),a.connect()},onMediaEstablished:function(){d.logDebug("User Media established.")},onUserMediaError:function(a){d.logError("Error during downgrade"),d.logTrace("error",a),f("33004",a)}})}catch(b){if(d.logError("Error during downgrade"),d.logTrace(b),"Error"===b.name)return void f("33001",b);f("33005",b)}}function la(){var a;if(a=Ca.currentCall,null===a)return void f("34000");if("video"===a.mediaType())return void f("34002");if("conference"===a.breed())return void f("34003");try{a.validateOperation("upgrade"),d.logInfo("Trying to get the video media stream"),Ea.getUserMedia({localMedia:Fa,remoteMedia:Ga,mediaType:"video",onUserMedia:function(b){d.logInfo("Entered onUserMedia"),a.removeStream(a.localStream()),a.addStream(b.localStream),Ea.showStream({localOrRemote:"local",stream:b.localStream}),a.connect()},onMediaEstablished:function(){d.logInfo("OnMediaEstablished: Success")},onUserMediaError:function(a){d.logDebug("Error during upgrade"),d.logTrace(a),f("34004",a)}})}catch(b){if(d.logError("Error during upgrade"),d.logTrace(b),"Error"===b.name)return void f("34001",b);f("34005",b)}}function ma(){d.logDebug("Phone: acceptModification");var a=Ca.currentCall;if(null===a||null===a.id())return void f("31000");if(void 0===a.modifications()||null===a.modifications())return void f("31001");try{a.validateOperation("acceptMod"),d.logInfo("Trying to get the "+a.modifications().mediaType+" media stream"),Ea.getUserMedia({localMedia:Fa,remoteMedia:Ga,mediaType:a.modifications().mediaType,onUserMedia:function(b){d.logInfo("Successfully got user media."),a.removeStream(a.localStream()),a.addStream(b.localStream),Ea.showStream({localOrRemote:"local",stream:b.localStream}),a.connect()},onMediaEstablished:function(){d.logInfo("User media established.")},onUserMediaError:function(a){d.logError("Failed to get user media."),d.logTrace("error",a),f("31004")}})}catch(b){if(d.logInfo("Error during acceptModification"),d.logTrace("error",b),"Error"===b.name)return void f("31002",b);f("31003",b)}}function na(){d.logDebug("Phone: rejectModification");var a;if(a=Ca.currentCall,null===a||null===a.id())return void f("32000");if(void 0===a.modifications()||null===a.modifications())return void f("32001");try{a.validateOperation("rejectMod"),d.logInfo("Rejecting media modification..."),a.connect()}catch(b){if(d.logInfo("Error during rejectModification"),d.logTrace("error",b),"Error"===b.name)return void f("32002",b);f("32003",b)}}function oa(){d.logDebug("ATT.rtc.Phone: getMediaType"),d.logInfo("Getting current call media type...");var a=Ca.currentCall;return d.logTrace(a.peer(),a),d.logTrace("MediaType",a.mediaType()),a?a.mediaType():null}function pa(){d.logDebug("ATT.rtc.Phone: isCallInProgress"),d.logInfo("Checking if current call exists...");var a=Ca.currentCall;return null!==a?(d.logTrace("Call in progress",!0),d.logTrace(a.peer(),a),!0):(d.logTrace("Call in not in progress",!1),!1)}function qa(a){if(d.logDebug("ATT.rtc.Phone: sendDTMFTone"),d.logInfo("Sending DTMF tone..."),d.logTrace("options",a),null===Ca.getId())return void f("35000");var b=Ca.currentCall;if(null===b||null===b.id())return void f("35001");if(void 0===a||void 0===a.input)return void f("35002");if("held"===b.state()||b.held())return void f("35003");b.off("tone-sending",x),b.off("tone-sent",y),b.on("tone-sending",x),b.on("tone-sent",y);try{d.logInfo("sending the dial tone"),b.sendDTMFTone(a)}catch(c){d.logInfo("Error during sendDTMDTone"),d.logTrace("error",c),f(35004,c)}}function ra(){d.logDebug("ATT.rtc.phone: getIceServers"),d.logInfo("getting current iceServer value of peerConnection");var a=Ca.getPCConfiguration().iceServers;return d.logTrace("iceServers",a),a}function sa(a){d.logDebug("ATT.rtc.phone: setIceServers"),d.logInfo("sets the new iceServers value to peerConnection"),d.logTrace("iceServers",a);try{Ca.setPCConfiguration({iceServers:a})}catch(b){f("40000",b)}}function ta(){d.logDebug("ATT.rtc.phone: resetIceServers"),d.logInfo("Reset iceServers value of peerConnection to default"),Ca.resetPCConfiguration("iceServers")}function ua(){d.logDebug("ATT.rtc.phone: getIceTransport"),d.logInfo("getting current iceTransport value of peerConnection");var a=Ca.getPCConfiguration().iceTransports;return d.logTrace("iceTransports",a),a}function va(a){d.logDebug("ATT.rtc.phone: setIceTransport"),d.logInfo("sets the new iceTransport value to peerConnection"),d.logTrace("iceTransports",a);try{Ca.setPCConfiguration({iceTransports:a})}catch(b){f("50000",b)}}function wa(){d.logDebug("ATT.rtc.phone: resetIceTransport"),d.logInfo("Reset iceTransport value of peerConnection to default"),Ca.resetPCConfiguration("iceTransports")}function xa(){d.logDebug("ATT.rtc.phone: getIpv6"),d.logInfo("getting current ipv6 value of peerConnection");var a=Ca.getPCConfiguration().ipv6;return d.logTrace("ipv6",a),a}function ya(a){d.logDebug("ATT.rtc.phone: setIpv6"),d.logInfo("sets the new ipv6 value to peerConnection"),d.logTrace("ipv6",a);try{Ca.setPCConfiguration({ipv6:a})}catch(b){f("60000",b)}}function za(){d.logDebug("ATT.rtc.phone: resetIpv6"),d.logInfo("Reset ipv6 value of peerConnection to default"),Ca.resetPCConfiguration("ipv6")}function Aa(){return Ca.getVersion()}var Ba=b.createEventEmitter(),Ca=new ATT.rtc.Session,Da=ATT.errorDictionary,Ea=ATT.UserMediaService,Fa=null,Ga=null,Ha=[];d.logDebug("ATT.rtc.Phone: Constructor"),d.logInfo("Creating a new instance of Phone"),Ca.on("call:incoming",function(b){function c(e){null!==Ca.pendingCall&&e.id()===Ca.pendingCall.id()&&(a("call:canceled",b),e.off("canceled",c),d.logInfo("Deleting canceled pending call"),d.logTrace(e.peer(),e),Ca.deletePendingCall(),Ea.stopUserMedia())}function e(c){null!==Ca.pendingCall&&c.id()===Ca.pendingCall.id()&&(a("call:disconnected",b),c.off("disconnected",e),d.logInfo("Deleting disconnected pending call"),d.logTrace(c.peer(),c),Ca.deletePendingCall(),Ea.stopUserMedia())}d.logDebug("session.on: call:incoming"),d.logInfo("call:incoming event  by ATT.rtc.Phone"),d.logTrace("data",b),a("call:incoming",b),Ca.pendingCall&&(d.logTrace(Ca.pendingCall.peer(),Ca.pendingCall),Ca.pendingCall.on("canceled",c.bind(null,Ca.pendingCall)),Ca.pendingCall.on("disconnected",e.bind(null,Ca.pendingCall)))}),Ca.on("conference-invite",function(b){function c(e){null!==Ca.pendingCall&&e.id()===Ca.pendingCall.id()&&(a("conference:canceled",b),e.off("canceled",c),d.logInfo("Deleting canceled pending call"),d.logTrace(e.peer(),e),Ca.deletePendingCall(),Ea.stopUserMedia())}function e(c){null!==Ca.pendingCall&&c.id()===Ca.pendingCall.id()&&(a("conference:ended",b),c.off("disconnected",e),d.logInfo("Deleting disconnected pending call"),d.logTrace(c.peer(),c),Ca.deletePendingCall(),Ea.stopUserMedia())}d.logDebug("session.on: conference-invite"),d.logInfo("conference:invitation-received event by ATT.rtc.Phone"),d.logTrace("data",b),a("conference:invitation-received",b),Ca.pendingCall&&(d.logTrace(Ca.pendingCall.peer(),Ca.pendingCall),Ca.pendingCall.on("canceled",c.bind(null,Ca.pendingCall)),Ca.pendingCall.on("disconnected",e.bind(null,Ca.pendingCall)))}),Ca.on("call:switched",function(b){d.logDebug("session.on: call:switched"),d.logInfo("session:call-switched event by ATT.rtc.Phone"),d.logTrace("data",b),a("session:call-switched",b)}),Ca.on("notification",function(b){d.logDebug("session.on: notification"),d.logInfo("notification event by ATT.rtc.Phone"),d.logTrace("data",b),a("notification",b)}),Ca.on("error",g),this.on=G,this.getSession=A,this.login=I,this.associateAccessToken=J,this.associateE911Id=K,this.logout=L,this.dial=P,this.addCall=Q,this.answer=S,this.hangup=T,this.cancel=U,this.reject=W,this.move=ha,this.transfer=ja,this.downgrade=ka,this.upgrade=la,this.acceptModification=ma,this.rejectModification=na,this.startConference=X,this.joinConference=$,this.endConference=ca,this.rejectConference=Z,this.addParticipant=_,this.getParticipants=aa,this.removeParticipant=ba,this.mute=da,this.unmute=ea,this.hold=fa,this.resume=ga,this.switchCall=ia,this.eventsPublished=B,this.lastEventPublished=C,this.getCalls=H,this.getMediaType=oa,this.isCallInProgress=pa,this.cleanPhoneNumber=D,this.formatNumber=E,this.getCallerInfo=F,this.sendDTMFTone=qa,this.getIceServers=ra,this.setIceServers=sa,this.resetIceServers=ta,this.getIceTransport=ua,this.setIceTransport=va,this.resetIceTransport=wa,this.getIpv6=xa,this.setIpv6=ya,this.resetIpv6=za,this.getVersion=Aa}var b=ATT["private"].factories,c=ATT["private"]["enum"],d=ATT.logManager.createLogger("phone");if(d.logDebug("Loading att.rtc.phone..."),void 0===ATT["private"])throw new Error("Error exporting ATT.private.Phone.");if(ATT["private"].Phone=a,void 0===ATT.rtc)throw new Error("Error exporting ATT.rtc.Phone.");ATT.rtc.Phone=function(){var b;return{getPhone:function(){return d.logDebug("ATT.rtc.Phone: getPhone"),void 0===b&&(b=new a),b}}}()}(),function(){"use strict";function a(a){if(i.logDebug("ATT.rtc: configure"),i.logTrace("options",a),i.logDebug("Configuring the SDK"),void 0===a||0===Object.keys(a).length)throw new Error("No options provided");h.app.setAppConfiguration(a)}function b(){return ATT.rtc.Phone.getPhone().getSession()}function c(){return b().getSupportedAudioCodecs()}function d(){return b().getPCConfiguration().audioCodec}function e(a){b().setPCConfiguration({audioCodec:a})}function f(){b().resetPCConfiguration("audioCodec")}function g(){return b().getVersion()}var h=ATT["private"].config,i=ATT.logManager.createLogger("rtc");i.logDebug("Loading att.rtc..."),ATT.rtc.getSupportedAudioCodecs=c,ATT.rtc.getAudioCodec=d,ATT.rtc.setAudioCodec=e,ATT.rtc.resetAudioCodec=f,ATT.rtc.configure=a,ATT.rtc.getVersion=g}(),function(){"use strict";var a,b=ATT.logManager.createLogger("main");return b.logDebug("Loading att.main..."),b.logInfo("Attempting to load Enhanced WebRC SDK..."),void 0===window.ATT?void b.logError("Cannot load ATT's Enhanced WebRTC SDK. ATT is not defined."):(a=window.ATT,window.ATT=void 0,"Not Supported"===a.browser.hasWebRTC()?(window.ATT={browser:a.browser},void b.logError("Failed to load ATT's Enhanced WebRTC SDK. The browser doesn't support Enhanced WebRTC")):(window.ATT=a,b.logInfo("Loading error dictionary..."),void 0===ATT.utils.createErrorDictionary?void b.logError("Failed to load error dictionary. Missing ATT.utils.createErrorDictionary."):(ATT.errorDictionary=ATT.utils.createErrorDictionary(ATT.utils.ErrorStore.SDKErrors.getAllSDKErrors(),ATT.utils.ErrorStore.APIErrors.getAllAPIErrors()),(void 0===ATT.errorDictionary||null===ATT.errorDictionary)&&b.logError("Failed to create error dictionary"),b.logInfo("Loading error dictionary complete"),void b.logInfo("Loading Enhanced WebRC SDK complete"))))}();